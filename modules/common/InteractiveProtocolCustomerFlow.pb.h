// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InteractiveProtocolCustomerFlow.proto

#ifndef PROTOBUF_InteractiveProtocolCustomerFlow_2eproto__INCLUDED
#define PROTOBUF_InteractiveProtocolCustomerFlow_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace CustomerFlow {
namespace Interactive {
namespace Message {
class AddAreaReq;
class AddAreaReqDefaultTypeInternal;
extern AddAreaReqDefaultTypeInternal _AddAreaReq_default_instance_;
class AddAreaRsp;
class AddAreaRspDefaultTypeInternal;
extern AddAreaRspDefaultTypeInternal _AddAreaRsp_default_instance_;
class AddEntranceDeviceReq;
class AddEntranceDeviceReqDefaultTypeInternal;
extern AddEntranceDeviceReqDefaultTypeInternal _AddEntranceDeviceReq_default_instance_;
class AddEntranceDeviceRsp;
class AddEntranceDeviceRspDefaultTypeInternal;
extern AddEntranceDeviceRspDefaultTypeInternal _AddEntranceDeviceRsp_default_instance_;
class AddEntranceReq;
class AddEntranceReqDefaultTypeInternal;
extern AddEntranceReqDefaultTypeInternal _AddEntranceReq_default_instance_;
class AddEntranceRsp;
class AddEntranceRspDefaultTypeInternal;
extern AddEntranceRspDefaultTypeInternal _AddEntranceRsp_default_instance_;
class AddEvaluationTemplateReq;
class AddEvaluationTemplateReqDefaultTypeInternal;
extern AddEvaluationTemplateReqDefaultTypeInternal _AddEvaluationTemplateReq_default_instance_;
class AddEvaluationTemplateRsp;
class AddEvaluationTemplateRspDefaultTypeInternal;
extern AddEvaluationTemplateRspDefaultTypeInternal _AddEvaluationTemplateRsp_default_instance_;
class AddEventReq;
class AddEventReqDefaultTypeInternal;
extern AddEventReqDefaultTypeInternal _AddEventReq_default_instance_;
class AddEventRsp;
class AddEventRspDefaultTypeInternal;
extern AddEventRspDefaultTypeInternal _AddEventRsp_default_instance_;
class AddGroupReq;
class AddGroupReqDefaultTypeInternal;
extern AddGroupReqDefaultTypeInternal _AddGroupReq_default_instance_;
class AddGroupRsp;
class AddGroupRspDefaultTypeInternal;
extern AddGroupRspDefaultTypeInternal _AddGroupRsp_default_instance_;
class AddRegularPatrolReq;
class AddRegularPatrolReqDefaultTypeInternal;
extern AddRegularPatrolReqDefaultTypeInternal _AddRegularPatrolReq_default_instance_;
class AddRegularPatrolRsp;
class AddRegularPatrolRspDefaultTypeInternal;
extern AddRegularPatrolRspDefaultTypeInternal _AddRegularPatrolRsp_default_instance_;
class AddRemotePatrolStoreReq;
class AddRemotePatrolStoreReqDefaultTypeInternal;
extern AddRemotePatrolStoreReqDefaultTypeInternal _AddRemotePatrolStoreReq_default_instance_;
class AddRemotePatrolStoreRsp;
class AddRemotePatrolStoreRspDefaultTypeInternal;
extern AddRemotePatrolStoreRspDefaultTypeInternal _AddRemotePatrolStoreRsp_default_instance_;
class AddRoleReq;
class AddRoleReqDefaultTypeInternal;
extern AddRoleReqDefaultTypeInternal _AddRoleReq_default_instance_;
class AddRoleRsp;
class AddRoleRspDefaultTypeInternal;
extern AddRoleRspDefaultTypeInternal _AddRoleRsp_default_instance_;
class AddSmartGuardStoreReq;
class AddSmartGuardStoreReqDefaultTypeInternal;
extern AddSmartGuardStoreReqDefaultTypeInternal _AddSmartGuardStoreReq_default_instance_;
class AddSmartGuardStoreRsp;
class AddSmartGuardStoreRspDefaultTypeInternal;
extern AddSmartGuardStoreRspDefaultTypeInternal _AddSmartGuardStoreRsp_default_instance_;
class AddStoreEvaluationReq;
class AddStoreEvaluationReqDefaultTypeInternal;
extern AddStoreEvaluationReqDefaultTypeInternal _AddStoreEvaluationReq_default_instance_;
class AddStoreEvaluationRsp;
class AddStoreEvaluationRspDefaultTypeInternal;
extern AddStoreEvaluationRspDefaultTypeInternal _AddStoreEvaluationRsp_default_instance_;
class AddStoreReq;
class AddStoreReqDefaultTypeInternal;
extern AddStoreReqDefaultTypeInternal _AddStoreReq_default_instance_;
class AddStoreRsp;
class AddStoreRspDefaultTypeInternal;
extern AddStoreRspDefaultTypeInternal _AddStoreRsp_default_instance_;
class AddStoreSensorReq;
class AddStoreSensorReqDefaultTypeInternal;
extern AddStoreSensorReqDefaultTypeInternal _AddStoreSensorReq_default_instance_;
class AddStoreSensorRsp;
class AddStoreSensorRspDefaultTypeInternal;
extern AddStoreSensorRspDefaultTypeInternal _AddStoreSensorRsp_default_instance_;
class AddVIPConsumeHistoryReq;
class AddVIPConsumeHistoryReqDefaultTypeInternal;
extern AddVIPConsumeHistoryReqDefaultTypeInternal _AddVIPConsumeHistoryReq_default_instance_;
class AddVIPConsumeHistoryRsp;
class AddVIPConsumeHistoryRspDefaultTypeInternal;
extern AddVIPConsumeHistoryRspDefaultTypeInternal _AddVIPConsumeHistoryRsp_default_instance_;
class AddVIPCustomerReq;
class AddVIPCustomerReqDefaultTypeInternal;
extern AddVIPCustomerReqDefaultTypeInternal _AddVIPCustomerReq_default_instance_;
class AddVIPCustomerRsp;
class AddVIPCustomerRspDefaultTypeInternal;
extern AddVIPCustomerRspDefaultTypeInternal _AddVIPCustomerRsp_default_instance_;
class Area;
class AreaDefaultTypeInternal;
extern AreaDefaultTypeInternal _Area_default_instance_;
class BindPushClientIDReq;
class BindPushClientIDReqDefaultTypeInternal;
extern BindPushClientIDReqDefaultTypeInternal _BindPushClientIDReq_default_instance_;
class BindPushClientIDRsp;
class BindPushClientIDRspDefaultTypeInternal;
extern BindPushClientIDRspDefaultTypeInternal _BindPushClientIDRsp_default_instance_;
class CustomerFlowMessage;
class CustomerFlowMessageDefaultTypeInternal;
extern CustomerFlowMessageDefaultTypeInternal _CustomerFlowMessage_default_instance_;
class CustomerFlowPreHandleReq;
class CustomerFlowPreHandleReqDefaultTypeInternal;
extern CustomerFlowPreHandleReqDefaultTypeInternal _CustomerFlowPreHandleReq_default_instance_;
class CustomerFlowPreHandleRsp;
class CustomerFlowPreHandleRspDefaultTypeInternal;
extern CustomerFlowPreHandleRspDefaultTypeInternal _CustomerFlowPreHandleRsp_default_instance_;
class DeleteAreaReq;
class DeleteAreaReqDefaultTypeInternal;
extern DeleteAreaReqDefaultTypeInternal _DeleteAreaReq_default_instance_;
class DeleteAreaRsp;
class DeleteAreaRspDefaultTypeInternal;
extern DeleteAreaRspDefaultTypeInternal _DeleteAreaRsp_default_instance_;
class DeleteEntranceDeviceReq;
class DeleteEntranceDeviceReqDefaultTypeInternal;
extern DeleteEntranceDeviceReqDefaultTypeInternal _DeleteEntranceDeviceReq_default_instance_;
class DeleteEntranceDeviceRsp;
class DeleteEntranceDeviceRspDefaultTypeInternal;
extern DeleteEntranceDeviceRspDefaultTypeInternal _DeleteEntranceDeviceRsp_default_instance_;
class DeleteEntranceReq;
class DeleteEntranceReqDefaultTypeInternal;
extern DeleteEntranceReqDefaultTypeInternal _DeleteEntranceReq_default_instance_;
class DeleteEntranceRsp;
class DeleteEntranceRspDefaultTypeInternal;
extern DeleteEntranceRspDefaultTypeInternal _DeleteEntranceRsp_default_instance_;
class DeleteEvaluationTemplateReq;
class DeleteEvaluationTemplateReqDefaultTypeInternal;
extern DeleteEvaluationTemplateReqDefaultTypeInternal _DeleteEvaluationTemplateReq_default_instance_;
class DeleteEvaluationTemplateRsp;
class DeleteEvaluationTemplateRspDefaultTypeInternal;
extern DeleteEvaluationTemplateRspDefaultTypeInternal _DeleteEvaluationTemplateRsp_default_instance_;
class DeleteEventReq;
class DeleteEventReqDefaultTypeInternal;
extern DeleteEventReqDefaultTypeInternal _DeleteEventReq_default_instance_;
class DeleteEventRsp;
class DeleteEventRspDefaultTypeInternal;
extern DeleteEventRspDefaultTypeInternal _DeleteEventRsp_default_instance_;
class DeleteGroupReq;
class DeleteGroupReqDefaultTypeInternal;
extern DeleteGroupReqDefaultTypeInternal _DeleteGroupReq_default_instance_;
class DeleteGroupRsp;
class DeleteGroupRspDefaultTypeInternal;
extern DeleteGroupRspDefaultTypeInternal _DeleteGroupRsp_default_instance_;
class DeleteRegularPatrolReq;
class DeleteRegularPatrolReqDefaultTypeInternal;
extern DeleteRegularPatrolReqDefaultTypeInternal _DeleteRegularPatrolReq_default_instance_;
class DeleteRegularPatrolRsp;
class DeleteRegularPatrolRspDefaultTypeInternal;
extern DeleteRegularPatrolRspDefaultTypeInternal _DeleteRegularPatrolRsp_default_instance_;
class DeleteRemotePatrolStoreReq;
class DeleteRemotePatrolStoreReqDefaultTypeInternal;
extern DeleteRemotePatrolStoreReqDefaultTypeInternal _DeleteRemotePatrolStoreReq_default_instance_;
class DeleteRemotePatrolStoreRsp;
class DeleteRemotePatrolStoreRspDefaultTypeInternal;
extern DeleteRemotePatrolStoreRspDefaultTypeInternal _DeleteRemotePatrolStoreRsp_default_instance_;
class DeleteSmartGuardStoreReq;
class DeleteSmartGuardStoreReqDefaultTypeInternal;
extern DeleteSmartGuardStoreReqDefaultTypeInternal _DeleteSmartGuardStoreReq_default_instance_;
class DeleteSmartGuardStoreRsp;
class DeleteSmartGuardStoreRspDefaultTypeInternal;
extern DeleteSmartGuardStoreRspDefaultTypeInternal _DeleteSmartGuardStoreRsp_default_instance_;
class DeleteStoreEvaluationReq;
class DeleteStoreEvaluationReqDefaultTypeInternal;
extern DeleteStoreEvaluationReqDefaultTypeInternal _DeleteStoreEvaluationReq_default_instance_;
class DeleteStoreEvaluationRsp;
class DeleteStoreEvaluationRspDefaultTypeInternal;
extern DeleteStoreEvaluationRspDefaultTypeInternal _DeleteStoreEvaluationRsp_default_instance_;
class DeleteStoreReq;
class DeleteStoreReqDefaultTypeInternal;
extern DeleteStoreReqDefaultTypeInternal _DeleteStoreReq_default_instance_;
class DeleteStoreRsp;
class DeleteStoreRspDefaultTypeInternal;
extern DeleteStoreRspDefaultTypeInternal _DeleteStoreRsp_default_instance_;
class DeleteStoreSensorReq;
class DeleteStoreSensorReqDefaultTypeInternal;
extern DeleteStoreSensorReqDefaultTypeInternal _DeleteStoreSensorReq_default_instance_;
class DeleteStoreSensorRsp;
class DeleteStoreSensorRspDefaultTypeInternal;
extern DeleteStoreSensorRspDefaultTypeInternal _DeleteStoreSensorRsp_default_instance_;
class DeleteVIPConsumeHistoryReq;
class DeleteVIPConsumeHistoryReqDefaultTypeInternal;
extern DeleteVIPConsumeHistoryReqDefaultTypeInternal _DeleteVIPConsumeHistoryReq_default_instance_;
class DeleteVIPConsumeHistoryRsp;
class DeleteVIPConsumeHistoryRspDefaultTypeInternal;
extern DeleteVIPConsumeHistoryRspDefaultTypeInternal _DeleteVIPConsumeHistoryRsp_default_instance_;
class DeleteVIPCustomerReq;
class DeleteVIPCustomerReqDefaultTypeInternal;
extern DeleteVIPCustomerReqDefaultTypeInternal _DeleteVIPCustomerReq_default_instance_;
class DeleteVIPCustomerRsp;
class DeleteVIPCustomerRspDefaultTypeInternal;
extern DeleteVIPCustomerRspDefaultTypeInternal _DeleteVIPCustomerRsp_default_instance_;
class Entrance;
class EntranceDefaultTypeInternal;
extern EntranceDefaultTypeInternal _Entrance_default_instance_;
class EntrancePicture;
class EntrancePictureDefaultTypeInternal;
extern EntrancePictureDefaultTypeInternal _EntrancePicture_default_instance_;
class EvaluationItem;
class EvaluationItemDefaultTypeInternal;
extern EvaluationItemDefaultTypeInternal _EvaluationItem_default_instance_;
class EvaluationItemScore;
class EvaluationItemScoreDefaultTypeInternal;
extern EvaluationItemScoreDefaultTypeInternal _EvaluationItemScore_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class Group;
class GroupDefaultTypeInternal;
extern GroupDefaultTypeInternal _Group_default_instance_;
class ImportPOSDataReq;
class ImportPOSDataReqDefaultTypeInternal;
extern ImportPOSDataReqDefaultTypeInternal _ImportPOSDataReq_default_instance_;
class ImportPOSDataRsp;
class ImportPOSDataRspDefaultTypeInternal;
extern ImportPOSDataRspDefaultTypeInternal _ImportPOSDataRsp_default_instance_;
class ModifyAreaReq;
class ModifyAreaReqDefaultTypeInternal;
extern ModifyAreaReqDefaultTypeInternal _ModifyAreaReq_default_instance_;
class ModifyAreaRsp;
class ModifyAreaRspDefaultTypeInternal;
extern ModifyAreaRspDefaultTypeInternal _ModifyAreaRsp_default_instance_;
class ModifyEntranceReq;
class ModifyEntranceReqDefaultTypeInternal;
extern ModifyEntranceReqDefaultTypeInternal _ModifyEntranceReq_default_instance_;
class ModifyEntranceRsp;
class ModifyEntranceRspDefaultTypeInternal;
extern ModifyEntranceRspDefaultTypeInternal _ModifyEntranceRsp_default_instance_;
class ModifyEvaluationTemplateReq;
class ModifyEvaluationTemplateReqDefaultTypeInternal;
extern ModifyEvaluationTemplateReqDefaultTypeInternal _ModifyEvaluationTemplateReq_default_instance_;
class ModifyEvaluationTemplateRsp;
class ModifyEvaluationTemplateRspDefaultTypeInternal;
extern ModifyEvaluationTemplateRspDefaultTypeInternal _ModifyEvaluationTemplateRsp_default_instance_;
class ModifyEventReq;
class ModifyEventReqDefaultTypeInternal;
extern ModifyEventReqDefaultTypeInternal _ModifyEventReq_default_instance_;
class ModifyEventRsp;
class ModifyEventRspDefaultTypeInternal;
extern ModifyEventRspDefaultTypeInternal _ModifyEventRsp_default_instance_;
class ModifyGroupReq;
class ModifyGroupReqDefaultTypeInternal;
extern ModifyGroupReqDefaultTypeInternal _ModifyGroupReq_default_instance_;
class ModifyGroupRsp;
class ModifyGroupRspDefaultTypeInternal;
extern ModifyGroupRspDefaultTypeInternal _ModifyGroupRsp_default_instance_;
class ModifyRegularPatrolReq;
class ModifyRegularPatrolReqDefaultTypeInternal;
extern ModifyRegularPatrolReqDefaultTypeInternal _ModifyRegularPatrolReq_default_instance_;
class ModifyRegularPatrolRsp;
class ModifyRegularPatrolRspDefaultTypeInternal;
extern ModifyRegularPatrolRspDefaultTypeInternal _ModifyRegularPatrolRsp_default_instance_;
class ModifyRemotePatrolStoreReq;
class ModifyRemotePatrolStoreReqDefaultTypeInternal;
extern ModifyRemotePatrolStoreReqDefaultTypeInternal _ModifyRemotePatrolStoreReq_default_instance_;
class ModifyRemotePatrolStoreRsp;
class ModifyRemotePatrolStoreRspDefaultTypeInternal;
extern ModifyRemotePatrolStoreRspDefaultTypeInternal _ModifyRemotePatrolStoreRsp_default_instance_;
class ModifyRoleReq;
class ModifyRoleReqDefaultTypeInternal;
extern ModifyRoleReqDefaultTypeInternal _ModifyRoleReq_default_instance_;
class ModifyRoleRsp;
class ModifyRoleRspDefaultTypeInternal;
extern ModifyRoleRspDefaultTypeInternal _ModifyRoleRsp_default_instance_;
class ModifySmartGuardStoreReq;
class ModifySmartGuardStoreReqDefaultTypeInternal;
extern ModifySmartGuardStoreReqDefaultTypeInternal _ModifySmartGuardStoreReq_default_instance_;
class ModifySmartGuardStoreRsp;
class ModifySmartGuardStoreRspDefaultTypeInternal;
extern ModifySmartGuardStoreRspDefaultTypeInternal _ModifySmartGuardStoreRsp_default_instance_;
class ModifyStoreEvaluationReq;
class ModifyStoreEvaluationReqDefaultTypeInternal;
extern ModifyStoreEvaluationReqDefaultTypeInternal _ModifyStoreEvaluationReq_default_instance_;
class ModifyStoreEvaluationRsp;
class ModifyStoreEvaluationRspDefaultTypeInternal;
extern ModifyStoreEvaluationRspDefaultTypeInternal _ModifyStoreEvaluationRsp_default_instance_;
class ModifyStoreReq;
class ModifyStoreReqDefaultTypeInternal;
extern ModifyStoreReqDefaultTypeInternal _ModifyStoreReq_default_instance_;
class ModifyStoreRsp;
class ModifyStoreRspDefaultTypeInternal;
extern ModifyStoreRspDefaultTypeInternal _ModifyStoreRsp_default_instance_;
class ModifyStoreSensorReq;
class ModifyStoreSensorReqDefaultTypeInternal;
extern ModifyStoreSensorReqDefaultTypeInternal _ModifyStoreSensorReq_default_instance_;
class ModifyStoreSensorRsp;
class ModifyStoreSensorRspDefaultTypeInternal;
extern ModifyStoreSensorRspDefaultTypeInternal _ModifyStoreSensorRsp_default_instance_;
class ModifyVIPConsumeHistoryReq;
class ModifyVIPConsumeHistoryReqDefaultTypeInternal;
extern ModifyVIPConsumeHistoryReqDefaultTypeInternal _ModifyVIPConsumeHistoryReq_default_instance_;
class ModifyVIPConsumeHistoryRsp;
class ModifyVIPConsumeHistoryRspDefaultTypeInternal;
extern ModifyVIPConsumeHistoryRspDefaultTypeInternal _ModifyVIPConsumeHistoryRsp_default_instance_;
class ModifyVIPCustomerReq;
class ModifyVIPCustomerReqDefaultTypeInternal;
extern ModifyVIPCustomerReqDefaultTypeInternal _ModifyVIPCustomerReq_default_instance_;
class ModifyVIPCustomerRsp;
class ModifyVIPCustomerRspDefaultTypeInternal;
extern ModifyVIPCustomerRspDefaultTypeInternal _ModifyVIPCustomerRsp_default_instance_;
class PatrolStoreEntrance;
class PatrolStoreEntranceDefaultTypeInternal;
extern PatrolStoreEntranceDefaultTypeInternal _PatrolStoreEntrance_default_instance_;
class Permission;
class PermissionDefaultTypeInternal;
extern PermissionDefaultTypeInternal _Permission_default_instance_;
class QueryAllAreaReq;
class QueryAllAreaReqDefaultTypeInternal;
extern QueryAllAreaReqDefaultTypeInternal _QueryAllAreaReq_default_instance_;
class QueryAllAreaRsp;
class QueryAllAreaRspDefaultTypeInternal;
extern QueryAllAreaRspDefaultTypeInternal _QueryAllAreaRsp_default_instance_;
class QueryAllEvaluationTemplateReq;
class QueryAllEvaluationTemplateReqDefaultTypeInternal;
extern QueryAllEvaluationTemplateReqDefaultTypeInternal _QueryAllEvaluationTemplateReq_default_instance_;
class QueryAllEvaluationTemplateRsp;
class QueryAllEvaluationTemplateRspDefaultTypeInternal;
extern QueryAllEvaluationTemplateRspDefaultTypeInternal _QueryAllEvaluationTemplateRsp_default_instance_;
class QueryAllEventReq;
class QueryAllEventReqDefaultTypeInternal;
extern QueryAllEventReqDefaultTypeInternal _QueryAllEventReq_default_instance_;
class QueryAllEventRsp;
class QueryAllEventRspDefaultTypeInternal;
extern QueryAllEventRspDefaultTypeInternal _QueryAllEventRsp_default_instance_;
class QueryAllGroupReq;
class QueryAllGroupReqDefaultTypeInternal;
extern QueryAllGroupReqDefaultTypeInternal _QueryAllGroupReq_default_instance_;
class QueryAllGroupRsp;
class QueryAllGroupRspDefaultTypeInternal;
extern QueryAllGroupRspDefaultTypeInternal _QueryAllGroupRsp_default_instance_;
class QueryAllRegularPatrolReq;
class QueryAllRegularPatrolReqDefaultTypeInternal;
extern QueryAllRegularPatrolReqDefaultTypeInternal _QueryAllRegularPatrolReq_default_instance_;
class QueryAllRegularPatrolRsp;
class QueryAllRegularPatrolRspDefaultTypeInternal;
extern QueryAllRegularPatrolRspDefaultTypeInternal _QueryAllRegularPatrolRsp_default_instance_;
class QueryAllRemotePatrolStoreReq;
class QueryAllRemotePatrolStoreReqDefaultTypeInternal;
extern QueryAllRemotePatrolStoreReqDefaultTypeInternal _QueryAllRemotePatrolStoreReq_default_instance_;
class QueryAllRemotePatrolStoreRsp;
class QueryAllRemotePatrolStoreRspDefaultTypeInternal;
extern QueryAllRemotePatrolStoreRspDefaultTypeInternal _QueryAllRemotePatrolStoreRsp_default_instance_;
class QueryAllRoleReq;
class QueryAllRoleReqDefaultTypeInternal;
extern QueryAllRoleReqDefaultTypeInternal _QueryAllRoleReq_default_instance_;
class QueryAllRoleRsp;
class QueryAllRoleRspDefaultTypeInternal;
extern QueryAllRoleRspDefaultTypeInternal _QueryAllRoleRsp_default_instance_;
class QueryAllSmartGuardStoreReq;
class QueryAllSmartGuardStoreReqDefaultTypeInternal;
extern QueryAllSmartGuardStoreReqDefaultTypeInternal _QueryAllSmartGuardStoreReq_default_instance_;
class QueryAllSmartGuardStoreRsp;
class QueryAllSmartGuardStoreRspDefaultTypeInternal;
extern QueryAllSmartGuardStoreRspDefaultTypeInternal _QueryAllSmartGuardStoreRsp_default_instance_;
class QueryAllStoreEvaluationReq;
class QueryAllStoreEvaluationReqDefaultTypeInternal;
extern QueryAllStoreEvaluationReqDefaultTypeInternal _QueryAllStoreEvaluationReq_default_instance_;
class QueryAllStoreEvaluationRsp;
class QueryAllStoreEvaluationRspDefaultTypeInternal;
extern QueryAllStoreEvaluationRspDefaultTypeInternal _QueryAllStoreEvaluationRsp_default_instance_;
class QueryAllStoreReq;
class QueryAllStoreReqDefaultTypeInternal;
extern QueryAllStoreReqDefaultTypeInternal _QueryAllStoreReq_default_instance_;
class QueryAllStoreRsp;
class QueryAllStoreRspDefaultTypeInternal;
extern QueryAllStoreRspDefaultTypeInternal _QueryAllStoreRsp_default_instance_;
class QueryAllStoreSensorReq;
class QueryAllStoreSensorReqDefaultTypeInternal;
extern QueryAllStoreSensorReqDefaultTypeInternal _QueryAllStoreSensorReq_default_instance_;
class QueryAllStoreSensorRsp;
class QueryAllStoreSensorRspDefaultTypeInternal;
extern QueryAllStoreSensorRspDefaultTypeInternal _QueryAllStoreSensorRsp_default_instance_;
class QueryAllVIPConsumeHistoryReq;
class QueryAllVIPConsumeHistoryReqDefaultTypeInternal;
extern QueryAllVIPConsumeHistoryReqDefaultTypeInternal _QueryAllVIPConsumeHistoryReq_default_instance_;
class QueryAllVIPConsumeHistoryRsp;
class QueryAllVIPConsumeHistoryRspDefaultTypeInternal;
extern QueryAllVIPConsumeHistoryRspDefaultTypeInternal _QueryAllVIPConsumeHistoryRsp_default_instance_;
class QueryAllVIPCustomerReq;
class QueryAllVIPCustomerReqDefaultTypeInternal;
extern QueryAllVIPCustomerReqDefaultTypeInternal _QueryAllVIPCustomerReq_default_instance_;
class QueryAllVIPCustomerRsp;
class QueryAllVIPCustomerRspDefaultTypeInternal;
extern QueryAllVIPCustomerRspDefaultTypeInternal _QueryAllVIPCustomerRsp_default_instance_;
class QueryAreaInfoReq;
class QueryAreaInfoReqDefaultTypeInternal;
extern QueryAreaInfoReqDefaultTypeInternal _QueryAreaInfoReq_default_instance_;
class QueryAreaInfoRsp;
class QueryAreaInfoRspDefaultTypeInternal;
extern QueryAreaInfoRspDefaultTypeInternal _QueryAreaInfoRsp_default_instance_;
class QueryCompanyAllUserReq;
class QueryCompanyAllUserReqDefaultTypeInternal;
extern QueryCompanyAllUserReqDefaultTypeInternal _QueryCompanyAllUserReq_default_instance_;
class QueryCompanyAllUserRsp;
class QueryCompanyAllUserRspDefaultTypeInternal;
extern QueryCompanyAllUserRspDefaultTypeInternal _QueryCompanyAllUserRsp_default_instance_;
class QueryCustomerFlowStatisticReq;
class QueryCustomerFlowStatisticReqDefaultTypeInternal;
extern QueryCustomerFlowStatisticReqDefaultTypeInternal _QueryCustomerFlowStatisticReq_default_instance_;
class QueryCustomerFlowStatisticRsp;
class QueryCustomerFlowStatisticRspDefaultTypeInternal;
extern QueryCustomerFlowStatisticRspDefaultTypeInternal _QueryCustomerFlowStatisticRsp_default_instance_;
class QueryEventInfoReq;
class QueryEventInfoReqDefaultTypeInternal;
extern QueryEventInfoReqDefaultTypeInternal _QueryEventInfoReq_default_instance_;
class QueryEventInfoRsp;
class QueryEventInfoRspDefaultTypeInternal;
extern QueryEventInfoRspDefaultTypeInternal _QueryEventInfoRsp_default_instance_;
class QueryGroupInfoReq;
class QueryGroupInfoReqDefaultTypeInternal;
extern QueryGroupInfoReqDefaultTypeInternal _QueryGroupInfoReq_default_instance_;
class QueryGroupInfoRsp;
class QueryGroupInfoRspDefaultTypeInternal;
extern QueryGroupInfoRspDefaultTypeInternal _QueryGroupInfoRsp_default_instance_;
class QueryPatrolResultReportReq;
class QueryPatrolResultReportReqDefaultTypeInternal;
extern QueryPatrolResultReportReqDefaultTypeInternal _QueryPatrolResultReportReq_default_instance_;
class QueryPatrolResultReportRsp;
class QueryPatrolResultReportRspDefaultTypeInternal;
extern QueryPatrolResultReportRspDefaultTypeInternal _QueryPatrolResultReportRsp_default_instance_;
class QueryRegularPatrolInfoReq;
class QueryRegularPatrolInfoReqDefaultTypeInternal;
extern QueryRegularPatrolInfoReqDefaultTypeInternal _QueryRegularPatrolInfoReq_default_instance_;
class QueryRegularPatrolInfoRsp;
class QueryRegularPatrolInfoRspDefaultTypeInternal;
extern QueryRegularPatrolInfoRspDefaultTypeInternal _QueryRegularPatrolInfoRsp_default_instance_;
class QueryRemotePatrolStoreInfoReq;
class QueryRemotePatrolStoreInfoReqDefaultTypeInternal;
extern QueryRemotePatrolStoreInfoReqDefaultTypeInternal _QueryRemotePatrolStoreInfoReq_default_instance_;
class QueryRemotePatrolStoreInfoRsp;
class QueryRemotePatrolStoreInfoRspDefaultTypeInternal;
extern QueryRemotePatrolStoreInfoRspDefaultTypeInternal _QueryRemotePatrolStoreInfoRsp_default_instance_;
class QueryRoleReq;
class QueryRoleReqDefaultTypeInternal;
extern QueryRoleReqDefaultTypeInternal _QueryRoleReq_default_instance_;
class QueryRoleRsp;
class QueryRoleRspDefaultTypeInternal;
extern QueryRoleRspDefaultTypeInternal _QueryRoleRsp_default_instance_;
class QuerySensorAlarmRecordsReq;
class QuerySensorAlarmRecordsReqDefaultTypeInternal;
extern QuerySensorAlarmRecordsReqDefaultTypeInternal _QuerySensorAlarmRecordsReq_default_instance_;
class QuerySensorAlarmRecordsRsp;
class QuerySensorAlarmRecordsRspDefaultTypeInternal;
extern QuerySensorAlarmRecordsRspDefaultTypeInternal _QuerySensorAlarmRecordsRsp_default_instance_;
class QuerySensorAlarmThresholdReq;
class QuerySensorAlarmThresholdReqDefaultTypeInternal;
extern QuerySensorAlarmThresholdReqDefaultTypeInternal _QuerySensorAlarmThresholdReq_default_instance_;
class QuerySensorAlarmThresholdRsp;
class QuerySensorAlarmThresholdRspDefaultTypeInternal;
extern QuerySensorAlarmThresholdRspDefaultTypeInternal _QuerySensorAlarmThresholdRsp_default_instance_;
class QuerySensorRecordsReq;
class QuerySensorRecordsReqDefaultTypeInternal;
extern QuerySensorRecordsReqDefaultTypeInternal _QuerySensorRecordsReq_default_instance_;
class QuerySensorRecordsRsp;
class QuerySensorRecordsRspDefaultTypeInternal;
extern QuerySensorRecordsRspDefaultTypeInternal _QuerySensorRecordsRsp_default_instance_;
class QuerySmartGuardStoreInfoReq;
class QuerySmartGuardStoreInfoReqDefaultTypeInternal;
extern QuerySmartGuardStoreInfoReqDefaultTypeInternal _QuerySmartGuardStoreInfoReq_default_instance_;
class QuerySmartGuardStoreInfoRsp;
class QuerySmartGuardStoreInfoRspDefaultTypeInternal;
extern QuerySmartGuardStoreInfoRspDefaultTypeInternal _QuerySmartGuardStoreInfoRsp_default_instance_;
class QueryStoreAllUserReq;
class QueryStoreAllUserReqDefaultTypeInternal;
extern QueryStoreAllUserReqDefaultTypeInternal _QueryStoreAllUserReq_default_instance_;
class QueryStoreAllUserRsp;
class QueryStoreAllUserRspDefaultTypeInternal;
extern QueryStoreAllUserRspDefaultTypeInternal _QueryStoreAllUserRsp_default_instance_;
class QueryStoreEvaluationInfoReq;
class QueryStoreEvaluationInfoReqDefaultTypeInternal;
extern QueryStoreEvaluationInfoReqDefaultTypeInternal _QueryStoreEvaluationInfoReq_default_instance_;
class QueryStoreEvaluationInfoRsp;
class QueryStoreEvaluationInfoRspDefaultTypeInternal;
extern QueryStoreEvaluationInfoRspDefaultTypeInternal _QueryStoreEvaluationInfoRsp_default_instance_;
class QueryStoreInfoReq;
class QueryStoreInfoReqDefaultTypeInternal;
extern QueryStoreInfoReqDefaultTypeInternal _QueryStoreInfoReq_default_instance_;
class QueryStoreInfoRsp;
class QueryStoreInfoRspDefaultTypeInternal;
extern QueryStoreInfoRspDefaultTypeInternal _QueryStoreInfoRsp_default_instance_;
class QueryStoreSensorInfoReq;
class QueryStoreSensorInfoReqDefaultTypeInternal;
extern QueryStoreSensorInfoReqDefaultTypeInternal _QueryStoreSensorInfoReq_default_instance_;
class QueryStoreSensorInfoRsp;
class QueryStoreSensorInfoRspDefaultTypeInternal;
extern QueryStoreSensorInfoRspDefaultTypeInternal _QueryStoreSensorInfoRsp_default_instance_;
class QueryVIPCustomerInfoReq;
class QueryVIPCustomerInfoReqDefaultTypeInternal;
extern QueryVIPCustomerInfoReqDefaultTypeInternal _QueryVIPCustomerInfoReq_default_instance_;
class QueryVIPCustomerInfoRsp;
class QueryVIPCustomerInfoRspDefaultTypeInternal;
extern QueryVIPCustomerInfoRspDefaultTypeInternal _QueryVIPCustomerInfoRsp_default_instance_;
class RawCustomerFlow;
class RawCustomerFlowDefaultTypeInternal;
extern RawCustomerFlowDefaultTypeInternal _RawCustomerFlow_default_instance_;
class RegularPatrol;
class RegularPatrolDefaultTypeInternal;
extern RegularPatrolDefaultTypeInternal _RegularPatrol_default_instance_;
class RemotePatrolStore;
class RemotePatrolStoreDefaultTypeInternal;
extern RemotePatrolStoreDefaultTypeInternal _RemotePatrolStore_default_instance_;
class RemoveRoleReq;
class RemoveRoleReqDefaultTypeInternal;
extern RemoveRoleReqDefaultTypeInternal _RemoveRoleReq_default_instance_;
class RemoveRoleRsp;
class RemoveRoleRspDefaultTypeInternal;
extern RemoveRoleRspDefaultTypeInternal _RemoveRoleRsp_default_instance_;
class RemoveSensorAlarmRecordsReq;
class RemoveSensorAlarmRecordsReqDefaultTypeInternal;
extern RemoveSensorAlarmRecordsReqDefaultTypeInternal _RemoveSensorAlarmRecordsReq_default_instance_;
class RemoveSensorAlarmRecordsRsp;
class RemoveSensorAlarmRecordsRspDefaultTypeInternal;
extern RemoveSensorAlarmRecordsRspDefaultTypeInternal _RemoveSensorAlarmRecordsRsp_default_instance_;
class RemoveSensorRecordsReq;
class RemoveSensorRecordsReqDefaultTypeInternal;
extern RemoveSensorRecordsReqDefaultTypeInternal _RemoveSensorRecordsReq_default_instance_;
class RemoveSensorRecordsRsp;
class RemoveSensorRecordsRspDefaultTypeInternal;
extern RemoveSensorRecordsRspDefaultTypeInternal _RemoveSensorRecordsRsp_default_instance_;
class ReportCustomerFlowDataReq;
class ReportCustomerFlowDataReqDefaultTypeInternal;
extern ReportCustomerFlowDataReqDefaultTypeInternal _ReportCustomerFlowDataReq_default_instance_;
class ReportCustomerFlowDataRsp;
class ReportCustomerFlowDataRspDefaultTypeInternal;
extern ReportCustomerFlowDataRspDefaultTypeInternal _ReportCustomerFlowDataRsp_default_instance_;
class ReportSensorAlarmInfoReq;
class ReportSensorAlarmInfoReqDefaultTypeInternal;
extern ReportSensorAlarmInfoReqDefaultTypeInternal _ReportSensorAlarmInfoReq_default_instance_;
class ReportSensorAlarmInfoRsp;
class ReportSensorAlarmInfoRspDefaultTypeInternal;
extern ReportSensorAlarmInfoRspDefaultTypeInternal _ReportSensorAlarmInfoRsp_default_instance_;
class ReportSensorInfoReq;
class ReportSensorInfoReqDefaultTypeInternal;
extern ReportSensorInfoReqDefaultTypeInternal _ReportSensorInfoReq_default_instance_;
class ReportSensorInfoRsp;
class ReportSensorInfoRspDefaultTypeInternal;
extern ReportSensorInfoRspDefaultTypeInternal _ReportSensorInfoRsp_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Role;
class RoleDefaultTypeInternal;
extern RoleDefaultTypeInternal _Role_default_instance_;
class Sensor;
class SensorDefaultTypeInternal;
extern SensorDefaultTypeInternal _Sensor_default_instance_;
class SensorAlarmRecord;
class SensorAlarmRecordDefaultTypeInternal;
extern SensorAlarmRecordDefaultTypeInternal _SensorAlarmRecord_default_instance_;
class ShakehandReq;
class ShakehandReqDefaultTypeInternal;
extern ShakehandReqDefaultTypeInternal _ShakehandReq_default_instance_;
class ShakehandRsp;
class ShakehandRspDefaultTypeInternal;
extern ShakehandRspDefaultTypeInternal _ShakehandRsp_default_instance_;
class SmartGuardStore;
class SmartGuardStoreDefaultTypeInternal;
extern SmartGuardStoreDefaultTypeInternal _SmartGuardStore_default_instance_;
class Store;
class StoreDefaultTypeInternal;
extern StoreDefaultTypeInternal _Store_default_instance_;
class StoreEvaluation;
class StoreEvaluationDefaultTypeInternal;
extern StoreEvaluationDefaultTypeInternal _StoreEvaluation_default_instance_;
class UnbindPushClientIDReq;
class UnbindPushClientIDReqDefaultTypeInternal;
extern UnbindPushClientIDReqDefaultTypeInternal _UnbindPushClientIDReq_default_instance_;
class UnbindPushClientIDRsp;
class UnbindPushClientIDRspDefaultTypeInternal;
extern UnbindPushClientIDRspDefaultTypeInternal _UnbindPushClientIDRsp_default_instance_;
class UserBindRoleReq;
class UserBindRoleReqDefaultTypeInternal;
extern UserBindRoleReqDefaultTypeInternal _UserBindRoleReq_default_instance_;
class UserBindRoleRsp;
class UserBindRoleRspDefaultTypeInternal;
extern UserBindRoleRspDefaultTypeInternal _UserBindRoleRsp_default_instance_;
class UserBrief;
class UserBriefDefaultTypeInternal;
extern UserBriefDefaultTypeInternal _UserBrief_default_instance_;
class UserGroupAssociation;
class UserGroupAssociationDefaultTypeInternal;
extern UserGroupAssociationDefaultTypeInternal _UserGroupAssociation_default_instance_;
class UserJoinStoreReq;
class UserJoinStoreReqDefaultTypeInternal;
extern UserJoinStoreReqDefaultTypeInternal _UserJoinStoreReq_default_instance_;
class UserJoinStoreRsp;
class UserJoinStoreRspDefaultTypeInternal;
extern UserJoinStoreRspDefaultTypeInternal _UserJoinStoreRsp_default_instance_;
class UserQuitStoreReq;
class UserQuitStoreReqDefaultTypeInternal;
extern UserQuitStoreReqDefaultTypeInternal _UserQuitStoreReq_default_instance_;
class UserQuitStoreRsp;
class UserQuitStoreRspDefaultTypeInternal;
extern UserQuitStoreRspDefaultTypeInternal _UserQuitStoreRsp_default_instance_;
class UserStoreAssociation;
class UserStoreAssociationDefaultTypeInternal;
extern UserStoreAssociationDefaultTypeInternal _UserStoreAssociation_default_instance_;
class VIPConsumeHistory;
class VIPConsumeHistoryDefaultTypeInternal;
extern VIPConsumeHistoryDefaultTypeInternal _VIPConsumeHistory_default_instance_;
class VIPCustomer;
class VIPCustomerDefaultTypeInternal;
extern VIPCustomerDefaultTypeInternal _VIPCustomer_default_instance_;
}  // namespace Message
}  // namespace Interactive
}  // namespace CustomerFlow

namespace CustomerFlow {
namespace Interactive {
namespace Message {

namespace protobuf_InteractiveProtocolCustomerFlow_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_InteractiveProtocolCustomerFlow_2eproto

enum CustomerFlowMsgType {
  Init_T = 0,
  CustomerFlowPreHandleReq_T = 9000,
  CustomerFlowPreHandleRsp_T = 9010,
  ShakehandReq_T = 9100,
  ShakehandRsp_T = 9110,
  AddGroupReq_T = 10000,
  AddGroupRsp_T = 10010,
  DeleteGroupReq_T = 10020,
  DeleteGroupRsp_T = 10030,
  ModifyGroupReq_T = 10040,
  ModifyGroupRsp_T = 10050,
  QueryGroupInfoReq_T = 10060,
  QueryGroupInfoRsp_T = 10070,
  QueryAllGroupReq_T = 10080,
  QueryAllGroupRsp_T = 10090,
  AddStoreReq_T = 10100,
  AddStoreRsp_T = 10110,
  DeleteStoreReq_T = 10120,
  DeleteStoreRsp_T = 10130,
  ModifyStoreReq_T = 10140,
  ModifyStoreRsp_T = 10150,
  QueryStoreInfoReq_T = 10160,
  QueryStoreInfoRsp_T = 10170,
  QueryAllStoreReq_T = 10180,
  QueryAllStoreRsp_T = 10190,
  AddEntranceReq_T = 10200,
  AddEntranceRsp_T = 10210,
  DeleteEntranceReq_T = 10220,
  DeleteEntranceRsp_T = 10230,
  ModifyEntranceReq_T = 10240,
  ModifyEntranceRsp_T = 10250,
  AddEntranceDeviceReq_T = 10260,
  AddEntranceDeviceRsp_T = 10270,
  DeleteEntranceDeviceReq_T = 10280,
  DeleteEntranceDeviceRsp_T = 10290,
  AddEventReq_T = 10340,
  AddEventRsp_T = 10350,
  DeleteEventReq_T = 10360,
  DeleteEventRsp_T = 10370,
  ModifyEventReq_T = 10380,
  ModifyEventRsp_T = 10390,
  QueryEventInfoReq_T = 10400,
  QueryEventInfoRsp_T = 10410,
  QueryAllEventReq_T = 10420,
  QueryAllEventRsp_T = 10430,
  AddSmartGuardStoreReq_T = 10440,
  AddSmartGuardStoreRsp_T = 10450,
  DeleteSmartGuardStoreReq_T = 10460,
  DeleteSmartGuardStoreRsp_T = 10470,
  ModifySmartGuardStoreReq_T = 10480,
  ModifySmartGuardStoreRsp_T = 10490,
  QuerySmartGuardStoreInfoReq_T = 10500,
  QuerySmartGuardStoreInfoRsp_T = 10510,
  QueryAllSmartGuardStoreReq_T = 10520,
  QueryAllSmartGuardStoreRsp_T = 10530,
  AddRegularPatrolReq_T = 10540,
  AddRegularPatrolRsp_T = 10550,
  DeleteRegularPatrolReq_T = 10560,
  DeleteRegularPatrolRsp_T = 10570,
  ModifyRegularPatrolReq_T = 10580,
  ModifyRegularPatrolRsp_T = 10590,
  QueryRegularPatrolInfoReq_T = 10600,
  QueryRegularPatrolInfoRsp_T = 10610,
  QueryAllRegularPatrolReq_T = 10620,
  QueryAllRegularPatrolRsp_T = 10630,
  UserJoinStoreReq_T = 10700,
  UserJoinStoreRsp_T = 10710,
  UserQuitStoreReq_T = 10720,
  UserQuitStoreRsp_T = 10730,
  QueryStoreAllUserReq_T = 10740,
  QueryStoreAllUserRsp_T = 10750,
  QueryCompanyAllUserReq_T = 10760,
  QueryCompanyAllUserRsp_T = 10770,
  AddVIPCustomerReq_T = 18000,
  AddVIPCustomerRsp_T = 18010,
  DeleteVIPCustomerReq_T = 18020,
  DeleteVIPCustomerRsp_T = 18030,
  ModifyVIPCustomerReq_T = 18040,
  ModifyVIPCustomerRsp_T = 18050,
  QueryVIPCustomerInfoReq_T = 18060,
  QueryVIPCustomerInfoRsp_T = 18070,
  QueryAllVIPCustomerReq_T = 18080,
  QueryAllVIPCustomerRsp_T = 18090,
  AddVIPConsumeHistoryReq_T = 18100,
  AddVIPConsumeHistoryRsp_T = 18110,
  DeleteVIPConsumeHistoryReq_T = 18120,
  DeleteVIPConsumeHistoryRsp_T = 18130,
  ModifyVIPConsumeHistoryReq_T = 18140,
  ModifyVIPConsumeHistoryRsp_T = 18150,
  QueryAllVIPConsumeHistoryReq_T = 18160,
  QueryAllVIPConsumeHistoryRsp_T = 18170,
  AddEvaluationTemplateReq_T = 18200,
  AddEvaluationTemplateRsp_T = 18210,
  DeleteEvaluationTemplateReq_T = 18220,
  DeleteEvaluationTemplateRsp_T = 18230,
  ModifyEvaluationTemplateReq_T = 18240,
  ModifyEvaluationTemplateRsp_T = 18250,
  QueryAllEvaluationTemplateReq_T = 18260,
  QueryAllEvaluationTemplateRsp_T = 18270,
  AddStoreEvaluationReq_T = 18300,
  AddStoreEvaluationRsp_T = 18310,
  DeleteStoreEvaluationReq_T = 18320,
  DeleteStoreEvaluationRsp_T = 18330,
  ModifyStoreEvaluationReq_T = 18340,
  ModifyStoreEvaluationRsp_T = 18350,
  QueryStoreEvaluationInfoReq_T = 18360,
  QueryStoreEvaluationInfoRsp_T = 18370,
  QueryAllStoreEvaluationReq_T = 18380,
  QueryAllStoreEvaluationRsp_T = 18390,
  AddRemotePatrolStoreReq_T = 18400,
  AddRemotePatrolStoreRsp_T = 18410,
  DeleteRemotePatrolStoreReq_T = 18420,
  DeleteRemotePatrolStoreRsp_T = 18430,
  ModifyRemotePatrolStoreReq_T = 18440,
  ModifyRemotePatrolStoreRsp_T = 18450,
  QueryRemotePatrolStoreInfoReq_T = 18460,
  QueryRemotePatrolStoreInfoRsp_T = 18470,
  QueryAllRemotePatrolStoreReq_T = 18480,
  QueryAllRemotePatrolStoreRsp_T = 18490,
  AddAreaReq_T = 19000,
  AddAreaRsp_T = 19010,
  DeleteAreaReq_T = 19020,
  DeleteAreaRsp_T = 19030,
  ModifyAreaReq_T = 19040,
  ModifyAreaRsp_T = 19050,
  QueryAreaInfoReq_T = 19060,
  QueryAreaInfoRsp_T = 19070,
  QueryAllAreaReq_T = 19080,
  QueryAllAreaRsp_T = 19090,
  BindPushClientIDReq_T = 19100,
  BindPushClientIDRsp_T = 19110,
  UnbindPushClientIDReq_T = 19120,
  UnbindPushClientIDRsp_T = 19130,
  AddStoreSensorReq_T = 19200,
  AddStoreSensorRsp_T = 19210,
  DeleteStoreSensorReq_T = 19220,
  DeleteStoreSensorRsp_T = 19230,
  ModifyStoreSensorReq_T = 19240,
  ModifyStoreSensorRsp_T = 19250,
  QueryStoreSensorInfoReq_T = 19260,
  QueryStoreSensorInfoRsp_T = 19270,
  QueryAllStoreSensorReq_T = 19280,
  QueryAllStoreSensorRsp_T = 19290,
  ImportPOSDataReq_T = 20000,
  ImportPOSDataRsp_T = 20010,
  QueryCustomerFlowStatisticReq_T = 20900,
  QueryCustomerFlowStatisticRsp_T = 20910,
  QueryPatrolResultReportReq_T = 21000,
  QueryPatrolResultReportRsp_T = 21010,
  ReportCustomerFlowDataReq_T = 30000,
  ReportCustomerFlowDataRsp_T = 30010,
  ReportSensorInfoReq_T = 30100,
  ReportSensorInfoRsp_T = 30110,
  ReportSensorAlarmInfoReq_T = 30120,
  ReportSensorAlarmInfoRsp_T = 30130,
  QuerySensorAlarmThresholdReq_T = 30140,
  QuerySensorAlarmThresholdRsp_T = 30150,
  RemoveSensorRecordsReq_T = 30160,
  RemoveSensorRecordsRsp_T = 30170,
  RemoveSensorAlarmRecordsReq_T = 30180,
  RemoveSensorAlarmRecordsRsp_T = 30190,
  QuerySensorRecordsReq_T = 30200,
  QuerySensorRecordsRsp_T = 30210,
  QuerySensorAlarmRecordsReq_T = 30220,
  QuerySensorAlarmRecordsRsp_T = 30230,
  AddRoleReq_T = 30240,
  AddRoleRsp_T = 30250,
  RemoveRoleReq_T = 30260,
  RemoveRoleRsp_T = 30270,
  ModifyRoleReq_T = 30280,
  ModifyRoleRsp_T = 30290,
  QueryRoleReq_T = 30300,
  QueryRoleRsp_T = 30310,
  QueryAllRoleReq_T = 30320,
  QueryAllRoleRsp_T = 30330,
  UserBindRoleReq_T = 30340,
  UserBindRoleRsp_T = 30350,
  CustomerFlowMsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CustomerFlowMsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CustomerFlowMsgType_IsValid(int value);
const CustomerFlowMsgType CustomerFlowMsgType_MIN = Init_T;
const CustomerFlowMsgType CustomerFlowMsgType_MAX = UserBindRoleRsp_T;
const int CustomerFlowMsgType_ARRAYSIZE = CustomerFlowMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomerFlowMsgType_descriptor();
inline const ::std::string& CustomerFlowMsgType_Name(CustomerFlowMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomerFlowMsgType_descriptor(), value);
}
inline bool CustomerFlowMsgType_Parse(
    const ::std::string& name, CustomerFlowMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomerFlowMsgType>(
    CustomerFlowMsgType_descriptor(), name, value);
}
// ===================================================================

class Area : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Area) */ {
 public:
  Area();
  virtual ~Area();

  Area(const Area& from);

  inline Area& operator=(const Area& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Area& default_instance();

  static inline const Area* internal_default_instance() {
    return reinterpret_cast<const Area*>(
               &_Area_default_instance_);
  }

  void Swap(Area* other);

  // implements Message ----------------------------------------------

  inline Area* New() const PROTOBUF_FINAL { return New(NULL); }

  Area* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Area& from);
  void MergeFrom(const Area& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Area* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAreaID = 1;
  void clear_strareaid();
  static const int kStrAreaIDFieldNumber = 1;
  const ::std::string& strareaid() const;
  void set_strareaid(const ::std::string& value);
  #if LANG_CXX11
  void set_strareaid(::std::string&& value);
  #endif
  void set_strareaid(const char* value);
  void set_strareaid(const char* value, size_t size);
  ::std::string* mutable_strareaid();
  ::std::string* release_strareaid();
  void set_allocated_strareaid(::std::string* strareaid);

  // string strAreaName = 2;
  void clear_strareaname();
  static const int kStrAreaNameFieldNumber = 2;
  const ::std::string& strareaname() const;
  void set_strareaname(const ::std::string& value);
  #if LANG_CXX11
  void set_strareaname(::std::string&& value);
  #endif
  void set_strareaname(const char* value);
  void set_strareaname(const char* value, size_t size);
  ::std::string* mutable_strareaname();
  ::std::string* release_strareaname();
  void set_allocated_strareaname(::std::string* strareaname);

  // string strParentAreaID = 4;
  void clear_strparentareaid();
  static const int kStrParentAreaIDFieldNumber = 4;
  const ::std::string& strparentareaid() const;
  void set_strparentareaid(const ::std::string& value);
  #if LANG_CXX11
  void set_strparentareaid(::std::string&& value);
  #endif
  void set_strparentareaid(const char* value);
  void set_strparentareaid(const char* value, size_t size);
  ::std::string* mutable_strparentareaid();
  ::std::string* release_strparentareaid();
  void set_allocated_strparentareaid(::std::string* strparentareaid);

  // string strCreateDate = 6;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 6;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 7;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 7;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // uint32 uiLevel = 3;
  void clear_uilevel();
  static const int kUiLevelFieldNumber = 3;
  ::google::protobuf::uint32 uilevel() const;
  void set_uilevel(::google::protobuf::uint32 value);

  // uint32 uiState = 5;
  void clear_uistate();
  static const int kUiStateFieldNumber = 5;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Area)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strareaid_;
  ::google::protobuf::internal::ArenaStringPtr strareaname_;
  ::google::protobuf::internal::ArenaStringPtr strparentareaid_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::uint32 uilevel_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Group : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Group) */ {
 public:
  Group();
  virtual ~Group();

  Group(const Group& from);

  inline Group& operator=(const Group& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Group& default_instance();

  static inline const Group* internal_default_instance() {
    return reinterpret_cast<const Group*>(
               &_Group_default_instance_);
  }

  void Swap(Group* other);

  // implements Message ----------------------------------------------

  inline Group* New() const PROTOBUF_FINAL { return New(NULL); }

  Group* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Group& from);
  void MergeFrom(const Group& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Group* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strGroupID = 1;
  void clear_strgroupid();
  static const int kStrGroupIDFieldNumber = 1;
  const ::std::string& strgroupid() const;
  void set_strgroupid(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupid(::std::string&& value);
  #endif
  void set_strgroupid(const char* value);
  void set_strgroupid(const char* value, size_t size);
  ::std::string* mutable_strgroupid();
  ::std::string* release_strgroupid();
  void set_allocated_strgroupid(::std::string* strgroupid);

  // string strGroupName = 2;
  void clear_strgroupname();
  static const int kStrGroupNameFieldNumber = 2;
  const ::std::string& strgroupname() const;
  void set_strgroupname(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupname(::std::string&& value);
  #endif
  void set_strgroupname(const char* value);
  void set_strgroupname(const char* value, size_t size);
  ::std::string* mutable_strgroupname();
  ::std::string* release_strgroupname();
  void set_allocated_strgroupname(::std::string* strgroupname);

  // string strCreateDate = 3;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 3;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 4;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 4;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // uint32 uiState = 5;
  void clear_uistate();
  static const int kUiStateFieldNumber = 5;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Group)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strgroupid_;
  ::google::protobuf::internal::ArenaStringPtr strgroupname_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Entrance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Entrance) */ {
 public:
  Entrance();
  virtual ~Entrance();

  Entrance(const Entrance& from);

  inline Entrance& operator=(const Entrance& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entrance& default_instance();

  static inline const Entrance* internal_default_instance() {
    return reinterpret_cast<const Entrance*>(
               &_Entrance_default_instance_);
  }

  void Swap(Entrance* other);

  // implements Message ----------------------------------------------

  inline Entrance* New() const PROTOBUF_FINAL { return New(NULL); }

  Entrance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Entrance& from);
  void MergeFrom(const Entrance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Entrance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strDeviceID = 3;
  int strdeviceid_size() const;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 3;
  const ::std::string& strdeviceid(int index) const;
  ::std::string* mutable_strdeviceid(int index);
  void set_strdeviceid(int index, const ::std::string& value);
  void set_strdeviceid(int index, const char* value);
  void set_strdeviceid(int index, const char* value, size_t size);
  ::std::string* add_strdeviceid();
  void add_strdeviceid(const ::std::string& value);
  void add_strdeviceid(const char* value);
  void add_strdeviceid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strdeviceid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strdeviceid();

  // string strEntranceID = 1;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 1;
  const ::std::string& strentranceid() const;
  void set_strentranceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strentranceid(::std::string&& value);
  #endif
  void set_strentranceid(const char* value);
  void set_strentranceid(const char* value, size_t size);
  ::std::string* mutable_strentranceid();
  ::std::string* release_strentranceid();
  void set_allocated_strentranceid(::std::string* strentranceid);

  // string strEntranceName = 2;
  void clear_strentrancename();
  static const int kStrEntranceNameFieldNumber = 2;
  const ::std::string& strentrancename() const;
  void set_strentrancename(const ::std::string& value);
  #if LANG_CXX11
  void set_strentrancename(::std::string&& value);
  #endif
  void set_strentrancename(const char* value);
  void set_strentrancename(const char* value, size_t size);
  ::std::string* mutable_strentrancename();
  ::std::string* release_strentrancename();
  void set_allocated_strentrancename(::std::string* strentrancename);

  // string strPicture = 4;
  void clear_strpicture();
  static const int kStrPictureFieldNumber = 4;
  const ::std::string& strpicture() const;
  void set_strpicture(const ::std::string& value);
  #if LANG_CXX11
  void set_strpicture(::std::string&& value);
  #endif
  void set_strpicture(const char* value);
  void set_strpicture(const char* value, size_t size);
  ::std::string* mutable_strpicture();
  ::std::string* release_strpicture();
  void set_allocated_strpicture(::std::string* strpicture);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Entrance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strdeviceid_;
  ::google::protobuf::internal::ArenaStringPtr strentranceid_;
  ::google::protobuf::internal::ArenaStringPtr strentrancename_;
  ::google::protobuf::internal::ArenaStringPtr strpicture_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Store : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Store) */ {
 public:
  Store();
  virtual ~Store();

  Store(const Store& from);

  inline Store& operator=(const Store& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Store& default_instance();

  static inline const Store* internal_default_instance() {
    return reinterpret_cast<const Store*>(
               &_Store_default_instance_);
  }

  void Swap(Store* other);

  // implements Message ----------------------------------------------

  inline Store* New() const PROTOBUF_FINAL { return New(NULL); }

  Store* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Store& from);
  void MergeFrom(const Store& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Store* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Entrance entrance = 5;
  int entrance_size() const;
  void clear_entrance();
  static const int kEntranceFieldNumber = 5;
  const ::CustomerFlow::Interactive::Message::Entrance& entrance(int index) const;
  ::CustomerFlow::Interactive::Message::Entrance* mutable_entrance(int index);
  ::CustomerFlow::Interactive::Message::Entrance* add_entrance();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >*
      mutable_entrance();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >&
      entrance() const;

  // repeated string strTelephone = 11;
  int strtelephone_size() const;
  void clear_strtelephone();
  static const int kStrTelephoneFieldNumber = 11;
  const ::std::string& strtelephone(int index) const;
  ::std::string* mutable_strtelephone(int index);
  void set_strtelephone(int index, const ::std::string& value);
  void set_strtelephone(int index, const char* value);
  void set_strtelephone(int index, const char* value, size_t size);
  ::std::string* add_strtelephone();
  void add_strtelephone(const ::std::string& value);
  void add_strtelephone(const char* value);
  void add_strtelephone(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strtelephone() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strtelephone();

  // string strStoreID = 1;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 1;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strStoreName = 2;
  void clear_strstorename();
  static const int kStrStoreNameFieldNumber = 2;
  const ::std::string& strstorename() const;
  void set_strstorename(const ::std::string& value);
  #if LANG_CXX11
  void set_strstorename(::std::string&& value);
  #endif
  void set_strstorename(const char* value);
  void set_strstorename(const char* value, size_t size);
  ::std::string* mutable_strstorename();
  ::std::string* release_strstorename();
  void set_allocated_strstorename(::std::string* strstorename);

  // string strGoodsCategory = 3;
  void clear_strgoodscategory();
  static const int kStrGoodsCategoryFieldNumber = 3;
  const ::std::string& strgoodscategory() const;
  void set_strgoodscategory(const ::std::string& value);
  #if LANG_CXX11
  void set_strgoodscategory(::std::string&& value);
  #endif
  void set_strgoodscategory(const char* value);
  void set_strgoodscategory(const char* value, size_t size);
  ::std::string* mutable_strgoodscategory();
  ::std::string* release_strgoodscategory();
  void set_allocated_strgoodscategory(::std::string* strgoodscategory);

  // string strAddress = 4;
  void clear_straddress();
  static const int kStrAddressFieldNumber = 4;
  const ::std::string& straddress() const;
  void set_straddress(const ::std::string& value);
  #if LANG_CXX11
  void set_straddress(::std::string&& value);
  #endif
  void set_straddress(const char* value);
  void set_straddress(const char* value, size_t size);
  ::std::string* mutable_straddress();
  ::std::string* release_straddress();
  void set_allocated_straddress(::std::string* straddress);

  // string strCreateDate = 7;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 7;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 8;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 8;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // .CustomerFlow.Interactive.Message.Area area = 6;
  bool has_area() const;
  void clear_area();
  static const int kAreaFieldNumber = 6;
  const ::CustomerFlow::Interactive::Message::Area& area() const;
  ::CustomerFlow::Interactive::Message::Area* mutable_area();
  ::CustomerFlow::Interactive::Message::Area* release_area();
  void set_allocated_area(::CustomerFlow::Interactive::Message::Area* area);

  // uint32 uiState = 9;
  void clear_uistate();
  static const int kUiStateFieldNumber = 9;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // uint32 uiOpenState = 10;
  void clear_uiopenstate();
  static const int kUiOpenStateFieldNumber = 10;
  ::google::protobuf::uint32 uiopenstate() const;
  void set_uiopenstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Store)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance > entrance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strtelephone_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strstorename_;
  ::google::protobuf::internal::ArenaStringPtr strgoodscategory_;
  ::google::protobuf::internal::ArenaStringPtr straddress_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::CustomerFlow::Interactive::Message::Area* area_;
  ::google::protobuf::uint32 uistate_;
  ::google::protobuf::uint32 uiopenstate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGroupAssociation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserGroupAssociation) */ {
 public:
  UserGroupAssociation();
  virtual ~UserGroupAssociation();

  UserGroupAssociation(const UserGroupAssociation& from);

  inline UserGroupAssociation& operator=(const UserGroupAssociation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGroupAssociation& default_instance();

  static inline const UserGroupAssociation* internal_default_instance() {
    return reinterpret_cast<const UserGroupAssociation*>(
               &_UserGroupAssociation_default_instance_);
  }

  void Swap(UserGroupAssociation* other);

  // implements Message ----------------------------------------------

  inline UserGroupAssociation* New() const PROTOBUF_FINAL { return New(NULL); }

  UserGroupAssociation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserGroupAssociation& from);
  void MergeFrom(const UserGroupAssociation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserGroupAssociation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strGroupID = 2;
  void clear_strgroupid();
  static const int kStrGroupIDFieldNumber = 2;
  const ::std::string& strgroupid() const;
  void set_strgroupid(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupid(::std::string&& value);
  #endif
  void set_strgroupid(const char* value);
  void set_strgroupid(const char* value, size_t size);
  ::std::string* mutable_strgroupid();
  ::std::string* release_strgroupid();
  void set_allocated_strgroupid(::std::string* strgroupid);

  // string strUserRole = 3;
  void clear_struserrole();
  static const int kStrUserRoleFieldNumber = 3;
  const ::std::string& struserrole() const;
  void set_struserrole(const ::std::string& value);
  #if LANG_CXX11
  void set_struserrole(::std::string&& value);
  #endif
  void set_struserrole(const char* value);
  void set_struserrole(const char* value, size_t size);
  ::std::string* mutable_struserrole();
  ::std::string* release_struserrole();
  void set_allocated_struserrole(::std::string* struserrole);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserGroupAssociation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strgroupid_;
  ::google::protobuf::internal::ArenaStringPtr struserrole_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserStoreAssociation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserStoreAssociation) */ {
 public:
  UserStoreAssociation();
  virtual ~UserStoreAssociation();

  UserStoreAssociation(const UserStoreAssociation& from);

  inline UserStoreAssociation& operator=(const UserStoreAssociation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStoreAssociation& default_instance();

  static inline const UserStoreAssociation* internal_default_instance() {
    return reinterpret_cast<const UserStoreAssociation*>(
               &_UserStoreAssociation_default_instance_);
  }

  void Swap(UserStoreAssociation* other);

  // implements Message ----------------------------------------------

  inline UserStoreAssociation* New() const PROTOBUF_FINAL { return New(NULL); }

  UserStoreAssociation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserStoreAssociation& from);
  void MergeFrom(const UserStoreAssociation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserStoreAssociation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strUserRole = 3;
  void clear_struserrole();
  static const int kStrUserRoleFieldNumber = 3;
  const ::std::string& struserrole() const;
  void set_struserrole(const ::std::string& value);
  #if LANG_CXX11
  void set_struserrole(::std::string&& value);
  #endif
  void set_struserrole(const char* value);
  void set_struserrole(const char* value, size_t size);
  ::std::string* mutable_struserrole();
  ::std::string* release_struserrole();
  void set_allocated_struserrole(::std::string* struserrole);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserStoreAssociation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr struserrole_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }

  void Swap(Event* other);

  // implements Message ----------------------------------------------

  inline Event* New() const PROTOBUF_FINAL { return New(NULL); }

  Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uiType = 9;
  int uitype_size() const;
  void clear_uitype();
  static const int kUiTypeFieldNumber = 9;
  ::google::protobuf::uint32 uitype(int index) const;
  void set_uitype(int index, ::google::protobuf::uint32 value);
  void add_uitype(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uitype() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uitype();

  // repeated string strHandler = 10;
  int strhandler_size() const;
  void clear_strhandler();
  static const int kStrHandlerFieldNumber = 10;
  const ::std::string& strhandler(int index) const;
  ::std::string* mutable_strhandler(int index);
  void set_strhandler(int index, const ::std::string& value);
  void set_strhandler(int index, const char* value);
  void set_strhandler(int index, const char* value, size_t size);
  ::std::string* add_strhandler();
  void add_strhandler(const ::std::string& value);
  void add_strhandler(const char* value);
  void add_strhandler(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strhandler() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strhandler();

  // string strEventID = 1;
  void clear_streventid();
  static const int kStrEventIDFieldNumber = 1;
  const ::std::string& streventid() const;
  void set_streventid(const ::std::string& value);
  #if LANG_CXX11
  void set_streventid(::std::string&& value);
  #endif
  void set_streventid(const char* value);
  void set_streventid(const char* value, size_t size);
  ::std::string* mutable_streventid();
  ::std::string* release_streventid();
  void set_allocated_streventid(::std::string* streventid);

  // string strSource = 2;
  void clear_strsource();
  static const int kStrSourceFieldNumber = 2;
  const ::std::string& strsource() const;
  void set_strsource(const ::std::string& value);
  #if LANG_CXX11
  void set_strsource(::std::string&& value);
  #endif
  void set_strsource(const char* value);
  void set_strsource(const char* value, size_t size);
  ::std::string* mutable_strsource();
  ::std::string* release_strsource();
  void set_allocated_strsource(::std::string* strsource);

  // string strSubmitDate = 3;
  void clear_strsubmitdate();
  static const int kStrSubmitDateFieldNumber = 3;
  const ::std::string& strsubmitdate() const;
  void set_strsubmitdate(const ::std::string& value);
  #if LANG_CXX11
  void set_strsubmitdate(::std::string&& value);
  #endif
  void set_strsubmitdate(const char* value);
  void set_strsubmitdate(const char* value, size_t size);
  ::std::string* mutable_strsubmitdate();
  ::std::string* release_strsubmitdate();
  void set_allocated_strsubmitdate(::std::string* strsubmitdate);

  // string strExpireDate = 4;
  void clear_strexpiredate();
  static const int kStrExpireDateFieldNumber = 4;
  const ::std::string& strexpiredate() const;
  void set_strexpiredate(const ::std::string& value);
  #if LANG_CXX11
  void set_strexpiredate(::std::string&& value);
  #endif
  void set_strexpiredate(const char* value);
  void set_strexpiredate(const char* value, size_t size);
  ::std::string* mutable_strexpiredate();
  ::std::string* release_strexpiredate();
  void set_allocated_strexpiredate(::std::string* strexpiredate);

  // string strUserID = 5;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 5;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDeviceID = 6;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 6;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // string strProcessState = 7;
  void clear_strprocessstate();
  static const int kStrProcessStateFieldNumber = 7;
  const ::std::string& strprocessstate() const;
  void set_strprocessstate(const ::std::string& value);
  #if LANG_CXX11
  void set_strprocessstate(::std::string&& value);
  #endif
  void set_strprocessstate(const char* value);
  void set_strprocessstate(const char* value, size_t size);
  ::std::string* mutable_strprocessstate();
  ::std::string* release_strprocessstate();
  void set_allocated_strprocessstate(::std::string* strprocessstate);

  // string strRemark = 8;
  void clear_strremark();
  static const int kStrRemarkFieldNumber = 8;
  const ::std::string& strremark() const;
  void set_strremark(const ::std::string& value);
  #if LANG_CXX11
  void set_strremark(::std::string&& value);
  #endif
  void set_strremark(const char* value);
  void set_strremark(const char* value, size_t size);
  ::std::string* mutable_strremark();
  ::std::string* release_strremark();
  void set_allocated_strremark(::std::string* strremark);

  // string strCreateDate = 12;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 12;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 13;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 13;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // string strStoreID = 15;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 15;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strStoreName = 16;
  void clear_strstorename();
  static const int kStrStoreNameFieldNumber = 16;
  const ::std::string& strstorename() const;
  void set_strstorename(const ::std::string& value);
  #if LANG_CXX11
  void set_strstorename(::std::string&& value);
  #endif
  void set_strstorename(const char* value);
  void set_strstorename(const char* value, size_t size);
  ::std::string* mutable_strstorename();
  ::std::string* release_strstorename();
  void set_allocated_strstorename(::std::string* strstorename);

  // uint32 uiViewState = 11;
  void clear_uiviewstate();
  static const int kUiViewStateFieldNumber = 11;
  ::google::protobuf::uint32 uiviewstate() const;
  void set_uiviewstate(::google::protobuf::uint32 value);

  // uint32 uiState = 14;
  void clear_uistate();
  static const int kUiStateFieldNumber = 14;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uitype_;
  mutable int _uitype_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strhandler_;
  ::google::protobuf::internal::ArenaStringPtr streventid_;
  ::google::protobuf::internal::ArenaStringPtr strsource_;
  ::google::protobuf::internal::ArenaStringPtr strsubmitdate_;
  ::google::protobuf::internal::ArenaStringPtr strexpiredate_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  ::google::protobuf::internal::ArenaStringPtr strprocessstate_;
  ::google::protobuf::internal::ArenaStringPtr strremark_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strstorename_;
  ::google::protobuf::uint32 uiviewstate_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SmartGuardStore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.SmartGuardStore) */ {
 public:
  SmartGuardStore();
  virtual ~SmartGuardStore();

  SmartGuardStore(const SmartGuardStore& from);

  inline SmartGuardStore& operator=(const SmartGuardStore& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmartGuardStore& default_instance();

  static inline const SmartGuardStore* internal_default_instance() {
    return reinterpret_cast<const SmartGuardStore*>(
               &_SmartGuardStore_default_instance_);
  }

  void Swap(SmartGuardStore* other);

  // implements Message ----------------------------------------------

  inline SmartGuardStore* New() const PROTOBUF_FINAL { return New(NULL); }

  SmartGuardStore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SmartGuardStore& from);
  void MergeFrom(const SmartGuardStore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SmartGuardStore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strEntranceID = 5;
  int strentranceid_size() const;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 5;
  const ::std::string& strentranceid(int index) const;
  ::std::string* mutable_strentranceid(int index);
  void set_strentranceid(int index, const ::std::string& value);
  void set_strentranceid(int index, const char* value);
  void set_strentranceid(int index, const char* value, size_t size);
  ::std::string* add_strentranceid();
  void add_strentranceid(const ::std::string& value);
  void add_strentranceid(const char* value);
  void add_strentranceid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strentranceid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strentranceid();

  // string strPlanID = 1;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 1;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strStoreName = 3;
  void clear_strstorename();
  static const int kStrStoreNameFieldNumber = 3;
  const ::std::string& strstorename() const;
  void set_strstorename(const ::std::string& value);
  #if LANG_CXX11
  void set_strstorename(::std::string&& value);
  #endif
  void set_strstorename(const char* value);
  void set_strstorename(const char* value, size_t size);
  ::std::string* mutable_strstorename();
  ::std::string* release_strstorename();
  void set_allocated_strstorename(::std::string* strstorename);

  // string strPlanName = 4;
  void clear_strplanname();
  static const int kStrPlanNameFieldNumber = 4;
  const ::std::string& strplanname() const;
  void set_strplanname(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanname(::std::string&& value);
  #endif
  void set_strplanname(const char* value);
  void set_strplanname(const char* value, size_t size);
  ::std::string* mutable_strplanname();
  ::std::string* release_strplanname();
  void set_allocated_strplanname(::std::string* strplanname);

  // string strEnable = 6;
  void clear_strenable();
  static const int kStrEnableFieldNumber = 6;
  const ::std::string& strenable() const;
  void set_strenable(const ::std::string& value);
  #if LANG_CXX11
  void set_strenable(::std::string&& value);
  #endif
  void set_strenable(const char* value);
  void set_strenable(const char* value, size_t size);
  ::std::string* mutable_strenable();
  ::std::string* release_strenable();
  void set_allocated_strenable(::std::string* strenable);

  // string strBeginTime = 7;
  void clear_strbegintime();
  static const int kStrBeginTimeFieldNumber = 7;
  const ::std::string& strbegintime() const;
  void set_strbegintime(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegintime(::std::string&& value);
  #endif
  void set_strbegintime(const char* value);
  void set_strbegintime(const char* value, size_t size);
  ::std::string* mutable_strbegintime();
  ::std::string* release_strbegintime();
  void set_allocated_strbegintime(::std::string* strbegintime);

  // string strEndTime = 8;
  void clear_strendtime();
  static const int kStrEndTimeFieldNumber = 8;
  const ::std::string& strendtime() const;
  void set_strendtime(const ::std::string& value);
  #if LANG_CXX11
  void set_strendtime(::std::string&& value);
  #endif
  void set_strendtime(const char* value);
  void set_strendtime(const char* value, size_t size);
  ::std::string* mutable_strendtime();
  ::std::string* release_strendtime();
  void set_allocated_strendtime(::std::string* strendtime);

  // string strBeginTime2 = 9;
  void clear_strbegintime2();
  static const int kStrBeginTime2FieldNumber = 9;
  const ::std::string& strbegintime2() const;
  void set_strbegintime2(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegintime2(::std::string&& value);
  #endif
  void set_strbegintime2(const char* value);
  void set_strbegintime2(const char* value, size_t size);
  ::std::string* mutable_strbegintime2();
  ::std::string* release_strbegintime2();
  void set_allocated_strbegintime2(::std::string* strbegintime2);

  // string strEndTime2 = 10;
  void clear_strendtime2();
  static const int kStrEndTime2FieldNumber = 10;
  const ::std::string& strendtime2() const;
  void set_strendtime2(const ::std::string& value);
  #if LANG_CXX11
  void set_strendtime2(::std::string&& value);
  #endif
  void set_strendtime2(const char* value);
  void set_strendtime2(const char* value, size_t size);
  ::std::string* mutable_strendtime2();
  ::std::string* release_strendtime2();
  void set_allocated_strendtime2(::std::string* strendtime2);

  // string strCreateDate = 12;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 12;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // uint32 uiState = 11;
  void clear_uistate();
  static const int kUiStateFieldNumber = 11;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.SmartGuardStore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strentranceid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strstorename_;
  ::google::protobuf::internal::ArenaStringPtr strplanname_;
  ::google::protobuf::internal::ArenaStringPtr strenable_;
  ::google::protobuf::internal::ArenaStringPtr strbegintime_;
  ::google::protobuf::internal::ArenaStringPtr strendtime_;
  ::google::protobuf::internal::ArenaStringPtr strbegintime2_;
  ::google::protobuf::internal::ArenaStringPtr strendtime2_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PatrolStoreEntrance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.PatrolStoreEntrance) */ {
 public:
  PatrolStoreEntrance();
  virtual ~PatrolStoreEntrance();

  PatrolStoreEntrance(const PatrolStoreEntrance& from);

  inline PatrolStoreEntrance& operator=(const PatrolStoreEntrance& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PatrolStoreEntrance& default_instance();

  static inline const PatrolStoreEntrance* internal_default_instance() {
    return reinterpret_cast<const PatrolStoreEntrance*>(
               &_PatrolStoreEntrance_default_instance_);
  }

  void Swap(PatrolStoreEntrance* other);

  // implements Message ----------------------------------------------

  inline PatrolStoreEntrance* New() const PROTOBUF_FINAL { return New(NULL); }

  PatrolStoreEntrance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PatrolStoreEntrance& from);
  void MergeFrom(const PatrolStoreEntrance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PatrolStoreEntrance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Entrance entrance = 3;
  int entrance_size() const;
  void clear_entrance();
  static const int kEntranceFieldNumber = 3;
  const ::CustomerFlow::Interactive::Message::Entrance& entrance(int index) const;
  ::CustomerFlow::Interactive::Message::Entrance* mutable_entrance(int index);
  ::CustomerFlow::Interactive::Message::Entrance* add_entrance();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >*
      mutable_entrance();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >&
      entrance() const;

  // string strStoreID = 1;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 1;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strStoreName = 2;
  void clear_strstorename();
  static const int kStrStoreNameFieldNumber = 2;
  const ::std::string& strstorename() const;
  void set_strstorename(const ::std::string& value);
  #if LANG_CXX11
  void set_strstorename(::std::string&& value);
  #endif
  void set_strstorename(const char* value);
  void set_strstorename(const char* value, size_t size);
  ::std::string* mutable_strstorename();
  ::std::string* release_strstorename();
  void set_allocated_strstorename(::std::string* strstorename);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.PatrolStoreEntrance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance > entrance_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strstorename_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegularPatrol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RegularPatrol) */ {
 public:
  RegularPatrol();
  virtual ~RegularPatrol();

  RegularPatrol(const RegularPatrol& from);

  inline RegularPatrol& operator=(const RegularPatrol& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegularPatrol& default_instance();

  static inline const RegularPatrol* internal_default_instance() {
    return reinterpret_cast<const RegularPatrol*>(
               &_RegularPatrol_default_instance_);
  }

  void Swap(RegularPatrol* other);

  // implements Message ----------------------------------------------

  inline RegularPatrol* New() const PROTOBUF_FINAL { return New(NULL); }

  RegularPatrol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegularPatrol& from);
  void MergeFrom(const RegularPatrol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegularPatrol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.PatrolStoreEntrance storeEntrance = 4;
  int storeentrance_size() const;
  void clear_storeentrance();
  static const int kStoreEntranceFieldNumber = 4;
  const ::CustomerFlow::Interactive::Message::PatrolStoreEntrance& storeentrance(int index) const;
  ::CustomerFlow::Interactive::Message::PatrolStoreEntrance* mutable_storeentrance(int index);
  ::CustomerFlow::Interactive::Message::PatrolStoreEntrance* add_storeentrance();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::PatrolStoreEntrance >*
      mutable_storeentrance();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::PatrolStoreEntrance >&
      storeentrance() const;

  // repeated string strPatrolTime = 5;
  int strpatroltime_size() const;
  void clear_strpatroltime();
  static const int kStrPatrolTimeFieldNumber = 5;
  const ::std::string& strpatroltime(int index) const;
  ::std::string* mutable_strpatroltime(int index);
  void set_strpatroltime(int index, const ::std::string& value);
  void set_strpatroltime(int index, const char* value);
  void set_strpatroltime(int index, const char* value, size_t size);
  ::std::string* add_strpatroltime();
  void add_strpatroltime(const ::std::string& value);
  void add_strpatroltime(const char* value);
  void add_strpatroltime(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strpatroltime() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strpatroltime();

  // repeated string strHandler = 6;
  int strhandler_size() const;
  void clear_strhandler();
  static const int kStrHandlerFieldNumber = 6;
  const ::std::string& strhandler(int index) const;
  ::std::string* mutable_strhandler(int index);
  void set_strhandler(int index, const ::std::string& value);
  void set_strhandler(int index, const char* value);
  void set_strhandler(int index, const char* value, size_t size);
  ::std::string* add_strhandler();
  void add_strhandler(const ::std::string& value);
  void add_strhandler(const char* value);
  void add_strhandler(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strhandler() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strhandler();

  // string strPlanID = 1;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 1;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // string strPlanName = 2;
  void clear_strplanname();
  static const int kStrPlanNameFieldNumber = 2;
  const ::std::string& strplanname() const;
  void set_strplanname(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanname(::std::string&& value);
  #endif
  void set_strplanname(const char* value);
  void set_strplanname(const char* value, size_t size);
  ::std::string* mutable_strplanname();
  ::std::string* release_strplanname();
  void set_allocated_strplanname(::std::string* strplanname);

  // string strEnable = 3;
  void clear_strenable();
  static const int kStrEnableFieldNumber = 3;
  const ::std::string& strenable() const;
  void set_strenable(const ::std::string& value);
  #if LANG_CXX11
  void set_strenable(::std::string&& value);
  #endif
  void set_strenable(const char* value);
  void set_strenable(const char* value, size_t size);
  ::std::string* mutable_strenable();
  ::std::string* release_strenable();
  void set_allocated_strenable(::std::string* strenable);

  // string strCreateDate = 8;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 8;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 9;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 9;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // string strUpdateDate = 10;
  void clear_strupdatedate();
  static const int kStrUpdateDateFieldNumber = 10;
  const ::std::string& strupdatedate() const;
  void set_strupdatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strupdatedate(::std::string&& value);
  #endif
  void set_strupdatedate(const char* value);
  void set_strupdatedate(const char* value, size_t size);
  ::std::string* mutable_strupdatedate();
  ::std::string* release_strupdatedate();
  void set_allocated_strupdatedate(::std::string* strupdatedate);

  // uint32 uiState = 7;
  void clear_uistate();
  static const int kUiStateFieldNumber = 7;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RegularPatrol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::PatrolStoreEntrance > storeentrance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strpatroltime_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strhandler_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  ::google::protobuf::internal::ArenaStringPtr strplanname_;
  ::google::protobuf::internal::ArenaStringPtr strenable_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::internal::ArenaStringPtr strupdatedate_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserBrief : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserBrief) */ {
 public:
  UserBrief();
  virtual ~UserBrief();

  UserBrief(const UserBrief& from);

  inline UserBrief& operator=(const UserBrief& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBrief& default_instance();

  static inline const UserBrief* internal_default_instance() {
    return reinterpret_cast<const UserBrief*>(
               &_UserBrief_default_instance_);
  }

  void Swap(UserBrief* other);

  // implements Message ----------------------------------------------

  inline UserBrief* New() const PROTOBUF_FINAL { return New(NULL); }

  UserBrief* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserBrief& from);
  void MergeFrom(const UserBrief& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserBrief* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strUserName = 2;
  void clear_strusername();
  static const int kStrUserNameFieldNumber = 2;
  const ::std::string& strusername() const;
  void set_strusername(const ::std::string& value);
  #if LANG_CXX11
  void set_strusername(::std::string&& value);
  #endif
  void set_strusername(const char* value);
  void set_strusername(const char* value, size_t size);
  ::std::string* mutable_strusername();
  ::std::string* release_strusername();
  void set_allocated_strusername(::std::string* strusername);

  // string strAliasName = 3;
  void clear_straliasname();
  static const int kStrAliasNameFieldNumber = 3;
  const ::std::string& straliasname() const;
  void set_straliasname(const ::std::string& value);
  #if LANG_CXX11
  void set_straliasname(::std::string&& value);
  #endif
  void set_straliasname(const char* value);
  void set_straliasname(const char* value, size_t size);
  ::std::string* mutable_straliasname();
  ::std::string* release_straliasname();
  void set_allocated_straliasname(::std::string* straliasname);

  // string strRole = 4;
  void clear_strrole();
  static const int kStrRoleFieldNumber = 4;
  const ::std::string& strrole() const;
  void set_strrole(const ::std::string& value);
  #if LANG_CXX11
  void set_strrole(::std::string&& value);
  #endif
  void set_strrole(const char* value);
  void set_strrole(const char* value, size_t size);
  ::std::string* mutable_strrole();
  ::std::string* release_strrole();
  void set_allocated_strrole(::std::string* strrole);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserBrief)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strusername_;
  ::google::protobuf::internal::ArenaStringPtr straliasname_;
  ::google::protobuf::internal::ArenaStringPtr strrole_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VIPConsumeHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.VIPConsumeHistory) */ {
 public:
  VIPConsumeHistory();
  virtual ~VIPConsumeHistory();

  VIPConsumeHistory(const VIPConsumeHistory& from);

  inline VIPConsumeHistory& operator=(const VIPConsumeHistory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPConsumeHistory& default_instance();

  static inline const VIPConsumeHistory* internal_default_instance() {
    return reinterpret_cast<const VIPConsumeHistory*>(
               &_VIPConsumeHistory_default_instance_);
  }

  void Swap(VIPConsumeHistory* other);

  // implements Message ----------------------------------------------

  inline VIPConsumeHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  VIPConsumeHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VIPConsumeHistory& from);
  void MergeFrom(const VIPConsumeHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VIPConsumeHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strConsumeID = 1;
  void clear_strconsumeid();
  static const int kStrConsumeIDFieldNumber = 1;
  const ::std::string& strconsumeid() const;
  void set_strconsumeid(const ::std::string& value);
  #if LANG_CXX11
  void set_strconsumeid(::std::string&& value);
  #endif
  void set_strconsumeid(const char* value);
  void set_strconsumeid(const char* value, size_t size);
  ::std::string* mutable_strconsumeid();
  ::std::string* release_strconsumeid();
  void set_allocated_strconsumeid(::std::string* strconsumeid);

  // string strVIPID = 2;
  void clear_strvipid();
  static const int kStrVIPIDFieldNumber = 2;
  const ::std::string& strvipid() const;
  void set_strvipid(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipid(::std::string&& value);
  #endif
  void set_strvipid(const char* value);
  void set_strvipid(const char* value, size_t size);
  ::std::string* mutable_strvipid();
  ::std::string* release_strvipid();
  void set_allocated_strvipid(::std::string* strvipid);

  // string strGoodsName = 3;
  void clear_strgoodsname();
  static const int kStrGoodsNameFieldNumber = 3;
  const ::std::string& strgoodsname() const;
  void set_strgoodsname(const ::std::string& value);
  #if LANG_CXX11
  void set_strgoodsname(::std::string&& value);
  #endif
  void set_strgoodsname(const char* value);
  void set_strgoodsname(const char* value, size_t size);
  ::std::string* mutable_strgoodsname();
  ::std::string* release_strgoodsname();
  void set_allocated_strgoodsname(::std::string* strgoodsname);

  // string strSalesman = 5;
  void clear_strsalesman();
  static const int kStrSalesmanFieldNumber = 5;
  const ::std::string& strsalesman() const;
  void set_strsalesman(const ::std::string& value);
  #if LANG_CXX11
  void set_strsalesman(::std::string&& value);
  #endif
  void set_strsalesman(const char* value);
  void set_strsalesman(const char* value, size_t size);
  ::std::string* mutable_strsalesman();
  ::std::string* release_strsalesman();
  void set_allocated_strsalesman(::std::string* strsalesman);

  // string strConsumeDate = 7;
  void clear_strconsumedate();
  static const int kStrConsumeDateFieldNumber = 7;
  const ::std::string& strconsumedate() const;
  void set_strconsumedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strconsumedate(::std::string&& value);
  #endif
  void set_strconsumedate(const char* value);
  void set_strconsumedate(const char* value, size_t size);
  ::std::string* mutable_strconsumedate();
  ::std::string* release_strconsumedate();
  void set_allocated_strconsumedate(::std::string* strconsumedate);

  // double dConsumeAmount = 6;
  void clear_dconsumeamount();
  static const int kDConsumeAmountFieldNumber = 6;
  double dconsumeamount() const;
  void set_dconsumeamount(double value);

  // uint32 uiGoodsNumber = 4;
  void clear_uigoodsnumber();
  static const int kUiGoodsNumberFieldNumber = 4;
  ::google::protobuf::uint32 uigoodsnumber() const;
  void set_uigoodsnumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.VIPConsumeHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strconsumeid_;
  ::google::protobuf::internal::ArenaStringPtr strvipid_;
  ::google::protobuf::internal::ArenaStringPtr strgoodsname_;
  ::google::protobuf::internal::ArenaStringPtr strsalesman_;
  ::google::protobuf::internal::ArenaStringPtr strconsumedate_;
  double dconsumeamount_;
  ::google::protobuf::uint32 uigoodsnumber_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VIPCustomer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.VIPCustomer) */ {
 public:
  VIPCustomer();
  virtual ~VIPCustomer();

  VIPCustomer(const VIPCustomer& from);

  inline VIPCustomer& operator=(const VIPCustomer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPCustomer& default_instance();

  static inline const VIPCustomer* internal_default_instance() {
    return reinterpret_cast<const VIPCustomer*>(
               &_VIPCustomer_default_instance_);
  }

  void Swap(VIPCustomer* other);

  // implements Message ----------------------------------------------

  inline VIPCustomer* New() const PROTOBUF_FINAL { return New(NULL); }

  VIPCustomer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VIPCustomer& from);
  void MergeFrom(const VIPCustomer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VIPCustomer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 8;
  int consumehistory_size() const;
  void clear_consumehistory();
  static const int kConsumeHistoryFieldNumber = 8;
  const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& consumehistory(int index) const;
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* mutable_consumehistory(int index);
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* add_consumehistory();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >*
      mutable_consumehistory();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >&
      consumehistory() const;

  // string strVIPID = 1;
  void clear_strvipid();
  static const int kStrVIPIDFieldNumber = 1;
  const ::std::string& strvipid() const;
  void set_strvipid(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipid(::std::string&& value);
  #endif
  void set_strvipid(const char* value);
  void set_strvipid(const char* value, size_t size);
  ::std::string* mutable_strvipid();
  ::std::string* release_strvipid();
  void set_allocated_strvipid(::std::string* strvipid);

  // string strProfilePicture = 2;
  void clear_strprofilepicture();
  static const int kStrProfilePictureFieldNumber = 2;
  const ::std::string& strprofilepicture() const;
  void set_strprofilepicture(const ::std::string& value);
  #if LANG_CXX11
  void set_strprofilepicture(::std::string&& value);
  #endif
  void set_strprofilepicture(const char* value);
  void set_strprofilepicture(const char* value, size_t size);
  ::std::string* mutable_strprofilepicture();
  ::std::string* release_strprofilepicture();
  void set_allocated_strprofilepicture(::std::string* strprofilepicture);

  // string strVIPName = 3;
  void clear_strvipname();
  static const int kStrVIPNameFieldNumber = 3;
  const ::std::string& strvipname() const;
  void set_strvipname(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipname(::std::string&& value);
  #endif
  void set_strvipname(const char* value);
  void set_strvipname(const char* value, size_t size);
  ::std::string* mutable_strvipname();
  ::std::string* release_strvipname();
  void set_allocated_strvipname(::std::string* strvipname);

  // string strCellphone = 4;
  void clear_strcellphone();
  static const int kStrCellphoneFieldNumber = 4;
  const ::std::string& strcellphone() const;
  void set_strcellphone(const ::std::string& value);
  #if LANG_CXX11
  void set_strcellphone(::std::string&& value);
  #endif
  void set_strcellphone(const char* value);
  void set_strcellphone(const char* value, size_t size);
  ::std::string* mutable_strcellphone();
  ::std::string* release_strcellphone();
  void set_allocated_strcellphone(::std::string* strcellphone);

  // string strVisitDate = 5;
  void clear_strvisitdate();
  static const int kStrVisitDateFieldNumber = 5;
  const ::std::string& strvisitdate() const;
  void set_strvisitdate(const ::std::string& value);
  #if LANG_CXX11
  void set_strvisitdate(::std::string&& value);
  #endif
  void set_strvisitdate(const char* value);
  void set_strvisitdate(const char* value, size_t size);
  ::std::string* mutable_strvisitdate();
  ::std::string* release_strvisitdate();
  void set_allocated_strvisitdate(::std::string* strvisitdate);

  // string strRegisterDate = 7;
  void clear_strregisterdate();
  static const int kStrRegisterDateFieldNumber = 7;
  const ::std::string& strregisterdate() const;
  void set_strregisterdate(const ::std::string& value);
  #if LANG_CXX11
  void set_strregisterdate(::std::string&& value);
  #endif
  void set_strregisterdate(const char* value);
  void set_strregisterdate(const char* value, size_t size);
  ::std::string* mutable_strregisterdate();
  ::std::string* release_strregisterdate();
  void set_allocated_strregisterdate(::std::string* strregisterdate);

  // uint32 uiVisitTimes = 6;
  void clear_uivisittimes();
  static const int kUiVisitTimesFieldNumber = 6;
  ::google::protobuf::uint32 uivisittimes() const;
  void set_uivisittimes(::google::protobuf::uint32 value);

  // uint32 uiState = 9;
  void clear_uistate();
  static const int kUiStateFieldNumber = 9;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.VIPCustomer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory > consumehistory_;
  ::google::protobuf::internal::ArenaStringPtr strvipid_;
  ::google::protobuf::internal::ArenaStringPtr strprofilepicture_;
  ::google::protobuf::internal::ArenaStringPtr strvipname_;
  ::google::protobuf::internal::ArenaStringPtr strcellphone_;
  ::google::protobuf::internal::ArenaStringPtr strvisitdate_;
  ::google::protobuf::internal::ArenaStringPtr strregisterdate_;
  ::google::protobuf::uint32 uivisittimes_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvaluationItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.EvaluationItem) */ {
 public:
  EvaluationItem();
  virtual ~EvaluationItem();

  EvaluationItem(const EvaluationItem& from);

  inline EvaluationItem& operator=(const EvaluationItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvaluationItem& default_instance();

  static inline const EvaluationItem* internal_default_instance() {
    return reinterpret_cast<const EvaluationItem*>(
               &_EvaluationItem_default_instance_);
  }

  void Swap(EvaluationItem* other);

  // implements Message ----------------------------------------------

  inline EvaluationItem* New() const PROTOBUF_FINAL { return New(NULL); }

  EvaluationItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvaluationItem& from);
  void MergeFrom(const EvaluationItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvaluationItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strItemID = 1;
  void clear_stritemid();
  static const int kStrItemIDFieldNumber = 1;
  const ::std::string& stritemid() const;
  void set_stritemid(const ::std::string& value);
  #if LANG_CXX11
  void set_stritemid(::std::string&& value);
  #endif
  void set_stritemid(const char* value);
  void set_stritemid(const char* value, size_t size);
  ::std::string* mutable_stritemid();
  ::std::string* release_stritemid();
  void set_allocated_stritemid(::std::string* stritemid);

  // string strItemName = 2;
  void clear_stritemname();
  static const int kStrItemNameFieldNumber = 2;
  const ::std::string& stritemname() const;
  void set_stritemname(const ::std::string& value);
  #if LANG_CXX11
  void set_stritemname(::std::string&& value);
  #endif
  void set_stritemname(const char* value);
  void set_stritemname(const char* value, size_t size);
  ::std::string* mutable_stritemname();
  ::std::string* release_stritemname();
  void set_allocated_stritemname(::std::string* stritemname);

  // string strDescription = 3;
  void clear_strdescription();
  static const int kStrDescriptionFieldNumber = 3;
  const ::std::string& strdescription() const;
  void set_strdescription(const ::std::string& value);
  #if LANG_CXX11
  void set_strdescription(::std::string&& value);
  #endif
  void set_strdescription(const char* value);
  void set_strdescription(const char* value, size_t size);
  ::std::string* mutable_strdescription();
  ::std::string* release_strdescription();
  void set_allocated_strdescription(::std::string* strdescription);

  // double dTotalPoint = 4;
  void clear_dtotalpoint();
  static const int kDTotalPointFieldNumber = 4;
  double dtotalpoint() const;
  void set_dtotalpoint(double value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.EvaluationItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stritemid_;
  ::google::protobuf::internal::ArenaStringPtr stritemname_;
  ::google::protobuf::internal::ArenaStringPtr strdescription_;
  double dtotalpoint_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvaluationItemScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.EvaluationItemScore) */ {
 public:
  EvaluationItemScore();
  virtual ~EvaluationItemScore();

  EvaluationItemScore(const EvaluationItemScore& from);

  inline EvaluationItemScore& operator=(const EvaluationItemScore& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvaluationItemScore& default_instance();

  static inline const EvaluationItemScore* internal_default_instance() {
    return reinterpret_cast<const EvaluationItemScore*>(
               &_EvaluationItemScore_default_instance_);
  }

  void Swap(EvaluationItemScore* other);

  // implements Message ----------------------------------------------

  inline EvaluationItemScore* New() const PROTOBUF_FINAL { return New(NULL); }

  EvaluationItemScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvaluationItemScore& from);
  void MergeFrom(const EvaluationItemScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvaluationItemScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strPicture = 4;
  int strpicture_size() const;
  void clear_strpicture();
  static const int kStrPictureFieldNumber = 4;
  const ::std::string& strpicture(int index) const;
  ::std::string* mutable_strpicture(int index);
  void set_strpicture(int index, const ::std::string& value);
  void set_strpicture(int index, const char* value);
  void set_strpicture(int index, const char* value, size_t size);
  ::std::string* add_strpicture();
  void add_strpicture(const ::std::string& value);
  void add_strpicture(const char* value);
  void add_strpicture(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strpicture() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strpicture();

  // string strDescription = 3;
  void clear_strdescription();
  static const int kStrDescriptionFieldNumber = 3;
  const ::std::string& strdescription() const;
  void set_strdescription(const ::std::string& value);
  #if LANG_CXX11
  void set_strdescription(::std::string&& value);
  #endif
  void set_strdescription(const char* value);
  void set_strdescription(const char* value, size_t size);
  ::std::string* mutable_strdescription();
  ::std::string* release_strdescription();
  void set_allocated_strdescription(::std::string* strdescription);

  // .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 1;
  bool has_evaluationitem() const;
  void clear_evaluationitem();
  static const int kEvaluationItemFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::EvaluationItem& evaluationitem() const;
  ::CustomerFlow::Interactive::Message::EvaluationItem* mutable_evaluationitem();
  ::CustomerFlow::Interactive::Message::EvaluationItem* release_evaluationitem();
  void set_allocated_evaluationitem(::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem);

  // double dScore = 2;
  void clear_dscore();
  static const int kDScoreFieldNumber = 2;
  double dscore() const;
  void set_dscore(double value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.EvaluationItemScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strpicture_;
  ::google::protobuf::internal::ArenaStringPtr strdescription_;
  ::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem_;
  double dscore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StoreEvaluation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.StoreEvaluation) */ {
 public:
  StoreEvaluation();
  virtual ~StoreEvaluation();

  StoreEvaluation(const StoreEvaluation& from);

  inline StoreEvaluation& operator=(const StoreEvaluation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreEvaluation& default_instance();

  static inline const StoreEvaluation* internal_default_instance() {
    return reinterpret_cast<const StoreEvaluation*>(
               &_StoreEvaluation_default_instance_);
  }

  void Swap(StoreEvaluation* other);

  // implements Message ----------------------------------------------

  inline StoreEvaluation* New() const PROTOBUF_FINAL { return New(NULL); }

  StoreEvaluation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StoreEvaluation& from);
  void MergeFrom(const StoreEvaluation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StoreEvaluation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.EvaluationItemScore itemScore = 7;
  int itemscore_size() const;
  void clear_itemscore();
  static const int kItemScoreFieldNumber = 7;
  const ::CustomerFlow::Interactive::Message::EvaluationItemScore& itemscore(int index) const;
  ::CustomerFlow::Interactive::Message::EvaluationItemScore* mutable_itemscore(int index);
  ::CustomerFlow::Interactive::Message::EvaluationItemScore* add_itemscore();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItemScore >*
      mutable_itemscore();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItemScore >&
      itemscore() const;

  // repeated string picture = 8;
  int picture_size() const;
  void clear_picture();
  static const int kPictureFieldNumber = 8;
  const ::std::string& picture(int index) const;
  ::std::string* mutable_picture(int index);
  void set_picture(int index, const ::std::string& value);
  void set_picture(int index, const char* value);
  void set_picture(int index, const char* value, size_t size);
  ::std::string* add_picture();
  void add_picture(const ::std::string& value);
  void add_picture(const char* value);
  void add_picture(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& picture() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_picture();

  // string strEvaluationID = 1;
  void clear_strevaluationid();
  static const int kStrEvaluationIDFieldNumber = 1;
  const ::std::string& strevaluationid() const;
  void set_strevaluationid(const ::std::string& value);
  #if LANG_CXX11
  void set_strevaluationid(::std::string&& value);
  #endif
  void set_strevaluationid(const char* value);
  void set_strevaluationid(const char* value, size_t size);
  ::std::string* mutable_strevaluationid();
  ::std::string* release_strevaluationid();
  void set_allocated_strevaluationid(::std::string* strevaluationid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strUserIDCreate = 3;
  void clear_struseridcreate();
  static const int kStrUserIDCreateFieldNumber = 3;
  const ::std::string& struseridcreate() const;
  void set_struseridcreate(const ::std::string& value);
  #if LANG_CXX11
  void set_struseridcreate(::std::string&& value);
  #endif
  void set_struseridcreate(const char* value);
  void set_struseridcreate(const char* value, size_t size);
  ::std::string* mutable_struseridcreate();
  ::std::string* release_struseridcreate();
  void set_allocated_struseridcreate(::std::string* struseridcreate);

  // string strUserIDCheck = 4;
  void clear_struseridcheck();
  static const int kStrUserIDCheckFieldNumber = 4;
  const ::std::string& struseridcheck() const;
  void set_struseridcheck(const ::std::string& value);
  #if LANG_CXX11
  void set_struseridcheck(::std::string&& value);
  #endif
  void set_struseridcheck(const char* value);
  void set_struseridcheck(const char* value, size_t size);
  ::std::string* mutable_struseridcheck();
  ::std::string* release_struseridcheck();
  void set_allocated_struseridcheck(::std::string* struseridcheck);

  // string strCreateDate = 10;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 10;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // double dTotalScore = 5;
  void clear_dtotalscore();
  static const int kDTotalScoreFieldNumber = 5;
  double dtotalscore() const;
  void set_dtotalscore(double value);

  // double dTotalPoint = 9;
  void clear_dtotalpoint();
  static const int kDTotalPointFieldNumber = 9;
  double dtotalpoint() const;
  void set_dtotalpoint(double value);

  // uint32 uiCheckStatus = 6;
  void clear_uicheckstatus();
  static const int kUiCheckStatusFieldNumber = 6;
  ::google::protobuf::uint32 uicheckstatus() const;
  void set_uicheckstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.StoreEvaluation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItemScore > itemscore_;
  ::google::protobuf::RepeatedPtrField< ::std::string> picture_;
  ::google::protobuf::internal::ArenaStringPtr strevaluationid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr struseridcreate_;
  ::google::protobuf::internal::ArenaStringPtr struseridcheck_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  double dtotalscore_;
  double dtotalpoint_;
  ::google::protobuf::uint32 uicheckstatus_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntrancePicture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.EntrancePicture) */ {
 public:
  EntrancePicture();
  virtual ~EntrancePicture();

  EntrancePicture(const EntrancePicture& from);

  inline EntrancePicture& operator=(const EntrancePicture& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntrancePicture& default_instance();

  static inline const EntrancePicture* internal_default_instance() {
    return reinterpret_cast<const EntrancePicture*>(
               &_EntrancePicture_default_instance_);
  }

  void Swap(EntrancePicture* other);

  // implements Message ----------------------------------------------

  inline EntrancePicture* New() const PROTOBUF_FINAL { return New(NULL); }

  EntrancePicture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntrancePicture& from);
  void MergeFrom(const EntrancePicture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntrancePicture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strPatrolPicture = 2;
  int strpatrolpicture_size() const;
  void clear_strpatrolpicture();
  static const int kStrPatrolPictureFieldNumber = 2;
  const ::std::string& strpatrolpicture(int index) const;
  ::std::string* mutable_strpatrolpicture(int index);
  void set_strpatrolpicture(int index, const ::std::string& value);
  void set_strpatrolpicture(int index, const char* value);
  void set_strpatrolpicture(int index, const char* value, size_t size);
  ::std::string* add_strpatrolpicture();
  void add_strpatrolpicture(const ::std::string& value);
  void add_strpatrolpicture(const char* value);
  void add_strpatrolpicture(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strpatrolpicture() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strpatrolpicture();

  // string strEntranceID = 1;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 1;
  const ::std::string& strentranceid() const;
  void set_strentranceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strentranceid(::std::string&& value);
  #endif
  void set_strentranceid(const char* value);
  void set_strentranceid(const char* value, size_t size);
  ::std::string* mutable_strentranceid();
  ::std::string* release_strentranceid();
  void set_allocated_strentranceid(::std::string* strentranceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.EntrancePicture)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strpatrolpicture_;
  ::google::protobuf::internal::ArenaStringPtr strentranceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemotePatrolStore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemotePatrolStore) */ {
 public:
  RemotePatrolStore();
  virtual ~RemotePatrolStore();

  RemotePatrolStore(const RemotePatrolStore& from);

  inline RemotePatrolStore& operator=(const RemotePatrolStore& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemotePatrolStore& default_instance();

  static inline const RemotePatrolStore* internal_default_instance() {
    return reinterpret_cast<const RemotePatrolStore*>(
               &_RemotePatrolStore_default_instance_);
  }

  void Swap(RemotePatrolStore* other);

  // implements Message ----------------------------------------------

  inline RemotePatrolStore* New() const PROTOBUF_FINAL { return New(NULL); }

  RemotePatrolStore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemotePatrolStore& from);
  void MergeFrom(const RemotePatrolStore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemotePatrolStore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strEntranceID = 4;
  int strentranceid_size() const;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 4;
  const ::std::string& strentranceid(int index) const;
  ::std::string* mutable_strentranceid(int index);
  void set_strentranceid(int index, const ::std::string& value);
  void set_strentranceid(int index, const char* value);
  void set_strentranceid(int index, const char* value, size_t size);
  ::std::string* add_strentranceid();
  void add_strentranceid(const ::std::string& value);
  void add_strentranceid(const char* value);
  void add_strentranceid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strentranceid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strentranceid();

  // repeated .CustomerFlow.Interactive.Message.EntrancePicture patrolPicture = 8;
  int patrolpicture_size() const;
  void clear_patrolpicture();
  static const int kPatrolPictureFieldNumber = 8;
  const ::CustomerFlow::Interactive::Message::EntrancePicture& patrolpicture(int index) const;
  ::CustomerFlow::Interactive::Message::EntrancePicture* mutable_patrolpicture(int index);
  ::CustomerFlow::Interactive::Message::EntrancePicture* add_patrolpicture();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EntrancePicture >*
      mutable_patrolpicture();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EntrancePicture >&
      patrolpicture() const;

  // repeated string strPatrolPicture = 9;
  int strpatrolpicture_size() const;
  void clear_strpatrolpicture();
  static const int kStrPatrolPictureFieldNumber = 9;
  const ::std::string& strpatrolpicture(int index) const;
  ::std::string* mutable_strpatrolpicture(int index);
  void set_strpatrolpicture(int index, const ::std::string& value);
  void set_strpatrolpicture(int index, const char* value);
  void set_strpatrolpicture(int index, const char* value, size_t size);
  ::std::string* add_strpatrolpicture();
  void add_strpatrolpicture(const ::std::string& value);
  void add_strpatrolpicture(const char* value);
  void add_strpatrolpicture(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strpatrolpicture() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strpatrolpicture();

  // string strPatrolID = 1;
  void clear_strpatrolid();
  static const int kStrPatrolIDFieldNumber = 1;
  const ::std::string& strpatrolid() const;
  void set_strpatrolid(const ::std::string& value);
  #if LANG_CXX11
  void set_strpatrolid(::std::string&& value);
  #endif
  void set_strpatrolid(const char* value);
  void set_strpatrolid(const char* value, size_t size);
  ::std::string* mutable_strpatrolid();
  ::std::string* release_strpatrolid();
  void set_allocated_strpatrolid(::std::string* strpatrolid);

  // string strUserID = 2;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 2;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDeviceID = 3;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 3;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // string strStoreID = 5;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 5;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strPlanID = 6;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 6;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // string strPatrolDate = 7;
  void clear_strpatroldate();
  static const int kStrPatrolDateFieldNumber = 7;
  const ::std::string& strpatroldate() const;
  void set_strpatroldate(const ::std::string& value);
  #if LANG_CXX11
  void set_strpatroldate(::std::string&& value);
  #endif
  void set_strpatroldate(const char* value);
  void set_strpatroldate(const char* value, size_t size);
  ::std::string* mutable_strpatroldate();
  ::std::string* release_strpatroldate();
  void set_allocated_strpatroldate(::std::string* strpatroldate);

  // string strDescription = 11;
  void clear_strdescription();
  static const int kStrDescriptionFieldNumber = 11;
  const ::std::string& strdescription() const;
  void set_strdescription(const ::std::string& value);
  #if LANG_CXX11
  void set_strdescription(::std::string&& value);
  #endif
  void set_strdescription(const char* value);
  void set_strdescription(const char* value, size_t size);
  ::std::string* mutable_strdescription();
  ::std::string* release_strdescription();
  void set_allocated_strdescription(::std::string* strdescription);

  // string strCreateDate = 12;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 12;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // uint32 uiPatrolResult = 10;
  void clear_uipatrolresult();
  static const int kUiPatrolResultFieldNumber = 10;
  ::google::protobuf::uint32 uipatrolresult() const;
  void set_uipatrolresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemotePatrolStore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strentranceid_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EntrancePicture > patrolpicture_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strpatrolpicture_;
  ::google::protobuf::internal::ArenaStringPtr strpatrolid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  ::google::protobuf::internal::ArenaStringPtr strpatroldate_;
  ::google::protobuf::internal::ArenaStringPtr strdescription_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::uint32 uipatrolresult_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Sensor) */ {
 public:
  Sensor();
  virtual ~Sensor();

  Sensor(const Sensor& from);

  inline Sensor& operator=(const Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sensor& default_instance();

  static inline const Sensor* internal_default_instance() {
    return reinterpret_cast<const Sensor*>(
               &_Sensor_default_instance_);
  }

  void Swap(Sensor* other);

  // implements Message ----------------------------------------------

  inline Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sensor& from);
  void MergeFrom(const Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strSensorID = 1;
  void clear_strsensorid();
  static const int kStrSensorIDFieldNumber = 1;
  const ::std::string& strsensorid() const;
  void set_strsensorid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorid(::std::string&& value);
  #endif
  void set_strsensorid(const char* value);
  void set_strsensorid(const char* value, size_t size);
  ::std::string* mutable_strsensorid();
  ::std::string* release_strsensorid();
  void set_allocated_strsensorid(::std::string* strsensorid);

  // string strSensorName = 2;
  void clear_strsensorname();
  static const int kStrSensorNameFieldNumber = 2;
  const ::std::string& strsensorname() const;
  void set_strsensorname(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorname(::std::string&& value);
  #endif
  void set_strsensorname(const char* value);
  void set_strsensorname(const char* value, size_t size);
  ::std::string* mutable_strsensorname();
  ::std::string* release_strsensorname();
  void set_allocated_strsensorname(::std::string* strsensorname);

  // string strSensorType = 3;
  void clear_strsensortype();
  static const int kStrSensorTypeFieldNumber = 3;
  const ::std::string& strsensortype() const;
  void set_strsensortype(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensortype(::std::string&& value);
  #endif
  void set_strsensortype(const char* value);
  void set_strsensortype(const char* value, size_t size);
  ::std::string* mutable_strsensortype();
  ::std::string* release_strsensortype();
  void set_allocated_strsensortype(::std::string* strsensortype);

  // string strSensorAlarmThreshold = 4;
  void clear_strsensoralarmthreshold();
  static const int kStrSensorAlarmThresholdFieldNumber = 4;
  const ::std::string& strsensoralarmthreshold() const;
  void set_strsensoralarmthreshold(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensoralarmthreshold(::std::string&& value);
  #endif
  void set_strsensoralarmthreshold(const char* value);
  void set_strsensoralarmthreshold(const char* value, size_t size);
  ::std::string* mutable_strsensoralarmthreshold();
  ::std::string* release_strsensoralarmthreshold();
  void set_allocated_strsensoralarmthreshold(::std::string* strsensoralarmthreshold);

  // string strStoreID = 5;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 5;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strDeviceID = 6;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 6;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // string strValue = 7;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 7;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // string strCreateDate = 9;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 9;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strSensorKey = 10;
  void clear_strsensorkey();
  static const int kStrSensorKeyFieldNumber = 10;
  const ::std::string& strsensorkey() const;
  void set_strsensorkey(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorkey(::std::string&& value);
  #endif
  void set_strsensorkey(const char* value);
  void set_strsensorkey(const char* value, size_t size);
  ::std::string* mutable_strsensorkey();
  ::std::string* release_strsensorkey();
  void set_allocated_strsensorkey(::std::string* strsensorkey);

  // string strLocation = 11;
  void clear_strlocation();
  static const int kStrLocationFieldNumber = 11;
  const ::std::string& strlocation() const;
  void set_strlocation(const ::std::string& value);
  #if LANG_CXX11
  void set_strlocation(::std::string&& value);
  #endif
  void set_strlocation(const char* value);
  void set_strlocation(const char* value, size_t size);
  ::std::string* mutable_strlocation();
  ::std::string* release_strlocation();
  void set_allocated_strlocation(::std::string* strlocation);

  // uint32 uiState = 8;
  void clear_uistate();
  static const int kUiStateFieldNumber = 8;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Sensor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsensorid_;
  ::google::protobuf::internal::ArenaStringPtr strsensorname_;
  ::google::protobuf::internal::ArenaStringPtr strsensortype_;
  ::google::protobuf::internal::ArenaStringPtr strsensoralarmthreshold_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strsensorkey_;
  ::google::protobuf::internal::ArenaStringPtr strlocation_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RawCustomerFlow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RawCustomerFlow) */ {
 public:
  RawCustomerFlow();
  virtual ~RawCustomerFlow();

  RawCustomerFlow(const RawCustomerFlow& from);

  inline RawCustomerFlow& operator=(const RawCustomerFlow& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RawCustomerFlow& default_instance();

  static inline const RawCustomerFlow* internal_default_instance() {
    return reinterpret_cast<const RawCustomerFlow*>(
               &_RawCustomerFlow_default_instance_);
  }

  void Swap(RawCustomerFlow* other);

  // implements Message ----------------------------------------------

  inline RawCustomerFlow* New() const PROTOBUF_FINAL { return New(NULL); }

  RawCustomerFlow* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RawCustomerFlow& from);
  void MergeFrom(const RawCustomerFlow& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RawCustomerFlow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDataTime = 4;
  void clear_strdatatime();
  static const int kStrDataTimeFieldNumber = 4;
  const ::std::string& strdatatime() const;
  void set_strdatatime(const ::std::string& value);
  #if LANG_CXX11
  void set_strdatatime(::std::string&& value);
  #endif
  void set_strdatatime(const char* value);
  void set_strdatatime(const char* value, size_t size);
  ::std::string* mutable_strdatatime();
  ::std::string* release_strdatatime();
  void set_allocated_strdatatime(::std::string* strdatatime);

  // uint32 uiEnterNumber = 1;
  void clear_uienternumber();
  static const int kUiEnterNumberFieldNumber = 1;
  ::google::protobuf::uint32 uienternumber() const;
  void set_uienternumber(::google::protobuf::uint32 value);

  // uint32 uiLeaveNumber = 2;
  void clear_uileavenumber();
  static const int kUiLeaveNumberFieldNumber = 2;
  ::google::protobuf::uint32 uileavenumber() const;
  void set_uileavenumber(::google::protobuf::uint32 value);

  // uint32 uiStayNumber = 3;
  void clear_uistaynumber();
  static const int kUiStayNumberFieldNumber = 3;
  ::google::protobuf::uint32 uistaynumber() const;
  void set_uistaynumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RawCustomerFlow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdatatime_;
  ::google::protobuf::uint32 uienternumber_;
  ::google::protobuf::uint32 uileavenumber_;
  ::google::protobuf::uint32 uistaynumber_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomerFlowPreHandleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq) */ {
 public:
  CustomerFlowPreHandleReq();
  virtual ~CustomerFlowPreHandleReq();

  CustomerFlowPreHandleReq(const CustomerFlowPreHandleReq& from);

  inline CustomerFlowPreHandleReq& operator=(const CustomerFlowPreHandleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomerFlowPreHandleReq& default_instance();

  static inline const CustomerFlowPreHandleReq* internal_default_instance() {
    return reinterpret_cast<const CustomerFlowPreHandleReq*>(
               &_CustomerFlowPreHandleReq_default_instance_);
  }

  void Swap(CustomerFlowPreHandleReq* other);

  // implements Message ----------------------------------------------

  inline CustomerFlowPreHandleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomerFlowPreHandleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomerFlowPreHandleReq& from);
  void MergeFrom(const CustomerFlowPreHandleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomerFlowPreHandleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomerFlowPreHandleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp) */ {
 public:
  CustomerFlowPreHandleRsp();
  virtual ~CustomerFlowPreHandleRsp();

  CustomerFlowPreHandleRsp(const CustomerFlowPreHandleRsp& from);

  inline CustomerFlowPreHandleRsp& operator=(const CustomerFlowPreHandleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomerFlowPreHandleRsp& default_instance();

  static inline const CustomerFlowPreHandleRsp* internal_default_instance() {
    return reinterpret_cast<const CustomerFlowPreHandleRsp*>(
               &_CustomerFlowPreHandleRsp_default_instance_);
  }

  void Swap(CustomerFlowPreHandleRsp* other);

  // implements Message ----------------------------------------------

  inline CustomerFlowPreHandleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomerFlowPreHandleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomerFlowPreHandleRsp& from);
  void MergeFrom(const CustomerFlowPreHandleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomerFlowPreHandleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakehandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ShakehandReq) */ {
 public:
  ShakehandReq();
  virtual ~ShakehandReq();

  ShakehandReq(const ShakehandReq& from);

  inline ShakehandReq& operator=(const ShakehandReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandReq& default_instance();

  static inline const ShakehandReq* internal_default_instance() {
    return reinterpret_cast<const ShakehandReq*>(
               &_ShakehandReq_default_instance_);
  }

  void Swap(ShakehandReq* other);

  // implements Message ----------------------------------------------

  inline ShakehandReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakehandReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakehandReq& from);
  void MergeFrom(const ShakehandReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakehandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strID = 1;
  void clear_strid();
  static const int kStrIDFieldNumber = 1;
  const ::std::string& strid() const;
  void set_strid(const ::std::string& value);
  #if LANG_CXX11
  void set_strid(::std::string&& value);
  #endif
  void set_strid(const char* value);
  void set_strid(const char* value, size_t size);
  ::std::string* mutable_strid();
  ::std::string* release_strid();
  void set_allocated_strid(::std::string* strid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ShakehandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakehandRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ShakehandRsp) */ {
 public:
  ShakehandRsp();
  virtual ~ShakehandRsp();

  ShakehandRsp(const ShakehandRsp& from);

  inline ShakehandRsp& operator=(const ShakehandRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandRsp& default_instance();

  static inline const ShakehandRsp* internal_default_instance() {
    return reinterpret_cast<const ShakehandRsp*>(
               &_ShakehandRsp_default_instance_);
  }

  void Swap(ShakehandRsp* other);

  // implements Message ----------------------------------------------

  inline ShakehandRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakehandRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakehandRsp& from);
  void MergeFrom(const ShakehandRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakehandRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ShakehandRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddAreaReq) */ {
 public:
  AddAreaReq();
  virtual ~AddAreaReq();

  AddAreaReq(const AddAreaReq& from);

  inline AddAreaReq& operator=(const AddAreaReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddAreaReq& default_instance();

  static inline const AddAreaReq* internal_default_instance() {
    return reinterpret_cast<const AddAreaReq*>(
               &_AddAreaReq_default_instance_);
  }

  void Swap(AddAreaReq* other);

  // implements Message ----------------------------------------------

  inline AddAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddAreaReq& from);
  void MergeFrom(const AddAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Area areaInfo = 2;
  bool has_areainfo() const;
  void clear_areainfo();
  static const int kAreaInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Area& areainfo() const;
  ::CustomerFlow::Interactive::Message::Area* mutable_areainfo();
  ::CustomerFlow::Interactive::Message::Area* release_areainfo();
  void set_allocated_areainfo(::CustomerFlow::Interactive::Message::Area* areainfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Area* areainfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddAreaRsp) */ {
 public:
  AddAreaRsp();
  virtual ~AddAreaRsp();

  AddAreaRsp(const AddAreaRsp& from);

  inline AddAreaRsp& operator=(const AddAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddAreaRsp& default_instance();

  static inline const AddAreaRsp* internal_default_instance() {
    return reinterpret_cast<const AddAreaRsp*>(
               &_AddAreaRsp_default_instance_);
  }

  void Swap(AddAreaRsp* other);

  // implements Message ----------------------------------------------

  inline AddAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddAreaRsp& from);
  void MergeFrom(const AddAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAreaID = 1;
  void clear_strareaid();
  static const int kStrAreaIDFieldNumber = 1;
  const ::std::string& strareaid() const;
  void set_strareaid(const ::std::string& value);
  #if LANG_CXX11
  void set_strareaid(::std::string&& value);
  #endif
  void set_strareaid(const char* value);
  void set_strareaid(const char* value, size_t size);
  ::std::string* mutable_strareaid();
  ::std::string* release_strareaid();
  void set_allocated_strareaid(::std::string* strareaid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strareaid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteAreaReq) */ {
 public:
  DeleteAreaReq();
  virtual ~DeleteAreaReq();

  DeleteAreaReq(const DeleteAreaReq& from);

  inline DeleteAreaReq& operator=(const DeleteAreaReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAreaReq& default_instance();

  static inline const DeleteAreaReq* internal_default_instance() {
    return reinterpret_cast<const DeleteAreaReq*>(
               &_DeleteAreaReq_default_instance_);
  }

  void Swap(DeleteAreaReq* other);

  // implements Message ----------------------------------------------

  inline DeleteAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAreaReq& from);
  void MergeFrom(const DeleteAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strAreaID = 2;
  void clear_strareaid();
  static const int kStrAreaIDFieldNumber = 2;
  const ::std::string& strareaid() const;
  void set_strareaid(const ::std::string& value);
  #if LANG_CXX11
  void set_strareaid(::std::string&& value);
  #endif
  void set_strareaid(const char* value);
  void set_strareaid(const char* value, size_t size);
  ::std::string* mutable_strareaid();
  ::std::string* release_strareaid();
  void set_allocated_strareaid(::std::string* strareaid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strareaid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteAreaRsp) */ {
 public:
  DeleteAreaRsp();
  virtual ~DeleteAreaRsp();

  DeleteAreaRsp(const DeleteAreaRsp& from);

  inline DeleteAreaRsp& operator=(const DeleteAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAreaRsp& default_instance();

  static inline const DeleteAreaRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteAreaRsp*>(
               &_DeleteAreaRsp_default_instance_);
  }

  void Swap(DeleteAreaRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAreaRsp& from);
  void MergeFrom(const DeleteAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyAreaReq) */ {
 public:
  ModifyAreaReq();
  virtual ~ModifyAreaReq();

  ModifyAreaReq(const ModifyAreaReq& from);

  inline ModifyAreaReq& operator=(const ModifyAreaReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyAreaReq& default_instance();

  static inline const ModifyAreaReq* internal_default_instance() {
    return reinterpret_cast<const ModifyAreaReq*>(
               &_ModifyAreaReq_default_instance_);
  }

  void Swap(ModifyAreaReq* other);

  // implements Message ----------------------------------------------

  inline ModifyAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyAreaReq& from);
  void MergeFrom(const ModifyAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Area areaInfo = 2;
  bool has_areainfo() const;
  void clear_areainfo();
  static const int kAreaInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Area& areainfo() const;
  ::CustomerFlow::Interactive::Message::Area* mutable_areainfo();
  ::CustomerFlow::Interactive::Message::Area* release_areainfo();
  void set_allocated_areainfo(::CustomerFlow::Interactive::Message::Area* areainfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Area* areainfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyAreaRsp) */ {
 public:
  ModifyAreaRsp();
  virtual ~ModifyAreaRsp();

  ModifyAreaRsp(const ModifyAreaRsp& from);

  inline ModifyAreaRsp& operator=(const ModifyAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyAreaRsp& default_instance();

  static inline const ModifyAreaRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyAreaRsp*>(
               &_ModifyAreaRsp_default_instance_);
  }

  void Swap(ModifyAreaRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyAreaRsp& from);
  void MergeFrom(const ModifyAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAreaInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAreaInfoReq) */ {
 public:
  QueryAreaInfoReq();
  virtual ~QueryAreaInfoReq();

  QueryAreaInfoReq(const QueryAreaInfoReq& from);

  inline QueryAreaInfoReq& operator=(const QueryAreaInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAreaInfoReq& default_instance();

  static inline const QueryAreaInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryAreaInfoReq*>(
               &_QueryAreaInfoReq_default_instance_);
  }

  void Swap(QueryAreaInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryAreaInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAreaInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAreaInfoReq& from);
  void MergeFrom(const QueryAreaInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAreaInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strAreaID = 2;
  void clear_strareaid();
  static const int kStrAreaIDFieldNumber = 2;
  const ::std::string& strareaid() const;
  void set_strareaid(const ::std::string& value);
  #if LANG_CXX11
  void set_strareaid(::std::string&& value);
  #endif
  void set_strareaid(const char* value);
  void set_strareaid(const char* value, size_t size);
  ::std::string* mutable_strareaid();
  ::std::string* release_strareaid();
  void set_allocated_strareaid(::std::string* strareaid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAreaInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strareaid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAreaInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAreaInfoRsp) */ {
 public:
  QueryAreaInfoRsp();
  virtual ~QueryAreaInfoRsp();

  QueryAreaInfoRsp(const QueryAreaInfoRsp& from);

  inline QueryAreaInfoRsp& operator=(const QueryAreaInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAreaInfoRsp& default_instance();

  static inline const QueryAreaInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAreaInfoRsp*>(
               &_QueryAreaInfoRsp_default_instance_);
  }

  void Swap(QueryAreaInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAreaInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAreaInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAreaInfoRsp& from);
  void MergeFrom(const QueryAreaInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAreaInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.Area areaInfo = 1;
  bool has_areainfo() const;
  void clear_areainfo();
  static const int kAreaInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Area& areainfo() const;
  ::CustomerFlow::Interactive::Message::Area* mutable_areainfo();
  ::CustomerFlow::Interactive::Message::Area* release_areainfo();
  void set_allocated_areainfo(::CustomerFlow::Interactive::Message::Area* areainfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAreaInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::Area* areainfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllAreaReq) */ {
 public:
  QueryAllAreaReq();
  virtual ~QueryAllAreaReq();

  QueryAllAreaReq(const QueryAllAreaReq& from);

  inline QueryAllAreaReq& operator=(const QueryAllAreaReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllAreaReq& default_instance();

  static inline const QueryAllAreaReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllAreaReq*>(
               &_QueryAllAreaReq_default_instance_);
  }

  void Swap(QueryAllAreaReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllAreaReq& from);
  void MergeFrom(const QueryAllAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllAreaRsp) */ {
 public:
  QueryAllAreaRsp();
  virtual ~QueryAllAreaRsp();

  QueryAllAreaRsp(const QueryAllAreaRsp& from);

  inline QueryAllAreaRsp& operator=(const QueryAllAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllAreaRsp& default_instance();

  static inline const QueryAllAreaRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllAreaRsp*>(
               &_QueryAllAreaRsp_default_instance_);
  }

  void Swap(QueryAllAreaRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllAreaRsp& from);
  void MergeFrom(const QueryAllAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Area areaInfo = 1;
  int areainfo_size() const;
  void clear_areainfo();
  static const int kAreaInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Area& areainfo(int index) const;
  ::CustomerFlow::Interactive::Message::Area* mutable_areainfo(int index);
  ::CustomerFlow::Interactive::Message::Area* add_areainfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >*
      mutable_areainfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >&
      areainfo() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area > areainfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BindPushClientIDReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.BindPushClientIDReq) */ {
 public:
  BindPushClientIDReq();
  virtual ~BindPushClientIDReq();

  BindPushClientIDReq(const BindPushClientIDReq& from);

  inline BindPushClientIDReq& operator=(const BindPushClientIDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindPushClientIDReq& default_instance();

  static inline const BindPushClientIDReq* internal_default_instance() {
    return reinterpret_cast<const BindPushClientIDReq*>(
               &_BindPushClientIDReq_default_instance_);
  }

  void Swap(BindPushClientIDReq* other);

  // implements Message ----------------------------------------------

  inline BindPushClientIDReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BindPushClientIDReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BindPushClientIDReq& from);
  void MergeFrom(const BindPushClientIDReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BindPushClientIDReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strClientID = 2;
  void clear_strclientid();
  static const int kStrClientIDFieldNumber = 2;
  const ::std::string& strclientid() const;
  void set_strclientid(const ::std::string& value);
  #if LANG_CXX11
  void set_strclientid(::std::string&& value);
  #endif
  void set_strclientid(const char* value);
  void set_strclientid(const char* value, size_t size);
  ::std::string* mutable_strclientid();
  ::std::string* release_strclientid();
  void set_allocated_strclientid(::std::string* strclientid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.BindPushClientIDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strclientid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BindPushClientIDRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.BindPushClientIDRsp) */ {
 public:
  BindPushClientIDRsp();
  virtual ~BindPushClientIDRsp();

  BindPushClientIDRsp(const BindPushClientIDRsp& from);

  inline BindPushClientIDRsp& operator=(const BindPushClientIDRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindPushClientIDRsp& default_instance();

  static inline const BindPushClientIDRsp* internal_default_instance() {
    return reinterpret_cast<const BindPushClientIDRsp*>(
               &_BindPushClientIDRsp_default_instance_);
  }

  void Swap(BindPushClientIDRsp* other);

  // implements Message ----------------------------------------------

  inline BindPushClientIDRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BindPushClientIDRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BindPushClientIDRsp& from);
  void MergeFrom(const BindPushClientIDRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BindPushClientIDRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.BindPushClientIDRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnbindPushClientIDReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UnbindPushClientIDReq) */ {
 public:
  UnbindPushClientIDReq();
  virtual ~UnbindPushClientIDReq();

  UnbindPushClientIDReq(const UnbindPushClientIDReq& from);

  inline UnbindPushClientIDReq& operator=(const UnbindPushClientIDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnbindPushClientIDReq& default_instance();

  static inline const UnbindPushClientIDReq* internal_default_instance() {
    return reinterpret_cast<const UnbindPushClientIDReq*>(
               &_UnbindPushClientIDReq_default_instance_);
  }

  void Swap(UnbindPushClientIDReq* other);

  // implements Message ----------------------------------------------

  inline UnbindPushClientIDReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnbindPushClientIDReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnbindPushClientIDReq& from);
  void MergeFrom(const UnbindPushClientIDReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnbindPushClientIDReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strClientID = 2;
  void clear_strclientid();
  static const int kStrClientIDFieldNumber = 2;
  const ::std::string& strclientid() const;
  void set_strclientid(const ::std::string& value);
  #if LANG_CXX11
  void set_strclientid(::std::string&& value);
  #endif
  void set_strclientid(const char* value);
  void set_strclientid(const char* value, size_t size);
  ::std::string* mutable_strclientid();
  ::std::string* release_strclientid();
  void set_allocated_strclientid(::std::string* strclientid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UnbindPushClientIDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strclientid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnbindPushClientIDRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp) */ {
 public:
  UnbindPushClientIDRsp();
  virtual ~UnbindPushClientIDRsp();

  UnbindPushClientIDRsp(const UnbindPushClientIDRsp& from);

  inline UnbindPushClientIDRsp& operator=(const UnbindPushClientIDRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnbindPushClientIDRsp& default_instance();

  static inline const UnbindPushClientIDRsp* internal_default_instance() {
    return reinterpret_cast<const UnbindPushClientIDRsp*>(
               &_UnbindPushClientIDRsp_default_instance_);
  }

  void Swap(UnbindPushClientIDRsp* other);

  // implements Message ----------------------------------------------

  inline UnbindPushClientIDRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnbindPushClientIDRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnbindPushClientIDRsp& from);
  void MergeFrom(const UnbindPushClientIDRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnbindPushClientIDRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddGroupReq) */ {
 public:
  AddGroupReq();
  virtual ~AddGroupReq();

  AddGroupReq(const AddGroupReq& from);

  inline AddGroupReq& operator=(const AddGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGroupReq& default_instance();

  static inline const AddGroupReq* internal_default_instance() {
    return reinterpret_cast<const AddGroupReq*>(
               &_AddGroupReq_default_instance_);
  }

  void Swap(AddGroupReq* other);

  // implements Message ----------------------------------------------

  inline AddGroupReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddGroupReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddGroupReq& from);
  void MergeFrom(const AddGroupReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Group groupInfo = 2;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Group& groupinfo() const;
  ::CustomerFlow::Interactive::Message::Group* mutable_groupinfo();
  ::CustomerFlow::Interactive::Message::Group* release_groupinfo();
  void set_allocated_groupinfo(::CustomerFlow::Interactive::Message::Group* groupinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Group* groupinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddGroupRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddGroupRsp) */ {
 public:
  AddGroupRsp();
  virtual ~AddGroupRsp();

  AddGroupRsp(const AddGroupRsp& from);

  inline AddGroupRsp& operator=(const AddGroupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGroupRsp& default_instance();

  static inline const AddGroupRsp* internal_default_instance() {
    return reinterpret_cast<const AddGroupRsp*>(
               &_AddGroupRsp_default_instance_);
  }

  void Swap(AddGroupRsp* other);

  // implements Message ----------------------------------------------

  inline AddGroupRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddGroupRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddGroupRsp& from);
  void MergeFrom(const AddGroupRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddGroupRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strGroupID = 1;
  void clear_strgroupid();
  static const int kStrGroupIDFieldNumber = 1;
  const ::std::string& strgroupid() const;
  void set_strgroupid(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupid(::std::string&& value);
  #endif
  void set_strgroupid(const char* value);
  void set_strgroupid(const char* value, size_t size);
  ::std::string* mutable_strgroupid();
  ::std::string* release_strgroupid();
  void set_allocated_strgroupid(::std::string* strgroupid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddGroupRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strgroupid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteGroupReq) */ {
 public:
  DeleteGroupReq();
  virtual ~DeleteGroupReq();

  DeleteGroupReq(const DeleteGroupReq& from);

  inline DeleteGroupReq& operator=(const DeleteGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupReq& default_instance();

  static inline const DeleteGroupReq* internal_default_instance() {
    return reinterpret_cast<const DeleteGroupReq*>(
               &_DeleteGroupReq_default_instance_);
  }

  void Swap(DeleteGroupReq* other);

  // implements Message ----------------------------------------------

  inline DeleteGroupReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteGroupReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteGroupReq& from);
  void MergeFrom(const DeleteGroupReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strGroupID = 2;
  void clear_strgroupid();
  static const int kStrGroupIDFieldNumber = 2;
  const ::std::string& strgroupid() const;
  void set_strgroupid(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupid(::std::string&& value);
  #endif
  void set_strgroupid(const char* value);
  void set_strgroupid(const char* value, size_t size);
  ::std::string* mutable_strgroupid();
  ::std::string* release_strgroupid();
  void set_allocated_strgroupid(::std::string* strgroupid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strgroupid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteGroupRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteGroupRsp) */ {
 public:
  DeleteGroupRsp();
  virtual ~DeleteGroupRsp();

  DeleteGroupRsp(const DeleteGroupRsp& from);

  inline DeleteGroupRsp& operator=(const DeleteGroupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupRsp& default_instance();

  static inline const DeleteGroupRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteGroupRsp*>(
               &_DeleteGroupRsp_default_instance_);
  }

  void Swap(DeleteGroupRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteGroupRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteGroupRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteGroupRsp& from);
  void MergeFrom(const DeleteGroupRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteGroupRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteGroupRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyGroupReq) */ {
 public:
  ModifyGroupReq();
  virtual ~ModifyGroupReq();

  ModifyGroupReq(const ModifyGroupReq& from);

  inline ModifyGroupReq& operator=(const ModifyGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyGroupReq& default_instance();

  static inline const ModifyGroupReq* internal_default_instance() {
    return reinterpret_cast<const ModifyGroupReq*>(
               &_ModifyGroupReq_default_instance_);
  }

  void Swap(ModifyGroupReq* other);

  // implements Message ----------------------------------------------

  inline ModifyGroupReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyGroupReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyGroupReq& from);
  void MergeFrom(const ModifyGroupReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Group groupInfo = 2;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Group& groupinfo() const;
  ::CustomerFlow::Interactive::Message::Group* mutable_groupinfo();
  ::CustomerFlow::Interactive::Message::Group* release_groupinfo();
  void set_allocated_groupinfo(::CustomerFlow::Interactive::Message::Group* groupinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Group* groupinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyGroupRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyGroupRsp) */ {
 public:
  ModifyGroupRsp();
  virtual ~ModifyGroupRsp();

  ModifyGroupRsp(const ModifyGroupRsp& from);

  inline ModifyGroupRsp& operator=(const ModifyGroupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyGroupRsp& default_instance();

  static inline const ModifyGroupRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyGroupRsp*>(
               &_ModifyGroupRsp_default_instance_);
  }

  void Swap(ModifyGroupRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyGroupRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyGroupRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyGroupRsp& from);
  void MergeFrom(const ModifyGroupRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyGroupRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyGroupRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryGroupInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryGroupInfoReq) */ {
 public:
  QueryGroupInfoReq();
  virtual ~QueryGroupInfoReq();

  QueryGroupInfoReq(const QueryGroupInfoReq& from);

  inline QueryGroupInfoReq& operator=(const QueryGroupInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGroupInfoReq& default_instance();

  static inline const QueryGroupInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryGroupInfoReq*>(
               &_QueryGroupInfoReq_default_instance_);
  }

  void Swap(QueryGroupInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryGroupInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryGroupInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryGroupInfoReq& from);
  void MergeFrom(const QueryGroupInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryGroupInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strGroupID = 2;
  void clear_strgroupid();
  static const int kStrGroupIDFieldNumber = 2;
  const ::std::string& strgroupid() const;
  void set_strgroupid(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupid(::std::string&& value);
  #endif
  void set_strgroupid(const char* value);
  void set_strgroupid(const char* value, size_t size);
  ::std::string* mutable_strgroupid();
  ::std::string* release_strgroupid();
  void set_allocated_strgroupid(::std::string* strgroupid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryGroupInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strgroupid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryGroupInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryGroupInfoRsp) */ {
 public:
  QueryGroupInfoRsp();
  virtual ~QueryGroupInfoRsp();

  QueryGroupInfoRsp(const QueryGroupInfoRsp& from);

  inline QueryGroupInfoRsp& operator=(const QueryGroupInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGroupInfoRsp& default_instance();

  static inline const QueryGroupInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryGroupInfoRsp*>(
               &_QueryGroupInfoRsp_default_instance_);
  }

  void Swap(QueryGroupInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryGroupInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryGroupInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryGroupInfoRsp& from);
  void MergeFrom(const QueryGroupInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryGroupInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.Group groupInfo = 1;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Group& groupinfo() const;
  ::CustomerFlow::Interactive::Message::Group* mutable_groupinfo();
  ::CustomerFlow::Interactive::Message::Group* release_groupinfo();
  void set_allocated_groupinfo(::CustomerFlow::Interactive::Message::Group* groupinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryGroupInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::Group* groupinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllGroupReq) */ {
 public:
  QueryAllGroupReq();
  virtual ~QueryAllGroupReq();

  QueryAllGroupReq(const QueryAllGroupReq& from);

  inline QueryAllGroupReq& operator=(const QueryAllGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllGroupReq& default_instance();

  static inline const QueryAllGroupReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllGroupReq*>(
               &_QueryAllGroupReq_default_instance_);
  }

  void Swap(QueryAllGroupReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllGroupReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllGroupReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllGroupReq& from);
  void MergeFrom(const QueryAllGroupReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllGroupRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllGroupRsp) */ {
 public:
  QueryAllGroupRsp();
  virtual ~QueryAllGroupRsp();

  QueryAllGroupRsp(const QueryAllGroupRsp& from);

  inline QueryAllGroupRsp& operator=(const QueryAllGroupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllGroupRsp& default_instance();

  static inline const QueryAllGroupRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllGroupRsp*>(
               &_QueryAllGroupRsp_default_instance_);
  }

  void Swap(QueryAllGroupRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllGroupRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllGroupRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllGroupRsp& from);
  void MergeFrom(const QueryAllGroupRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllGroupRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Group groupInfo = 1;
  int groupinfo_size() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Group& groupinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Group* mutable_groupinfo(int index);
  ::CustomerFlow::Interactive::Message::Group* add_groupinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Group >*
      mutable_groupinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Group >&
      groupinfo() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllGroupRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Group > groupinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddStoreReq) */ {
 public:
  AddStoreReq();
  virtual ~AddStoreReq();

  AddStoreReq(const AddStoreReq& from);

  inline AddStoreReq& operator=(const AddStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddStoreReq& default_instance();

  static inline const AddStoreReq* internal_default_instance() {
    return reinterpret_cast<const AddStoreReq*>(
               &_AddStoreReq_default_instance_);
  }

  void Swap(AddStoreReq* other);

  // implements Message ----------------------------------------------

  inline AddStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddStoreReq& from);
  void MergeFrom(const AddStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Store storeInfo = 2;
  bool has_storeinfo() const;
  void clear_storeinfo();
  static const int kStoreInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Store& storeinfo() const;
  ::CustomerFlow::Interactive::Message::Store* mutable_storeinfo();
  ::CustomerFlow::Interactive::Message::Store* release_storeinfo();
  void set_allocated_storeinfo(::CustomerFlow::Interactive::Message::Store* storeinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Store* storeinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddStoreRsp) */ {
 public:
  AddStoreRsp();
  virtual ~AddStoreRsp();

  AddStoreRsp(const AddStoreRsp& from);

  inline AddStoreRsp& operator=(const AddStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddStoreRsp& default_instance();

  static inline const AddStoreRsp* internal_default_instance() {
    return reinterpret_cast<const AddStoreRsp*>(
               &_AddStoreRsp_default_instance_);
  }

  void Swap(AddStoreRsp* other);

  // implements Message ----------------------------------------------

  inline AddStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddStoreRsp& from);
  void MergeFrom(const AddStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strStoreID = 1;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 1;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteStoreReq) */ {
 public:
  DeleteStoreReq();
  virtual ~DeleteStoreReq();

  DeleteStoreReq(const DeleteStoreReq& from);

  inline DeleteStoreReq& operator=(const DeleteStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStoreReq& default_instance();

  static inline const DeleteStoreReq* internal_default_instance() {
    return reinterpret_cast<const DeleteStoreReq*>(
               &_DeleteStoreReq_default_instance_);
  }

  void Swap(DeleteStoreReq* other);

  // implements Message ----------------------------------------------

  inline DeleteStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteStoreReq& from);
  void MergeFrom(const DeleteStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteStoreRsp) */ {
 public:
  DeleteStoreRsp();
  virtual ~DeleteStoreRsp();

  DeleteStoreRsp(const DeleteStoreRsp& from);

  inline DeleteStoreRsp& operator=(const DeleteStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStoreRsp& default_instance();

  static inline const DeleteStoreRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteStoreRsp*>(
               &_DeleteStoreRsp_default_instance_);
  }

  void Swap(DeleteStoreRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteStoreRsp& from);
  void MergeFrom(const DeleteStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyStoreReq) */ {
 public:
  ModifyStoreReq();
  virtual ~ModifyStoreReq();

  ModifyStoreReq(const ModifyStoreReq& from);

  inline ModifyStoreReq& operator=(const ModifyStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyStoreReq& default_instance();

  static inline const ModifyStoreReq* internal_default_instance() {
    return reinterpret_cast<const ModifyStoreReq*>(
               &_ModifyStoreReq_default_instance_);
  }

  void Swap(ModifyStoreReq* other);

  // implements Message ----------------------------------------------

  inline ModifyStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyStoreReq& from);
  void MergeFrom(const ModifyStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Store storeInfo = 2;
  bool has_storeinfo() const;
  void clear_storeinfo();
  static const int kStoreInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Store& storeinfo() const;
  ::CustomerFlow::Interactive::Message::Store* mutable_storeinfo();
  ::CustomerFlow::Interactive::Message::Store* release_storeinfo();
  void set_allocated_storeinfo(::CustomerFlow::Interactive::Message::Store* storeinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Store* storeinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyStoreRsp) */ {
 public:
  ModifyStoreRsp();
  virtual ~ModifyStoreRsp();

  ModifyStoreRsp(const ModifyStoreRsp& from);

  inline ModifyStoreRsp& operator=(const ModifyStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyStoreRsp& default_instance();

  static inline const ModifyStoreRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyStoreRsp*>(
               &_ModifyStoreRsp_default_instance_);
  }

  void Swap(ModifyStoreRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyStoreRsp& from);
  void MergeFrom(const ModifyStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreInfoReq) */ {
 public:
  QueryStoreInfoReq();
  virtual ~QueryStoreInfoReq();

  QueryStoreInfoReq(const QueryStoreInfoReq& from);

  inline QueryStoreInfoReq& operator=(const QueryStoreInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreInfoReq& default_instance();

  static inline const QueryStoreInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryStoreInfoReq*>(
               &_QueryStoreInfoReq_default_instance_);
  }

  void Swap(QueryStoreInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryStoreInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreInfoReq& from);
  void MergeFrom(const QueryStoreInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreInfoRsp) */ {
 public:
  QueryStoreInfoRsp();
  virtual ~QueryStoreInfoRsp();

  QueryStoreInfoRsp(const QueryStoreInfoRsp& from);

  inline QueryStoreInfoRsp& operator=(const QueryStoreInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreInfoRsp& default_instance();

  static inline const QueryStoreInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryStoreInfoRsp*>(
               &_QueryStoreInfoRsp_default_instance_);
  }

  void Swap(QueryStoreInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryStoreInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreInfoRsp& from);
  void MergeFrom(const QueryStoreInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Area area = 2;
  int area_size() const;
  void clear_area();
  static const int kAreaFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Area& area(int index) const;
  ::CustomerFlow::Interactive::Message::Area* mutable_area(int index);
  ::CustomerFlow::Interactive::Message::Area* add_area();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >*
      mutable_area();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >&
      area() const;

  // .CustomerFlow.Interactive.Message.Store storeInfo = 1;
  bool has_storeinfo() const;
  void clear_storeinfo();
  static const int kStoreInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Store& storeinfo() const;
  ::CustomerFlow::Interactive::Message::Store* mutable_storeinfo();
  ::CustomerFlow::Interactive::Message::Store* release_storeinfo();
  void set_allocated_storeinfo(::CustomerFlow::Interactive::Message::Store* storeinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area > area_;
  ::CustomerFlow::Interactive::Message::Store* storeinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllStoreReq) */ {
 public:
  QueryAllStoreReq();
  virtual ~QueryAllStoreReq();

  QueryAllStoreReq(const QueryAllStoreReq& from);

  inline QueryAllStoreReq& operator=(const QueryAllStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllStoreReq& default_instance();

  static inline const QueryAllStoreReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllStoreReq*>(
               &_QueryAllStoreReq_default_instance_);
  }

  void Swap(QueryAllStoreReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllStoreReq& from);
  void MergeFrom(const QueryAllStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strAreaID = 2;
  void clear_strareaid();
  static const int kStrAreaIDFieldNumber = 2;
  const ::std::string& strareaid() const;
  void set_strareaid(const ::std::string& value);
  #if LANG_CXX11
  void set_strareaid(::std::string&& value);
  #endif
  void set_strareaid(const char* value);
  void set_strareaid(const char* value, size_t size);
  ::std::string* mutable_strareaid();
  ::std::string* release_strareaid();
  void set_allocated_strareaid(::std::string* strareaid);

  // uint32 uiOpenState = 3;
  void clear_uiopenstate();
  static const int kUiOpenStateFieldNumber = 3;
  ::google::protobuf::uint32 uiopenstate() const;
  void set_uiopenstate(::google::protobuf::uint32 value);

  // uint32 uiBeginIndex = 4;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 4;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strareaid_;
  ::google::protobuf::uint32 uiopenstate_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllStoreRsp) */ {
 public:
  QueryAllStoreRsp();
  virtual ~QueryAllStoreRsp();

  QueryAllStoreRsp(const QueryAllStoreRsp& from);

  inline QueryAllStoreRsp& operator=(const QueryAllStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllStoreRsp& default_instance();

  static inline const QueryAllStoreRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllStoreRsp*>(
               &_QueryAllStoreRsp_default_instance_);
  }

  void Swap(QueryAllStoreRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllStoreRsp& from);
  void MergeFrom(const QueryAllStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Store storeInfo = 1;
  int storeinfo_size() const;
  void clear_storeinfo();
  static const int kStoreInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Store& storeinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Store* mutable_storeinfo(int index);
  ::CustomerFlow::Interactive::Message::Store* add_storeinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Store >*
      mutable_storeinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Store >&
      storeinfo() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Store > storeinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEntranceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEntranceReq) */ {
 public:
  AddEntranceReq();
  virtual ~AddEntranceReq();

  AddEntranceReq(const AddEntranceReq& from);

  inline AddEntranceReq& operator=(const AddEntranceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEntranceReq& default_instance();

  static inline const AddEntranceReq* internal_default_instance() {
    return reinterpret_cast<const AddEntranceReq*>(
               &_AddEntranceReq_default_instance_);
  }

  void Swap(AddEntranceReq* other);

  // implements Message ----------------------------------------------

  inline AddEntranceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEntranceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEntranceReq& from);
  void MergeFrom(const AddEntranceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEntranceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // .CustomerFlow.Interactive.Message.Entrance entranceInfo = 3;
  bool has_entranceinfo() const;
  void clear_entranceinfo();
  static const int kEntranceInfoFieldNumber = 3;
  const ::CustomerFlow::Interactive::Message::Entrance& entranceinfo() const;
  ::CustomerFlow::Interactive::Message::Entrance* mutable_entranceinfo();
  ::CustomerFlow::Interactive::Message::Entrance* release_entranceinfo();
  void set_allocated_entranceinfo(::CustomerFlow::Interactive::Message::Entrance* entranceinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEntranceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::CustomerFlow::Interactive::Message::Entrance* entranceinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEntranceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEntranceRsp) */ {
 public:
  AddEntranceRsp();
  virtual ~AddEntranceRsp();

  AddEntranceRsp(const AddEntranceRsp& from);

  inline AddEntranceRsp& operator=(const AddEntranceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEntranceRsp& default_instance();

  static inline const AddEntranceRsp* internal_default_instance() {
    return reinterpret_cast<const AddEntranceRsp*>(
               &_AddEntranceRsp_default_instance_);
  }

  void Swap(AddEntranceRsp* other);

  // implements Message ----------------------------------------------

  inline AddEntranceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEntranceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEntranceRsp& from);
  void MergeFrom(const AddEntranceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEntranceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strEntranceID = 1;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 1;
  const ::std::string& strentranceid() const;
  void set_strentranceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strentranceid(::std::string&& value);
  #endif
  void set_strentranceid(const char* value);
  void set_strentranceid(const char* value, size_t size);
  ::std::string* mutable_strentranceid();
  ::std::string* release_strentranceid();
  void set_allocated_strentranceid(::std::string* strentranceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEntranceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strentranceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEntranceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEntranceReq) */ {
 public:
  DeleteEntranceReq();
  virtual ~DeleteEntranceReq();

  DeleteEntranceReq(const DeleteEntranceReq& from);

  inline DeleteEntranceReq& operator=(const DeleteEntranceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEntranceReq& default_instance();

  static inline const DeleteEntranceReq* internal_default_instance() {
    return reinterpret_cast<const DeleteEntranceReq*>(
               &_DeleteEntranceReq_default_instance_);
  }

  void Swap(DeleteEntranceReq* other);

  // implements Message ----------------------------------------------

  inline DeleteEntranceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEntranceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEntranceReq& from);
  void MergeFrom(const DeleteEntranceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEntranceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strEntranceID = 3;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 3;
  const ::std::string& strentranceid() const;
  void set_strentranceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strentranceid(::std::string&& value);
  #endif
  void set_strentranceid(const char* value);
  void set_strentranceid(const char* value, size_t size);
  ::std::string* mutable_strentranceid();
  ::std::string* release_strentranceid();
  void set_allocated_strentranceid(::std::string* strentranceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEntranceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strentranceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEntranceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEntranceRsp) */ {
 public:
  DeleteEntranceRsp();
  virtual ~DeleteEntranceRsp();

  DeleteEntranceRsp(const DeleteEntranceRsp& from);

  inline DeleteEntranceRsp& operator=(const DeleteEntranceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEntranceRsp& default_instance();

  static inline const DeleteEntranceRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteEntranceRsp*>(
               &_DeleteEntranceRsp_default_instance_);
  }

  void Swap(DeleteEntranceRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteEntranceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEntranceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEntranceRsp& from);
  void MergeFrom(const DeleteEntranceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEntranceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEntranceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyEntranceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyEntranceReq) */ {
 public:
  ModifyEntranceReq();
  virtual ~ModifyEntranceReq();

  ModifyEntranceReq(const ModifyEntranceReq& from);

  inline ModifyEntranceReq& operator=(const ModifyEntranceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyEntranceReq& default_instance();

  static inline const ModifyEntranceReq* internal_default_instance() {
    return reinterpret_cast<const ModifyEntranceReq*>(
               &_ModifyEntranceReq_default_instance_);
  }

  void Swap(ModifyEntranceReq* other);

  // implements Message ----------------------------------------------

  inline ModifyEntranceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyEntranceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyEntranceReq& from);
  void MergeFrom(const ModifyEntranceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyEntranceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strAddedDeviceID = 4;
  int straddeddeviceid_size() const;
  void clear_straddeddeviceid();
  static const int kStrAddedDeviceIDFieldNumber = 4;
  const ::std::string& straddeddeviceid(int index) const;
  ::std::string* mutable_straddeddeviceid(int index);
  void set_straddeddeviceid(int index, const ::std::string& value);
  void set_straddeddeviceid(int index, const char* value);
  void set_straddeddeviceid(int index, const char* value, size_t size);
  ::std::string* add_straddeddeviceid();
  void add_straddeddeviceid(const ::std::string& value);
  void add_straddeddeviceid(const char* value);
  void add_straddeddeviceid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& straddeddeviceid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_straddeddeviceid();

  // repeated string strDeletedDeviceID = 5;
  int strdeleteddeviceid_size() const;
  void clear_strdeleteddeviceid();
  static const int kStrDeletedDeviceIDFieldNumber = 5;
  const ::std::string& strdeleteddeviceid(int index) const;
  ::std::string* mutable_strdeleteddeviceid(int index);
  void set_strdeleteddeviceid(int index, const ::std::string& value);
  void set_strdeleteddeviceid(int index, const char* value);
  void set_strdeleteddeviceid(int index, const char* value, size_t size);
  ::std::string* add_strdeleteddeviceid();
  void add_strdeleteddeviceid(const ::std::string& value);
  void add_strdeleteddeviceid(const char* value);
  void add_strdeleteddeviceid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strdeleteddeviceid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strdeleteddeviceid();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // .CustomerFlow.Interactive.Message.Entrance entranceInfo = 3;
  bool has_entranceinfo() const;
  void clear_entranceinfo();
  static const int kEntranceInfoFieldNumber = 3;
  const ::CustomerFlow::Interactive::Message::Entrance& entranceinfo() const;
  ::CustomerFlow::Interactive::Message::Entrance* mutable_entranceinfo();
  ::CustomerFlow::Interactive::Message::Entrance* release_entranceinfo();
  void set_allocated_entranceinfo(::CustomerFlow::Interactive::Message::Entrance* entranceinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyEntranceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> straddeddeviceid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strdeleteddeviceid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::CustomerFlow::Interactive::Message::Entrance* entranceinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyEntranceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyEntranceRsp) */ {
 public:
  ModifyEntranceRsp();
  virtual ~ModifyEntranceRsp();

  ModifyEntranceRsp(const ModifyEntranceRsp& from);

  inline ModifyEntranceRsp& operator=(const ModifyEntranceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyEntranceRsp& default_instance();

  static inline const ModifyEntranceRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyEntranceRsp*>(
               &_ModifyEntranceRsp_default_instance_);
  }

  void Swap(ModifyEntranceRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyEntranceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyEntranceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyEntranceRsp& from);
  void MergeFrom(const ModifyEntranceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyEntranceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyEntranceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEntranceDeviceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEntranceDeviceReq) */ {
 public:
  AddEntranceDeviceReq();
  virtual ~AddEntranceDeviceReq();

  AddEntranceDeviceReq(const AddEntranceDeviceReq& from);

  inline AddEntranceDeviceReq& operator=(const AddEntranceDeviceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEntranceDeviceReq& default_instance();

  static inline const AddEntranceDeviceReq* internal_default_instance() {
    return reinterpret_cast<const AddEntranceDeviceReq*>(
               &_AddEntranceDeviceReq_default_instance_);
  }

  void Swap(AddEntranceDeviceReq* other);

  // implements Message ----------------------------------------------

  inline AddEntranceDeviceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEntranceDeviceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEntranceDeviceReq& from);
  void MergeFrom(const AddEntranceDeviceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEntranceDeviceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strEntranceID = 3;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 3;
  const ::std::string& strentranceid() const;
  void set_strentranceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strentranceid(::std::string&& value);
  #endif
  void set_strentranceid(const char* value);
  void set_strentranceid(const char* value, size_t size);
  ::std::string* mutable_strentranceid();
  ::std::string* release_strentranceid();
  void set_allocated_strentranceid(::std::string* strentranceid);

  // string strDeviceID = 4;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 4;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEntranceDeviceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strentranceid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEntranceDeviceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp) */ {
 public:
  AddEntranceDeviceRsp();
  virtual ~AddEntranceDeviceRsp();

  AddEntranceDeviceRsp(const AddEntranceDeviceRsp& from);

  inline AddEntranceDeviceRsp& operator=(const AddEntranceDeviceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEntranceDeviceRsp& default_instance();

  static inline const AddEntranceDeviceRsp* internal_default_instance() {
    return reinterpret_cast<const AddEntranceDeviceRsp*>(
               &_AddEntranceDeviceRsp_default_instance_);
  }

  void Swap(AddEntranceDeviceRsp* other);

  // implements Message ----------------------------------------------

  inline AddEntranceDeviceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEntranceDeviceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEntranceDeviceRsp& from);
  void MergeFrom(const AddEntranceDeviceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEntranceDeviceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEntranceDeviceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq) */ {
 public:
  DeleteEntranceDeviceReq();
  virtual ~DeleteEntranceDeviceReq();

  DeleteEntranceDeviceReq(const DeleteEntranceDeviceReq& from);

  inline DeleteEntranceDeviceReq& operator=(const DeleteEntranceDeviceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEntranceDeviceReq& default_instance();

  static inline const DeleteEntranceDeviceReq* internal_default_instance() {
    return reinterpret_cast<const DeleteEntranceDeviceReq*>(
               &_DeleteEntranceDeviceReq_default_instance_);
  }

  void Swap(DeleteEntranceDeviceReq* other);

  // implements Message ----------------------------------------------

  inline DeleteEntranceDeviceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEntranceDeviceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEntranceDeviceReq& from);
  void MergeFrom(const DeleteEntranceDeviceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEntranceDeviceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strEntranceID = 3;
  void clear_strentranceid();
  static const int kStrEntranceIDFieldNumber = 3;
  const ::std::string& strentranceid() const;
  void set_strentranceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strentranceid(::std::string&& value);
  #endif
  void set_strentranceid(const char* value);
  void set_strentranceid(const char* value, size_t size);
  ::std::string* mutable_strentranceid();
  ::std::string* release_strentranceid();
  void set_allocated_strentranceid(::std::string* strentranceid);

  // string strDeviceID = 4;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 4;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strentranceid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEntranceDeviceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp) */ {
 public:
  DeleteEntranceDeviceRsp();
  virtual ~DeleteEntranceDeviceRsp();

  DeleteEntranceDeviceRsp(const DeleteEntranceDeviceRsp& from);

  inline DeleteEntranceDeviceRsp& operator=(const DeleteEntranceDeviceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEntranceDeviceRsp& default_instance();

  static inline const DeleteEntranceDeviceRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteEntranceDeviceRsp*>(
               &_DeleteEntranceDeviceRsp_default_instance_);
  }

  void Swap(DeleteEntranceDeviceRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteEntranceDeviceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEntranceDeviceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEntranceDeviceRsp& from);
  void MergeFrom(const DeleteEntranceDeviceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEntranceDeviceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEventReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEventReq) */ {
 public:
  AddEventReq();
  virtual ~AddEventReq();

  AddEventReq(const AddEventReq& from);

  inline AddEventReq& operator=(const AddEventReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEventReq& default_instance();

  static inline const AddEventReq* internal_default_instance() {
    return reinterpret_cast<const AddEventReq*>(
               &_AddEventReq_default_instance_);
  }

  void Swap(AddEventReq* other);

  // implements Message ----------------------------------------------

  inline AddEventReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEventReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEventReq& from);
  void MergeFrom(const AddEventReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEventReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.Event eventInfo = 1;
  bool has_eventinfo() const;
  void clear_eventinfo();
  static const int kEventInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Event& eventinfo() const;
  ::CustomerFlow::Interactive::Message::Event* mutable_eventinfo();
  ::CustomerFlow::Interactive::Message::Event* release_eventinfo();
  void set_allocated_eventinfo(::CustomerFlow::Interactive::Message::Event* eventinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEventReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::Event* eventinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEventRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEventRsp) */ {
 public:
  AddEventRsp();
  virtual ~AddEventRsp();

  AddEventRsp(const AddEventRsp& from);

  inline AddEventRsp& operator=(const AddEventRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEventRsp& default_instance();

  static inline const AddEventRsp* internal_default_instance() {
    return reinterpret_cast<const AddEventRsp*>(
               &_AddEventRsp_default_instance_);
  }

  void Swap(AddEventRsp* other);

  // implements Message ----------------------------------------------

  inline AddEventRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEventRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEventRsp& from);
  void MergeFrom(const AddEventRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEventRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strEventID = 1;
  void clear_streventid();
  static const int kStrEventIDFieldNumber = 1;
  const ::std::string& streventid() const;
  void set_streventid(const ::std::string& value);
  #if LANG_CXX11
  void set_streventid(::std::string&& value);
  #endif
  void set_streventid(const char* value);
  void set_streventid(const char* value, size_t size);
  ::std::string* mutable_streventid();
  ::std::string* release_streventid();
  void set_allocated_streventid(::std::string* streventid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEventRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr streventid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEventReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEventReq) */ {
 public:
  DeleteEventReq();
  virtual ~DeleteEventReq();

  DeleteEventReq(const DeleteEventReq& from);

  inline DeleteEventReq& operator=(const DeleteEventReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEventReq& default_instance();

  static inline const DeleteEventReq* internal_default_instance() {
    return reinterpret_cast<const DeleteEventReq*>(
               &_DeleteEventReq_default_instance_);
  }

  void Swap(DeleteEventReq* other);

  // implements Message ----------------------------------------------

  inline DeleteEventReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEventReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEventReq& from);
  void MergeFrom(const DeleteEventReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEventReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strEventID = 2;
  void clear_streventid();
  static const int kStrEventIDFieldNumber = 2;
  const ::std::string& streventid() const;
  void set_streventid(const ::std::string& value);
  #if LANG_CXX11
  void set_streventid(::std::string&& value);
  #endif
  void set_streventid(const char* value);
  void set_streventid(const char* value, size_t size);
  ::std::string* mutable_streventid();
  ::std::string* release_streventid();
  void set_allocated_streventid(::std::string* streventid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEventReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr streventid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEventRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEventRsp) */ {
 public:
  DeleteEventRsp();
  virtual ~DeleteEventRsp();

  DeleteEventRsp(const DeleteEventRsp& from);

  inline DeleteEventRsp& operator=(const DeleteEventRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEventRsp& default_instance();

  static inline const DeleteEventRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteEventRsp*>(
               &_DeleteEventRsp_default_instance_);
  }

  void Swap(DeleteEventRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteEventRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEventRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEventRsp& from);
  void MergeFrom(const DeleteEventRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEventRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEventRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyEventReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyEventReq) */ {
 public:
  ModifyEventReq();
  virtual ~ModifyEventReq();

  ModifyEventReq(const ModifyEventReq& from);

  inline ModifyEventReq& operator=(const ModifyEventReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyEventReq& default_instance();

  static inline const ModifyEventReq* internal_default_instance() {
    return reinterpret_cast<const ModifyEventReq*>(
               &_ModifyEventReq_default_instance_);
  }

  void Swap(ModifyEventReq* other);

  // implements Message ----------------------------------------------

  inline ModifyEventReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyEventReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyEventReq& from);
  void MergeFrom(const ModifyEventReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyEventReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Event eventInfo = 2;
  bool has_eventinfo() const;
  void clear_eventinfo();
  static const int kEventInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Event& eventinfo() const;
  ::CustomerFlow::Interactive::Message::Event* mutable_eventinfo();
  ::CustomerFlow::Interactive::Message::Event* release_eventinfo();
  void set_allocated_eventinfo(::CustomerFlow::Interactive::Message::Event* eventinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyEventReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Event* eventinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyEventRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyEventRsp) */ {
 public:
  ModifyEventRsp();
  virtual ~ModifyEventRsp();

  ModifyEventRsp(const ModifyEventRsp& from);

  inline ModifyEventRsp& operator=(const ModifyEventRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyEventRsp& default_instance();

  static inline const ModifyEventRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyEventRsp*>(
               &_ModifyEventRsp_default_instance_);
  }

  void Swap(ModifyEventRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyEventRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyEventRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyEventRsp& from);
  void MergeFrom(const ModifyEventRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyEventRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyEventRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryEventInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryEventInfoReq) */ {
 public:
  QueryEventInfoReq();
  virtual ~QueryEventInfoReq();

  QueryEventInfoReq(const QueryEventInfoReq& from);

  inline QueryEventInfoReq& operator=(const QueryEventInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryEventInfoReq& default_instance();

  static inline const QueryEventInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryEventInfoReq*>(
               &_QueryEventInfoReq_default_instance_);
  }

  void Swap(QueryEventInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryEventInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryEventInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryEventInfoReq& from);
  void MergeFrom(const QueryEventInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryEventInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strEventID = 2;
  void clear_streventid();
  static const int kStrEventIDFieldNumber = 2;
  const ::std::string& streventid() const;
  void set_streventid(const ::std::string& value);
  #if LANG_CXX11
  void set_streventid(::std::string&& value);
  #endif
  void set_streventid(const char* value);
  void set_streventid(const char* value, size_t size);
  ::std::string* mutable_streventid();
  ::std::string* release_streventid();
  void set_allocated_streventid(::std::string* streventid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryEventInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr streventid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryEventInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryEventInfoRsp) */ {
 public:
  QueryEventInfoRsp();
  virtual ~QueryEventInfoRsp();

  QueryEventInfoRsp(const QueryEventInfoRsp& from);

  inline QueryEventInfoRsp& operator=(const QueryEventInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryEventInfoRsp& default_instance();

  static inline const QueryEventInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryEventInfoRsp*>(
               &_QueryEventInfoRsp_default_instance_);
  }

  void Swap(QueryEventInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryEventInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryEventInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryEventInfoRsp& from);
  void MergeFrom(const QueryEventInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryEventInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.Event eventInfo = 1;
  bool has_eventinfo() const;
  void clear_eventinfo();
  static const int kEventInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Event& eventinfo() const;
  ::CustomerFlow::Interactive::Message::Event* mutable_eventinfo();
  ::CustomerFlow::Interactive::Message::Event* release_eventinfo();
  void set_allocated_eventinfo(::CustomerFlow::Interactive::Message::Event* eventinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryEventInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::Event* eventinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllEventReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllEventReq) */ {
 public:
  QueryAllEventReq();
  virtual ~QueryAllEventReq();

  QueryAllEventReq(const QueryAllEventReq& from);

  inline QueryAllEventReq& operator=(const QueryAllEventReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllEventReq& default_instance();

  static inline const QueryAllEventReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllEventReq*>(
               &_QueryAllEventReq_default_instance_);
  }

  void Swap(QueryAllEventReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllEventReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllEventReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllEventReq& from);
  void MergeFrom(const QueryAllEventReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllEventReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strBeginDate = 4;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 4;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 5;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 5;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // uint32 uiProcessState = 2;
  void clear_uiprocessstate();
  static const int kUiProcessStateFieldNumber = 2;
  ::google::protobuf::uint32 uiprocessstate() const;
  void set_uiprocessstate(::google::protobuf::uint32 value);

  // uint32 uiRelaton = 3;
  void clear_uirelaton();
  static const int kUiRelatonFieldNumber = 3;
  ::google::protobuf::uint32 uirelaton() const;
  void set_uirelaton(::google::protobuf::uint32 value);

  // uint32 uiBeginIndex = 6;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 6;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // uint32 uiEventType = 7;
  void clear_uieventtype();
  static const int kUiEventTypeFieldNumber = 7;
  ::google::protobuf::uint32 uieventtype() const;
  void set_uieventtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllEventReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::uint32 uiprocessstate_;
  ::google::protobuf::uint32 uirelaton_;
  ::google::protobuf::uint32 uibeginindex_;
  ::google::protobuf::uint32 uieventtype_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllEventRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllEventRsp) */ {
 public:
  QueryAllEventRsp();
  virtual ~QueryAllEventRsp();

  QueryAllEventRsp(const QueryAllEventRsp& from);

  inline QueryAllEventRsp& operator=(const QueryAllEventRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllEventRsp& default_instance();

  static inline const QueryAllEventRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllEventRsp*>(
               &_QueryAllEventRsp_default_instance_);
  }

  void Swap(QueryAllEventRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllEventRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllEventRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllEventRsp& from);
  void MergeFrom(const QueryAllEventRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllEventRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Event eventInfo = 1;
  int eventinfo_size() const;
  void clear_eventinfo();
  static const int kEventInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Event& eventinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Event* mutable_eventinfo(int index);
  ::CustomerFlow::Interactive::Message::Event* add_eventinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Event >*
      mutable_eventinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Event >&
      eventinfo() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllEventRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Event > eventinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddSmartGuardStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq) */ {
 public:
  AddSmartGuardStoreReq();
  virtual ~AddSmartGuardStoreReq();

  AddSmartGuardStoreReq(const AddSmartGuardStoreReq& from);

  inline AddSmartGuardStoreReq& operator=(const AddSmartGuardStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddSmartGuardStoreReq& default_instance();

  static inline const AddSmartGuardStoreReq* internal_default_instance() {
    return reinterpret_cast<const AddSmartGuardStoreReq*>(
               &_AddSmartGuardStoreReq_default_instance_);
  }

  void Swap(AddSmartGuardStoreReq* other);

  // implements Message ----------------------------------------------

  inline AddSmartGuardStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddSmartGuardStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddSmartGuardStoreReq& from);
  void MergeFrom(const AddSmartGuardStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddSmartGuardStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 2;
  bool has_smartguardstore() const;
  void clear_smartguardstore();
  static const int kSmartGuardStoreFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::SmartGuardStore& smartguardstore() const;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* mutable_smartguardstore();
  ::CustomerFlow::Interactive::Message::SmartGuardStore* release_smartguardstore();
  void set_allocated_smartguardstore(::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddSmartGuardStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp) */ {
 public:
  AddSmartGuardStoreRsp();
  virtual ~AddSmartGuardStoreRsp();

  AddSmartGuardStoreRsp(const AddSmartGuardStoreRsp& from);

  inline AddSmartGuardStoreRsp& operator=(const AddSmartGuardStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddSmartGuardStoreRsp& default_instance();

  static inline const AddSmartGuardStoreRsp* internal_default_instance() {
    return reinterpret_cast<const AddSmartGuardStoreRsp*>(
               &_AddSmartGuardStoreRsp_default_instance_);
  }

  void Swap(AddSmartGuardStoreRsp* other);

  // implements Message ----------------------------------------------

  inline AddSmartGuardStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddSmartGuardStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddSmartGuardStoreRsp& from);
  void MergeFrom(const AddSmartGuardStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddSmartGuardStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strPlanID = 1;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 1;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteSmartGuardStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq) */ {
 public:
  DeleteSmartGuardStoreReq();
  virtual ~DeleteSmartGuardStoreReq();

  DeleteSmartGuardStoreReq(const DeleteSmartGuardStoreReq& from);

  inline DeleteSmartGuardStoreReq& operator=(const DeleteSmartGuardStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSmartGuardStoreReq& default_instance();

  static inline const DeleteSmartGuardStoreReq* internal_default_instance() {
    return reinterpret_cast<const DeleteSmartGuardStoreReq*>(
               &_DeleteSmartGuardStoreReq_default_instance_);
  }

  void Swap(DeleteSmartGuardStoreReq* other);

  // implements Message ----------------------------------------------

  inline DeleteSmartGuardStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteSmartGuardStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteSmartGuardStoreReq& from);
  void MergeFrom(const DeleteSmartGuardStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteSmartGuardStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strPlanID = 2;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 2;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteSmartGuardStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp) */ {
 public:
  DeleteSmartGuardStoreRsp();
  virtual ~DeleteSmartGuardStoreRsp();

  DeleteSmartGuardStoreRsp(const DeleteSmartGuardStoreRsp& from);

  inline DeleteSmartGuardStoreRsp& operator=(const DeleteSmartGuardStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSmartGuardStoreRsp& default_instance();

  static inline const DeleteSmartGuardStoreRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteSmartGuardStoreRsp*>(
               &_DeleteSmartGuardStoreRsp_default_instance_);
  }

  void Swap(DeleteSmartGuardStoreRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteSmartGuardStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteSmartGuardStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteSmartGuardStoreRsp& from);
  void MergeFrom(const DeleteSmartGuardStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteSmartGuardStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifySmartGuardStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq) */ {
 public:
  ModifySmartGuardStoreReq();
  virtual ~ModifySmartGuardStoreReq();

  ModifySmartGuardStoreReq(const ModifySmartGuardStoreReq& from);

  inline ModifySmartGuardStoreReq& operator=(const ModifySmartGuardStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifySmartGuardStoreReq& default_instance();

  static inline const ModifySmartGuardStoreReq* internal_default_instance() {
    return reinterpret_cast<const ModifySmartGuardStoreReq*>(
               &_ModifySmartGuardStoreReq_default_instance_);
  }

  void Swap(ModifySmartGuardStoreReq* other);

  // implements Message ----------------------------------------------

  inline ModifySmartGuardStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifySmartGuardStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifySmartGuardStoreReq& from);
  void MergeFrom(const ModifySmartGuardStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifySmartGuardStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 2;
  bool has_smartguardstore() const;
  void clear_smartguardstore();
  static const int kSmartGuardStoreFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::SmartGuardStore& smartguardstore() const;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* mutable_smartguardstore();
  ::CustomerFlow::Interactive::Message::SmartGuardStore* release_smartguardstore();
  void set_allocated_smartguardstore(::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifySmartGuardStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp) */ {
 public:
  ModifySmartGuardStoreRsp();
  virtual ~ModifySmartGuardStoreRsp();

  ModifySmartGuardStoreRsp(const ModifySmartGuardStoreRsp& from);

  inline ModifySmartGuardStoreRsp& operator=(const ModifySmartGuardStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifySmartGuardStoreRsp& default_instance();

  static inline const ModifySmartGuardStoreRsp* internal_default_instance() {
    return reinterpret_cast<const ModifySmartGuardStoreRsp*>(
               &_ModifySmartGuardStoreRsp_default_instance_);
  }

  void Swap(ModifySmartGuardStoreRsp* other);

  // implements Message ----------------------------------------------

  inline ModifySmartGuardStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifySmartGuardStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifySmartGuardStoreRsp& from);
  void MergeFrom(const ModifySmartGuardStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifySmartGuardStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySmartGuardStoreInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq) */ {
 public:
  QuerySmartGuardStoreInfoReq();
  virtual ~QuerySmartGuardStoreInfoReq();

  QuerySmartGuardStoreInfoReq(const QuerySmartGuardStoreInfoReq& from);

  inline QuerySmartGuardStoreInfoReq& operator=(const QuerySmartGuardStoreInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySmartGuardStoreInfoReq& default_instance();

  static inline const QuerySmartGuardStoreInfoReq* internal_default_instance() {
    return reinterpret_cast<const QuerySmartGuardStoreInfoReq*>(
               &_QuerySmartGuardStoreInfoReq_default_instance_);
  }

  void Swap(QuerySmartGuardStoreInfoReq* other);

  // implements Message ----------------------------------------------

  inline QuerySmartGuardStoreInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySmartGuardStoreInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySmartGuardStoreInfoReq& from);
  void MergeFrom(const QuerySmartGuardStoreInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySmartGuardStoreInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strPlanID = 2;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 2;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySmartGuardStoreInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp) */ {
 public:
  QuerySmartGuardStoreInfoRsp();
  virtual ~QuerySmartGuardStoreInfoRsp();

  QuerySmartGuardStoreInfoRsp(const QuerySmartGuardStoreInfoRsp& from);

  inline QuerySmartGuardStoreInfoRsp& operator=(const QuerySmartGuardStoreInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySmartGuardStoreInfoRsp& default_instance();

  static inline const QuerySmartGuardStoreInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QuerySmartGuardStoreInfoRsp*>(
               &_QuerySmartGuardStoreInfoRsp_default_instance_);
  }

  void Swap(QuerySmartGuardStoreInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QuerySmartGuardStoreInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySmartGuardStoreInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySmartGuardStoreInfoRsp& from);
  void MergeFrom(const QuerySmartGuardStoreInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySmartGuardStoreInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 1;
  bool has_smartguardstore() const;
  void clear_smartguardstore();
  static const int kSmartGuardStoreFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::SmartGuardStore& smartguardstore() const;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* mutable_smartguardstore();
  ::CustomerFlow::Interactive::Message::SmartGuardStore* release_smartguardstore();
  void set_allocated_smartguardstore(::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllSmartGuardStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq) */ {
 public:
  QueryAllSmartGuardStoreReq();
  virtual ~QueryAllSmartGuardStoreReq();

  QueryAllSmartGuardStoreReq(const QueryAllSmartGuardStoreReq& from);

  inline QueryAllSmartGuardStoreReq& operator=(const QueryAllSmartGuardStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllSmartGuardStoreReq& default_instance();

  static inline const QueryAllSmartGuardStoreReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllSmartGuardStoreReq*>(
               &_QueryAllSmartGuardStoreReq_default_instance_);
  }

  void Swap(QueryAllSmartGuardStoreReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllSmartGuardStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllSmartGuardStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllSmartGuardStoreReq& from);
  void MergeFrom(const QueryAllSmartGuardStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllSmartGuardStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDeviceID = 2;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 2;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // uint32 uiBeginIndex = 3;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 3;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllSmartGuardStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp) */ {
 public:
  QueryAllSmartGuardStoreRsp();
  virtual ~QueryAllSmartGuardStoreRsp();

  QueryAllSmartGuardStoreRsp(const QueryAllSmartGuardStoreRsp& from);

  inline QueryAllSmartGuardStoreRsp& operator=(const QueryAllSmartGuardStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllSmartGuardStoreRsp& default_instance();

  static inline const QueryAllSmartGuardStoreRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllSmartGuardStoreRsp*>(
               &_QueryAllSmartGuardStoreRsp_default_instance_);
  }

  void Swap(QueryAllSmartGuardStoreRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllSmartGuardStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllSmartGuardStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllSmartGuardStoreRsp& from);
  void MergeFrom(const QueryAllSmartGuardStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllSmartGuardStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 1;
  int smartguardstore_size() const;
  void clear_smartguardstore();
  static const int kSmartGuardStoreFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::SmartGuardStore& smartguardstore(int index) const;
  ::CustomerFlow::Interactive::Message::SmartGuardStore* mutable_smartguardstore(int index);
  ::CustomerFlow::Interactive::Message::SmartGuardStore* add_smartguardstore();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SmartGuardStore >*
      mutable_smartguardstore();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SmartGuardStore >&
      smartguardstore() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SmartGuardStore > smartguardstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRegularPatrolReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddRegularPatrolReq) */ {
 public:
  AddRegularPatrolReq();
  virtual ~AddRegularPatrolReq();

  AddRegularPatrolReq(const AddRegularPatrolReq& from);

  inline AddRegularPatrolReq& operator=(const AddRegularPatrolReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRegularPatrolReq& default_instance();

  static inline const AddRegularPatrolReq* internal_default_instance() {
    return reinterpret_cast<const AddRegularPatrolReq*>(
               &_AddRegularPatrolReq_default_instance_);
  }

  void Swap(AddRegularPatrolReq* other);

  // implements Message ----------------------------------------------

  inline AddRegularPatrolReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRegularPatrolReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRegularPatrolReq& from);
  void MergeFrom(const AddRegularPatrolReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRegularPatrolReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 2;
  bool has_regularpatrol() const;
  void clear_regularpatrol();
  static const int kRegularPatrolFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::RegularPatrol& regularpatrol() const;
  ::CustomerFlow::Interactive::Message::RegularPatrol* mutable_regularpatrol();
  ::CustomerFlow::Interactive::Message::RegularPatrol* release_regularpatrol();
  void set_allocated_regularpatrol(::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddRegularPatrolReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRegularPatrolRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddRegularPatrolRsp) */ {
 public:
  AddRegularPatrolRsp();
  virtual ~AddRegularPatrolRsp();

  AddRegularPatrolRsp(const AddRegularPatrolRsp& from);

  inline AddRegularPatrolRsp& operator=(const AddRegularPatrolRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRegularPatrolRsp& default_instance();

  static inline const AddRegularPatrolRsp* internal_default_instance() {
    return reinterpret_cast<const AddRegularPatrolRsp*>(
               &_AddRegularPatrolRsp_default_instance_);
  }

  void Swap(AddRegularPatrolRsp* other);

  // implements Message ----------------------------------------------

  inline AddRegularPatrolRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRegularPatrolRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRegularPatrolRsp& from);
  void MergeFrom(const AddRegularPatrolRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRegularPatrolRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strPlanID = 1;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 1;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddRegularPatrolRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteRegularPatrolReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq) */ {
 public:
  DeleteRegularPatrolReq();
  virtual ~DeleteRegularPatrolReq();

  DeleteRegularPatrolReq(const DeleteRegularPatrolReq& from);

  inline DeleteRegularPatrolReq& operator=(const DeleteRegularPatrolReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRegularPatrolReq& default_instance();

  static inline const DeleteRegularPatrolReq* internal_default_instance() {
    return reinterpret_cast<const DeleteRegularPatrolReq*>(
               &_DeleteRegularPatrolReq_default_instance_);
  }

  void Swap(DeleteRegularPatrolReq* other);

  // implements Message ----------------------------------------------

  inline DeleteRegularPatrolReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteRegularPatrolReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteRegularPatrolReq& from);
  void MergeFrom(const DeleteRegularPatrolReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteRegularPatrolReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strPlanID = 2;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 2;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteRegularPatrolRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp) */ {
 public:
  DeleteRegularPatrolRsp();
  virtual ~DeleteRegularPatrolRsp();

  DeleteRegularPatrolRsp(const DeleteRegularPatrolRsp& from);

  inline DeleteRegularPatrolRsp& operator=(const DeleteRegularPatrolRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRegularPatrolRsp& default_instance();

  static inline const DeleteRegularPatrolRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteRegularPatrolRsp*>(
               &_DeleteRegularPatrolRsp_default_instance_);
  }

  void Swap(DeleteRegularPatrolRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteRegularPatrolRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteRegularPatrolRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteRegularPatrolRsp& from);
  void MergeFrom(const DeleteRegularPatrolRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteRegularPatrolRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyRegularPatrolReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq) */ {
 public:
  ModifyRegularPatrolReq();
  virtual ~ModifyRegularPatrolReq();

  ModifyRegularPatrolReq(const ModifyRegularPatrolReq& from);

  inline ModifyRegularPatrolReq& operator=(const ModifyRegularPatrolReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyRegularPatrolReq& default_instance();

  static inline const ModifyRegularPatrolReq* internal_default_instance() {
    return reinterpret_cast<const ModifyRegularPatrolReq*>(
               &_ModifyRegularPatrolReq_default_instance_);
  }

  void Swap(ModifyRegularPatrolReq* other);

  // implements Message ----------------------------------------------

  inline ModifyRegularPatrolReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyRegularPatrolReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyRegularPatrolReq& from);
  void MergeFrom(const ModifyRegularPatrolReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyRegularPatrolReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 2;
  bool has_regularpatrol() const;
  void clear_regularpatrol();
  static const int kRegularPatrolFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::RegularPatrol& regularpatrol() const;
  ::CustomerFlow::Interactive::Message::RegularPatrol* mutable_regularpatrol();
  ::CustomerFlow::Interactive::Message::RegularPatrol* release_regularpatrol();
  void set_allocated_regularpatrol(::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyRegularPatrolRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp) */ {
 public:
  ModifyRegularPatrolRsp();
  virtual ~ModifyRegularPatrolRsp();

  ModifyRegularPatrolRsp(const ModifyRegularPatrolRsp& from);

  inline ModifyRegularPatrolRsp& operator=(const ModifyRegularPatrolRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyRegularPatrolRsp& default_instance();

  static inline const ModifyRegularPatrolRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyRegularPatrolRsp*>(
               &_ModifyRegularPatrolRsp_default_instance_);
  }

  void Swap(ModifyRegularPatrolRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyRegularPatrolRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyRegularPatrolRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyRegularPatrolRsp& from);
  void MergeFrom(const ModifyRegularPatrolRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyRegularPatrolRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRegularPatrolInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq) */ {
 public:
  QueryRegularPatrolInfoReq();
  virtual ~QueryRegularPatrolInfoReq();

  QueryRegularPatrolInfoReq(const QueryRegularPatrolInfoReq& from);

  inline QueryRegularPatrolInfoReq& operator=(const QueryRegularPatrolInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRegularPatrolInfoReq& default_instance();

  static inline const QueryRegularPatrolInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryRegularPatrolInfoReq*>(
               &_QueryRegularPatrolInfoReq_default_instance_);
  }

  void Swap(QueryRegularPatrolInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryRegularPatrolInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRegularPatrolInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRegularPatrolInfoReq& from);
  void MergeFrom(const QueryRegularPatrolInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRegularPatrolInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strPlanID = 2;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 2;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRegularPatrolInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp) */ {
 public:
  QueryRegularPatrolInfoRsp();
  virtual ~QueryRegularPatrolInfoRsp();

  QueryRegularPatrolInfoRsp(const QueryRegularPatrolInfoRsp& from);

  inline QueryRegularPatrolInfoRsp& operator=(const QueryRegularPatrolInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRegularPatrolInfoRsp& default_instance();

  static inline const QueryRegularPatrolInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryRegularPatrolInfoRsp*>(
               &_QueryRegularPatrolInfoRsp_default_instance_);
  }

  void Swap(QueryRegularPatrolInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryRegularPatrolInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRegularPatrolInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRegularPatrolInfoRsp& from);
  void MergeFrom(const QueryRegularPatrolInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRegularPatrolInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 1;
  bool has_regularpatrol() const;
  void clear_regularpatrol();
  static const int kRegularPatrolFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::RegularPatrol& regularpatrol() const;
  ::CustomerFlow::Interactive::Message::RegularPatrol* mutable_regularpatrol();
  ::CustomerFlow::Interactive::Message::RegularPatrol* release_regularpatrol();
  void set_allocated_regularpatrol(::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllRegularPatrolReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq) */ {
 public:
  QueryAllRegularPatrolReq();
  virtual ~QueryAllRegularPatrolReq();

  QueryAllRegularPatrolReq(const QueryAllRegularPatrolReq& from);

  inline QueryAllRegularPatrolReq& operator=(const QueryAllRegularPatrolReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllRegularPatrolReq& default_instance();

  static inline const QueryAllRegularPatrolReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllRegularPatrolReq*>(
               &_QueryAllRegularPatrolReq_default_instance_);
  }

  void Swap(QueryAllRegularPatrolReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllRegularPatrolReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllRegularPatrolReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllRegularPatrolReq& from);
  void MergeFrom(const QueryAllRegularPatrolReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllRegularPatrolReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDeviceID = 2;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 2;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // uint32 uiBeginIndex = 3;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 3;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllRegularPatrolRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp) */ {
 public:
  QueryAllRegularPatrolRsp();
  virtual ~QueryAllRegularPatrolRsp();

  QueryAllRegularPatrolRsp(const QueryAllRegularPatrolRsp& from);

  inline QueryAllRegularPatrolRsp& operator=(const QueryAllRegularPatrolRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllRegularPatrolRsp& default_instance();

  static inline const QueryAllRegularPatrolRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllRegularPatrolRsp*>(
               &_QueryAllRegularPatrolRsp_default_instance_);
  }

  void Swap(QueryAllRegularPatrolRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllRegularPatrolRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllRegularPatrolRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllRegularPatrolRsp& from);
  void MergeFrom(const QueryAllRegularPatrolRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllRegularPatrolRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 1;
  int regularpatrol_size() const;
  void clear_regularpatrol();
  static const int kRegularPatrolFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::RegularPatrol& regularpatrol(int index) const;
  ::CustomerFlow::Interactive::Message::RegularPatrol* mutable_regularpatrol(int index);
  ::CustomerFlow::Interactive::Message::RegularPatrol* add_regularpatrol();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RegularPatrol >*
      mutable_regularpatrol();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RegularPatrol >&
      regularpatrol() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RegularPatrol > regularpatrol_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserJoinStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserJoinStoreReq) */ {
 public:
  UserJoinStoreReq();
  virtual ~UserJoinStoreReq();

  UserJoinStoreReq(const UserJoinStoreReq& from);

  inline UserJoinStoreReq& operator=(const UserJoinStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserJoinStoreReq& default_instance();

  static inline const UserJoinStoreReq* internal_default_instance() {
    return reinterpret_cast<const UserJoinStoreReq*>(
               &_UserJoinStoreReq_default_instance_);
  }

  void Swap(UserJoinStoreReq* other);

  // implements Message ----------------------------------------------

  inline UserJoinStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserJoinStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserJoinStoreReq& from);
  void MergeFrom(const UserJoinStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserJoinStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAdministratorID = 1;
  void clear_stradministratorid();
  static const int kStrAdministratorIDFieldNumber = 1;
  const ::std::string& stradministratorid() const;
  void set_stradministratorid(const ::std::string& value);
  #if LANG_CXX11
  void set_stradministratorid(::std::string&& value);
  #endif
  void set_stradministratorid(const char* value);
  void set_stradministratorid(const char* value, size_t size);
  ::std::string* mutable_stradministratorid();
  ::std::string* release_stradministratorid();
  void set_allocated_stradministratorid(::std::string* stradministratorid);

  // string strUserID = 2;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 2;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 3;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 3;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strRole = 4;
  void clear_strrole();
  static const int kStrRoleFieldNumber = 4;
  const ::std::string& strrole() const;
  void set_strrole(const ::std::string& value);
  #if LANG_CXX11
  void set_strrole(::std::string&& value);
  #endif
  void set_strrole(const char* value);
  void set_strrole(const char* value, size_t size);
  ::std::string* mutable_strrole();
  ::std::string* release_strrole();
  void set_allocated_strrole(::std::string* strrole);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserJoinStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stradministratorid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strrole_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserJoinStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserJoinStoreRsp) */ {
 public:
  UserJoinStoreRsp();
  virtual ~UserJoinStoreRsp();

  UserJoinStoreRsp(const UserJoinStoreRsp& from);

  inline UserJoinStoreRsp& operator=(const UserJoinStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserJoinStoreRsp& default_instance();

  static inline const UserJoinStoreRsp* internal_default_instance() {
    return reinterpret_cast<const UserJoinStoreRsp*>(
               &_UserJoinStoreRsp_default_instance_);
  }

  void Swap(UserJoinStoreRsp* other);

  // implements Message ----------------------------------------------

  inline UserJoinStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UserJoinStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserJoinStoreRsp& from);
  void MergeFrom(const UserJoinStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserJoinStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserJoinStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserQuitStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserQuitStoreReq) */ {
 public:
  UserQuitStoreReq();
  virtual ~UserQuitStoreReq();

  UserQuitStoreReq(const UserQuitStoreReq& from);

  inline UserQuitStoreReq& operator=(const UserQuitStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserQuitStoreReq& default_instance();

  static inline const UserQuitStoreReq* internal_default_instance() {
    return reinterpret_cast<const UserQuitStoreReq*>(
               &_UserQuitStoreReq_default_instance_);
  }

  void Swap(UserQuitStoreReq* other);

  // implements Message ----------------------------------------------

  inline UserQuitStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserQuitStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserQuitStoreReq& from);
  void MergeFrom(const UserQuitStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserQuitStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAdministratorID = 1;
  void clear_stradministratorid();
  static const int kStrAdministratorIDFieldNumber = 1;
  const ::std::string& stradministratorid() const;
  void set_stradministratorid(const ::std::string& value);
  #if LANG_CXX11
  void set_stradministratorid(::std::string&& value);
  #endif
  void set_stradministratorid(const char* value);
  void set_stradministratorid(const char* value, size_t size);
  ::std::string* mutable_stradministratorid();
  ::std::string* release_stradministratorid();
  void set_allocated_stradministratorid(::std::string* stradministratorid);

  // string strUserID = 2;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 2;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 3;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 3;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserQuitStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stradministratorid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserQuitStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserQuitStoreRsp) */ {
 public:
  UserQuitStoreRsp();
  virtual ~UserQuitStoreRsp();

  UserQuitStoreRsp(const UserQuitStoreRsp& from);

  inline UserQuitStoreRsp& operator=(const UserQuitStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserQuitStoreRsp& default_instance();

  static inline const UserQuitStoreRsp* internal_default_instance() {
    return reinterpret_cast<const UserQuitStoreRsp*>(
               &_UserQuitStoreRsp_default_instance_);
  }

  void Swap(UserQuitStoreRsp* other);

  // implements Message ----------------------------------------------

  inline UserQuitStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UserQuitStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserQuitStoreRsp& from);
  void MergeFrom(const UserQuitStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserQuitStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserQuitStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreAllUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreAllUserReq) */ {
 public:
  QueryStoreAllUserReq();
  virtual ~QueryStoreAllUserReq();

  QueryStoreAllUserReq(const QueryStoreAllUserReq& from);

  inline QueryStoreAllUserReq& operator=(const QueryStoreAllUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreAllUserReq& default_instance();

  static inline const QueryStoreAllUserReq* internal_default_instance() {
    return reinterpret_cast<const QueryStoreAllUserReq*>(
               &_QueryStoreAllUserReq_default_instance_);
  }

  void Swap(QueryStoreAllUserReq* other);

  // implements Message ----------------------------------------------

  inline QueryStoreAllUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreAllUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreAllUserReq& from);
  void MergeFrom(const QueryStoreAllUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreAllUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreAllUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreAllUserRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp) */ {
 public:
  QueryStoreAllUserRsp();
  virtual ~QueryStoreAllUserRsp();

  QueryStoreAllUserRsp(const QueryStoreAllUserRsp& from);

  inline QueryStoreAllUserRsp& operator=(const QueryStoreAllUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreAllUserRsp& default_instance();

  static inline const QueryStoreAllUserRsp* internal_default_instance() {
    return reinterpret_cast<const QueryStoreAllUserRsp*>(
               &_QueryStoreAllUserRsp_default_instance_);
  }

  void Swap(QueryStoreAllUserRsp* other);

  // implements Message ----------------------------------------------

  inline QueryStoreAllUserRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreAllUserRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreAllUserRsp& from);
  void MergeFrom(const QueryStoreAllUserRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreAllUserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.UserBrief user = 1;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::UserBrief& user(int index) const;
  ::CustomerFlow::Interactive::Message::UserBrief* mutable_user(int index);
  ::CustomerFlow::Interactive::Message::UserBrief* add_user();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >&
      user() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief > user_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryCompanyAllUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq) */ {
 public:
  QueryCompanyAllUserReq();
  virtual ~QueryCompanyAllUserReq();

  QueryCompanyAllUserReq(const QueryCompanyAllUserReq& from);

  inline QueryCompanyAllUserReq& operator=(const QueryCompanyAllUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCompanyAllUserReq& default_instance();

  static inline const QueryCompanyAllUserReq* internal_default_instance() {
    return reinterpret_cast<const QueryCompanyAllUserReq*>(
               &_QueryCompanyAllUserReq_default_instance_);
  }

  void Swap(QueryCompanyAllUserReq* other);

  // implements Message ----------------------------------------------

  inline QueryCompanyAllUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryCompanyAllUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryCompanyAllUserReq& from);
  void MergeFrom(const QueryCompanyAllUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryCompanyAllUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryCompanyAllUserRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp) */ {
 public:
  QueryCompanyAllUserRsp();
  virtual ~QueryCompanyAllUserRsp();

  QueryCompanyAllUserRsp(const QueryCompanyAllUserRsp& from);

  inline QueryCompanyAllUserRsp& operator=(const QueryCompanyAllUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCompanyAllUserRsp& default_instance();

  static inline const QueryCompanyAllUserRsp* internal_default_instance() {
    return reinterpret_cast<const QueryCompanyAllUserRsp*>(
               &_QueryCompanyAllUserRsp_default_instance_);
  }

  void Swap(QueryCompanyAllUserRsp* other);

  // implements Message ----------------------------------------------

  inline QueryCompanyAllUserRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryCompanyAllUserRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryCompanyAllUserRsp& from);
  void MergeFrom(const QueryCompanyAllUserRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryCompanyAllUserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.UserBrief user = 1;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::UserBrief& user(int index) const;
  ::CustomerFlow::Interactive::Message::UserBrief* mutable_user(int index);
  ::CustomerFlow::Interactive::Message::UserBrief* add_user();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >&
      user() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief > user_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddVIPCustomerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddVIPCustomerReq) */ {
 public:
  AddVIPCustomerReq();
  virtual ~AddVIPCustomerReq();

  AddVIPCustomerReq(const AddVIPCustomerReq& from);

  inline AddVIPCustomerReq& operator=(const AddVIPCustomerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddVIPCustomerReq& default_instance();

  static inline const AddVIPCustomerReq* internal_default_instance() {
    return reinterpret_cast<const AddVIPCustomerReq*>(
               &_AddVIPCustomerReq_default_instance_);
  }

  void Swap(AddVIPCustomerReq* other);

  // implements Message ----------------------------------------------

  inline AddVIPCustomerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddVIPCustomerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddVIPCustomerReq& from);
  void MergeFrom(const AddVIPCustomerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddVIPCustomerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.VIPCustomer customerInfo = 2;
  bool has_customerinfo() const;
  void clear_customerinfo();
  static const int kCustomerInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::VIPCustomer& customerinfo() const;
  ::CustomerFlow::Interactive::Message::VIPCustomer* mutable_customerinfo();
  ::CustomerFlow::Interactive::Message::VIPCustomer* release_customerinfo();
  void set_allocated_customerinfo(::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddVIPCustomerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddVIPCustomerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddVIPCustomerRsp) */ {
 public:
  AddVIPCustomerRsp();
  virtual ~AddVIPCustomerRsp();

  AddVIPCustomerRsp(const AddVIPCustomerRsp& from);

  inline AddVIPCustomerRsp& operator=(const AddVIPCustomerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddVIPCustomerRsp& default_instance();

  static inline const AddVIPCustomerRsp* internal_default_instance() {
    return reinterpret_cast<const AddVIPCustomerRsp*>(
               &_AddVIPCustomerRsp_default_instance_);
  }

  void Swap(AddVIPCustomerRsp* other);

  // implements Message ----------------------------------------------

  inline AddVIPCustomerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddVIPCustomerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddVIPCustomerRsp& from);
  void MergeFrom(const AddVIPCustomerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddVIPCustomerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strVIPID = 1;
  void clear_strvipid();
  static const int kStrVIPIDFieldNumber = 1;
  const ::std::string& strvipid() const;
  void set_strvipid(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipid(::std::string&& value);
  #endif
  void set_strvipid(const char* value);
  void set_strvipid(const char* value, size_t size);
  ::std::string* mutable_strvipid();
  ::std::string* release_strvipid();
  void set_allocated_strvipid(::std::string* strvipid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddVIPCustomerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvipid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteVIPCustomerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq) */ {
 public:
  DeleteVIPCustomerReq();
  virtual ~DeleteVIPCustomerReq();

  DeleteVIPCustomerReq(const DeleteVIPCustomerReq& from);

  inline DeleteVIPCustomerReq& operator=(const DeleteVIPCustomerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVIPCustomerReq& default_instance();

  static inline const DeleteVIPCustomerReq* internal_default_instance() {
    return reinterpret_cast<const DeleteVIPCustomerReq*>(
               &_DeleteVIPCustomerReq_default_instance_);
  }

  void Swap(DeleteVIPCustomerReq* other);

  // implements Message ----------------------------------------------

  inline DeleteVIPCustomerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVIPCustomerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVIPCustomerReq& from);
  void MergeFrom(const DeleteVIPCustomerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVIPCustomerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strVIPID = 2;
  void clear_strvipid();
  static const int kStrVIPIDFieldNumber = 2;
  const ::std::string& strvipid() const;
  void set_strvipid(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipid(::std::string&& value);
  #endif
  void set_strvipid(const char* value);
  void set_strvipid(const char* value, size_t size);
  ::std::string* mutable_strvipid();
  ::std::string* release_strvipid();
  void set_allocated_strvipid(::std::string* strvipid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvipid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteVIPCustomerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp) */ {
 public:
  DeleteVIPCustomerRsp();
  virtual ~DeleteVIPCustomerRsp();

  DeleteVIPCustomerRsp(const DeleteVIPCustomerRsp& from);

  inline DeleteVIPCustomerRsp& operator=(const DeleteVIPCustomerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVIPCustomerRsp& default_instance();

  static inline const DeleteVIPCustomerRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteVIPCustomerRsp*>(
               &_DeleteVIPCustomerRsp_default_instance_);
  }

  void Swap(DeleteVIPCustomerRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteVIPCustomerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVIPCustomerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVIPCustomerRsp& from);
  void MergeFrom(const DeleteVIPCustomerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVIPCustomerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyVIPCustomerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq) */ {
 public:
  ModifyVIPCustomerReq();
  virtual ~ModifyVIPCustomerReq();

  ModifyVIPCustomerReq(const ModifyVIPCustomerReq& from);

  inline ModifyVIPCustomerReq& operator=(const ModifyVIPCustomerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyVIPCustomerReq& default_instance();

  static inline const ModifyVIPCustomerReq* internal_default_instance() {
    return reinterpret_cast<const ModifyVIPCustomerReq*>(
               &_ModifyVIPCustomerReq_default_instance_);
  }

  void Swap(ModifyVIPCustomerReq* other);

  // implements Message ----------------------------------------------

  inline ModifyVIPCustomerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyVIPCustomerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyVIPCustomerReq& from);
  void MergeFrom(const ModifyVIPCustomerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyVIPCustomerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.VIPCustomer customerInfo = 2;
  bool has_customerinfo() const;
  void clear_customerinfo();
  static const int kCustomerInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::VIPCustomer& customerinfo() const;
  ::CustomerFlow::Interactive::Message::VIPCustomer* mutable_customerinfo();
  ::CustomerFlow::Interactive::Message::VIPCustomer* release_customerinfo();
  void set_allocated_customerinfo(::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyVIPCustomerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp) */ {
 public:
  ModifyVIPCustomerRsp();
  virtual ~ModifyVIPCustomerRsp();

  ModifyVIPCustomerRsp(const ModifyVIPCustomerRsp& from);

  inline ModifyVIPCustomerRsp& operator=(const ModifyVIPCustomerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyVIPCustomerRsp& default_instance();

  static inline const ModifyVIPCustomerRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyVIPCustomerRsp*>(
               &_ModifyVIPCustomerRsp_default_instance_);
  }

  void Swap(ModifyVIPCustomerRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyVIPCustomerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyVIPCustomerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyVIPCustomerRsp& from);
  void MergeFrom(const ModifyVIPCustomerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyVIPCustomerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryVIPCustomerInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq) */ {
 public:
  QueryVIPCustomerInfoReq();
  virtual ~QueryVIPCustomerInfoReq();

  QueryVIPCustomerInfoReq(const QueryVIPCustomerInfoReq& from);

  inline QueryVIPCustomerInfoReq& operator=(const QueryVIPCustomerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryVIPCustomerInfoReq& default_instance();

  static inline const QueryVIPCustomerInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryVIPCustomerInfoReq*>(
               &_QueryVIPCustomerInfoReq_default_instance_);
  }

  void Swap(QueryVIPCustomerInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryVIPCustomerInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryVIPCustomerInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryVIPCustomerInfoReq& from);
  void MergeFrom(const QueryVIPCustomerInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryVIPCustomerInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strVIPID = 2;
  void clear_strvipid();
  static const int kStrVIPIDFieldNumber = 2;
  const ::std::string& strvipid() const;
  void set_strvipid(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipid(::std::string&& value);
  #endif
  void set_strvipid(const char* value);
  void set_strvipid(const char* value, size_t size);
  ::std::string* mutable_strvipid();
  ::std::string* release_strvipid();
  void set_allocated_strvipid(::std::string* strvipid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvipid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryVIPCustomerInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp) */ {
 public:
  QueryVIPCustomerInfoRsp();
  virtual ~QueryVIPCustomerInfoRsp();

  QueryVIPCustomerInfoRsp(const QueryVIPCustomerInfoRsp& from);

  inline QueryVIPCustomerInfoRsp& operator=(const QueryVIPCustomerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryVIPCustomerInfoRsp& default_instance();

  static inline const QueryVIPCustomerInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryVIPCustomerInfoRsp*>(
               &_QueryVIPCustomerInfoRsp_default_instance_);
  }

  void Swap(QueryVIPCustomerInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryVIPCustomerInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryVIPCustomerInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryVIPCustomerInfoRsp& from);
  void MergeFrom(const QueryVIPCustomerInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryVIPCustomerInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.VIPCustomer customerInfo = 1;
  bool has_customerinfo() const;
  void clear_customerinfo();
  static const int kCustomerInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::VIPCustomer& customerinfo() const;
  ::CustomerFlow::Interactive::Message::VIPCustomer* mutable_customerinfo();
  ::CustomerFlow::Interactive::Message::VIPCustomer* release_customerinfo();
  void set_allocated_customerinfo(::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllVIPCustomerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq) */ {
 public:
  QueryAllVIPCustomerReq();
  virtual ~QueryAllVIPCustomerReq();

  QueryAllVIPCustomerReq(const QueryAllVIPCustomerReq& from);

  inline QueryAllVIPCustomerReq& operator=(const QueryAllVIPCustomerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllVIPCustomerReq& default_instance();

  static inline const QueryAllVIPCustomerReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllVIPCustomerReq*>(
               &_QueryAllVIPCustomerReq_default_instance_);
  }

  void Swap(QueryAllVIPCustomerReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllVIPCustomerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllVIPCustomerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllVIPCustomerReq& from);
  void MergeFrom(const QueryAllVIPCustomerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllVIPCustomerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // uint32 uiBeginIndex = 2;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 2;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllVIPCustomerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp) */ {
 public:
  QueryAllVIPCustomerRsp();
  virtual ~QueryAllVIPCustomerRsp();

  QueryAllVIPCustomerRsp(const QueryAllVIPCustomerRsp& from);

  inline QueryAllVIPCustomerRsp& operator=(const QueryAllVIPCustomerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllVIPCustomerRsp& default_instance();

  static inline const QueryAllVIPCustomerRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllVIPCustomerRsp*>(
               &_QueryAllVIPCustomerRsp_default_instance_);
  }

  void Swap(QueryAllVIPCustomerRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllVIPCustomerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllVIPCustomerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllVIPCustomerRsp& from);
  void MergeFrom(const QueryAllVIPCustomerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllVIPCustomerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.VIPCustomer customer = 1;
  int customer_size() const;
  void clear_customer();
  static const int kCustomerFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::VIPCustomer& customer(int index) const;
  ::CustomerFlow::Interactive::Message::VIPCustomer* mutable_customer(int index);
  ::CustomerFlow::Interactive::Message::VIPCustomer* add_customer();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPCustomer >*
      mutable_customer();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPCustomer >&
      customer() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPCustomer > customer_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddVIPConsumeHistoryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq) */ {
 public:
  AddVIPConsumeHistoryReq();
  virtual ~AddVIPConsumeHistoryReq();

  AddVIPConsumeHistoryReq(const AddVIPConsumeHistoryReq& from);

  inline AddVIPConsumeHistoryReq& operator=(const AddVIPConsumeHistoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddVIPConsumeHistoryReq& default_instance();

  static inline const AddVIPConsumeHistoryReq* internal_default_instance() {
    return reinterpret_cast<const AddVIPConsumeHistoryReq*>(
               &_AddVIPConsumeHistoryReq_default_instance_);
  }

  void Swap(AddVIPConsumeHistoryReq* other);

  // implements Message ----------------------------------------------

  inline AddVIPConsumeHistoryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddVIPConsumeHistoryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddVIPConsumeHistoryReq& from);
  void MergeFrom(const AddVIPConsumeHistoryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddVIPConsumeHistoryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 2;
  bool has_consumehistory() const;
  void clear_consumehistory();
  static const int kConsumeHistoryFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& consumehistory() const;
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* mutable_consumehistory();
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* release_consumehistory();
  void set_allocated_consumehistory(::CustomerFlow::Interactive::Message::VIPConsumeHistory* consumehistory);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* consumehistory_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddVIPConsumeHistoryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp) */ {
 public:
  AddVIPConsumeHistoryRsp();
  virtual ~AddVIPConsumeHistoryRsp();

  AddVIPConsumeHistoryRsp(const AddVIPConsumeHistoryRsp& from);

  inline AddVIPConsumeHistoryRsp& operator=(const AddVIPConsumeHistoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddVIPConsumeHistoryRsp& default_instance();

  static inline const AddVIPConsumeHistoryRsp* internal_default_instance() {
    return reinterpret_cast<const AddVIPConsumeHistoryRsp*>(
               &_AddVIPConsumeHistoryRsp_default_instance_);
  }

  void Swap(AddVIPConsumeHistoryRsp* other);

  // implements Message ----------------------------------------------

  inline AddVIPConsumeHistoryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddVIPConsumeHistoryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddVIPConsumeHistoryRsp& from);
  void MergeFrom(const AddVIPConsumeHistoryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddVIPConsumeHistoryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strConsumeID = 1;
  void clear_strconsumeid();
  static const int kStrConsumeIDFieldNumber = 1;
  const ::std::string& strconsumeid() const;
  void set_strconsumeid(const ::std::string& value);
  #if LANG_CXX11
  void set_strconsumeid(::std::string&& value);
  #endif
  void set_strconsumeid(const char* value);
  void set_strconsumeid(const char* value, size_t size);
  ::std::string* mutable_strconsumeid();
  ::std::string* release_strconsumeid();
  void set_allocated_strconsumeid(::std::string* strconsumeid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strconsumeid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteVIPConsumeHistoryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq) */ {
 public:
  DeleteVIPConsumeHistoryReq();
  virtual ~DeleteVIPConsumeHistoryReq();

  DeleteVIPConsumeHistoryReq(const DeleteVIPConsumeHistoryReq& from);

  inline DeleteVIPConsumeHistoryReq& operator=(const DeleteVIPConsumeHistoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVIPConsumeHistoryReq& default_instance();

  static inline const DeleteVIPConsumeHistoryReq* internal_default_instance() {
    return reinterpret_cast<const DeleteVIPConsumeHistoryReq*>(
               &_DeleteVIPConsumeHistoryReq_default_instance_);
  }

  void Swap(DeleteVIPConsumeHistoryReq* other);

  // implements Message ----------------------------------------------

  inline DeleteVIPConsumeHistoryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVIPConsumeHistoryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVIPConsumeHistoryReq& from);
  void MergeFrom(const DeleteVIPConsumeHistoryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVIPConsumeHistoryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strConsumeID = 2;
  void clear_strconsumeid();
  static const int kStrConsumeIDFieldNumber = 2;
  const ::std::string& strconsumeid() const;
  void set_strconsumeid(const ::std::string& value);
  #if LANG_CXX11
  void set_strconsumeid(::std::string&& value);
  #endif
  void set_strconsumeid(const char* value);
  void set_strconsumeid(const char* value, size_t size);
  ::std::string* mutable_strconsumeid();
  ::std::string* release_strconsumeid();
  void set_allocated_strconsumeid(::std::string* strconsumeid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strconsumeid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteVIPConsumeHistoryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp) */ {
 public:
  DeleteVIPConsumeHistoryRsp();
  virtual ~DeleteVIPConsumeHistoryRsp();

  DeleteVIPConsumeHistoryRsp(const DeleteVIPConsumeHistoryRsp& from);

  inline DeleteVIPConsumeHistoryRsp& operator=(const DeleteVIPConsumeHistoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVIPConsumeHistoryRsp& default_instance();

  static inline const DeleteVIPConsumeHistoryRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteVIPConsumeHistoryRsp*>(
               &_DeleteVIPConsumeHistoryRsp_default_instance_);
  }

  void Swap(DeleteVIPConsumeHistoryRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteVIPConsumeHistoryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVIPConsumeHistoryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVIPConsumeHistoryRsp& from);
  void MergeFrom(const DeleteVIPConsumeHistoryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVIPConsumeHistoryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyVIPConsumeHistoryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq) */ {
 public:
  ModifyVIPConsumeHistoryReq();
  virtual ~ModifyVIPConsumeHistoryReq();

  ModifyVIPConsumeHistoryReq(const ModifyVIPConsumeHistoryReq& from);

  inline ModifyVIPConsumeHistoryReq& operator=(const ModifyVIPConsumeHistoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyVIPConsumeHistoryReq& default_instance();

  static inline const ModifyVIPConsumeHistoryReq* internal_default_instance() {
    return reinterpret_cast<const ModifyVIPConsumeHistoryReq*>(
               &_ModifyVIPConsumeHistoryReq_default_instance_);
  }

  void Swap(ModifyVIPConsumeHistoryReq* other);

  // implements Message ----------------------------------------------

  inline ModifyVIPConsumeHistoryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyVIPConsumeHistoryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyVIPConsumeHistoryReq& from);
  void MergeFrom(const ModifyVIPConsumeHistoryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyVIPConsumeHistoryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 2;
  bool has_consumehistory() const;
  void clear_consumehistory();
  static const int kConsumeHistoryFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& consumehistory() const;
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* mutable_consumehistory();
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* release_consumehistory();
  void set_allocated_consumehistory(::CustomerFlow::Interactive::Message::VIPConsumeHistory* consumehistory);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* consumehistory_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyVIPConsumeHistoryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp) */ {
 public:
  ModifyVIPConsumeHistoryRsp();
  virtual ~ModifyVIPConsumeHistoryRsp();

  ModifyVIPConsumeHistoryRsp(const ModifyVIPConsumeHistoryRsp& from);

  inline ModifyVIPConsumeHistoryRsp& operator=(const ModifyVIPConsumeHistoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyVIPConsumeHistoryRsp& default_instance();

  static inline const ModifyVIPConsumeHistoryRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyVIPConsumeHistoryRsp*>(
               &_ModifyVIPConsumeHistoryRsp_default_instance_);
  }

  void Swap(ModifyVIPConsumeHistoryRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyVIPConsumeHistoryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyVIPConsumeHistoryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyVIPConsumeHistoryRsp& from);
  void MergeFrom(const ModifyVIPConsumeHistoryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyVIPConsumeHistoryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllVIPConsumeHistoryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq) */ {
 public:
  QueryAllVIPConsumeHistoryReq();
  virtual ~QueryAllVIPConsumeHistoryReq();

  QueryAllVIPConsumeHistoryReq(const QueryAllVIPConsumeHistoryReq& from);

  inline QueryAllVIPConsumeHistoryReq& operator=(const QueryAllVIPConsumeHistoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllVIPConsumeHistoryReq& default_instance();

  static inline const QueryAllVIPConsumeHistoryReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllVIPConsumeHistoryReq*>(
               &_QueryAllVIPConsumeHistoryReq_default_instance_);
  }

  void Swap(QueryAllVIPConsumeHistoryReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllVIPConsumeHistoryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllVIPConsumeHistoryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllVIPConsumeHistoryReq& from);
  void MergeFrom(const QueryAllVIPConsumeHistoryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllVIPConsumeHistoryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strVIPID = 2;
  void clear_strvipid();
  static const int kStrVIPIDFieldNumber = 2;
  const ::std::string& strvipid() const;
  void set_strvipid(const ::std::string& value);
  #if LANG_CXX11
  void set_strvipid(::std::string&& value);
  #endif
  void set_strvipid(const char* value);
  void set_strvipid(const char* value, size_t size);
  ::std::string* mutable_strvipid();
  ::std::string* release_strvipid();
  void set_allocated_strvipid(::std::string* strvipid);

  // uint32 uiBeginIndex = 3;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 3;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvipid_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllVIPConsumeHistoryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp) */ {
 public:
  QueryAllVIPConsumeHistoryRsp();
  virtual ~QueryAllVIPConsumeHistoryRsp();

  QueryAllVIPConsumeHistoryRsp(const QueryAllVIPConsumeHistoryRsp& from);

  inline QueryAllVIPConsumeHistoryRsp& operator=(const QueryAllVIPConsumeHistoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllVIPConsumeHistoryRsp& default_instance();

  static inline const QueryAllVIPConsumeHistoryRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllVIPConsumeHistoryRsp*>(
               &_QueryAllVIPConsumeHistoryRsp_default_instance_);
  }

  void Swap(QueryAllVIPConsumeHistoryRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllVIPConsumeHistoryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllVIPConsumeHistoryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllVIPConsumeHistoryRsp& from);
  void MergeFrom(const QueryAllVIPConsumeHistoryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllVIPConsumeHistoryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 1;
  int consumehistory_size() const;
  void clear_consumehistory();
  static const int kConsumeHistoryFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& consumehistory(int index) const;
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* mutable_consumehistory(int index);
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* add_consumehistory();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >*
      mutable_consumehistory();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >&
      consumehistory() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory > consumehistory_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEvaluationTemplateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq) */ {
 public:
  AddEvaluationTemplateReq();
  virtual ~AddEvaluationTemplateReq();

  AddEvaluationTemplateReq(const AddEvaluationTemplateReq& from);

  inline AddEvaluationTemplateReq& operator=(const AddEvaluationTemplateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEvaluationTemplateReq& default_instance();

  static inline const AddEvaluationTemplateReq* internal_default_instance() {
    return reinterpret_cast<const AddEvaluationTemplateReq*>(
               &_AddEvaluationTemplateReq_default_instance_);
  }

  void Swap(AddEvaluationTemplateReq* other);

  // implements Message ----------------------------------------------

  inline AddEvaluationTemplateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEvaluationTemplateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEvaluationTemplateReq& from);
  void MergeFrom(const AddEvaluationTemplateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEvaluationTemplateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 2;
  bool has_evaluationitem() const;
  void clear_evaluationitem();
  static const int kEvaluationItemFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::EvaluationItem& evaluationitem() const;
  ::CustomerFlow::Interactive::Message::EvaluationItem* mutable_evaluationitem();
  ::CustomerFlow::Interactive::Message::EvaluationItem* release_evaluationitem();
  void set_allocated_evaluationitem(::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddEvaluationTemplateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp) */ {
 public:
  AddEvaluationTemplateRsp();
  virtual ~AddEvaluationTemplateRsp();

  AddEvaluationTemplateRsp(const AddEvaluationTemplateRsp& from);

  inline AddEvaluationTemplateRsp& operator=(const AddEvaluationTemplateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEvaluationTemplateRsp& default_instance();

  static inline const AddEvaluationTemplateRsp* internal_default_instance() {
    return reinterpret_cast<const AddEvaluationTemplateRsp*>(
               &_AddEvaluationTemplateRsp_default_instance_);
  }

  void Swap(AddEvaluationTemplateRsp* other);

  // implements Message ----------------------------------------------

  inline AddEvaluationTemplateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddEvaluationTemplateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddEvaluationTemplateRsp& from);
  void MergeFrom(const AddEvaluationTemplateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddEvaluationTemplateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strEvaluationID = 1;
  void clear_strevaluationid();
  static const int kStrEvaluationIDFieldNumber = 1;
  const ::std::string& strevaluationid() const;
  void set_strevaluationid(const ::std::string& value);
  #if LANG_CXX11
  void set_strevaluationid(::std::string&& value);
  #endif
  void set_strevaluationid(const char* value);
  void set_strevaluationid(const char* value, size_t size);
  ::std::string* mutable_strevaluationid();
  ::std::string* release_strevaluationid();
  void set_allocated_strevaluationid(::std::string* strevaluationid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strevaluationid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEvaluationTemplateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq) */ {
 public:
  DeleteEvaluationTemplateReq();
  virtual ~DeleteEvaluationTemplateReq();

  DeleteEvaluationTemplateReq(const DeleteEvaluationTemplateReq& from);

  inline DeleteEvaluationTemplateReq& operator=(const DeleteEvaluationTemplateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEvaluationTemplateReq& default_instance();

  static inline const DeleteEvaluationTemplateReq* internal_default_instance() {
    return reinterpret_cast<const DeleteEvaluationTemplateReq*>(
               &_DeleteEvaluationTemplateReq_default_instance_);
  }

  void Swap(DeleteEvaluationTemplateReq* other);

  // implements Message ----------------------------------------------

  inline DeleteEvaluationTemplateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEvaluationTemplateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEvaluationTemplateReq& from);
  void MergeFrom(const DeleteEvaluationTemplateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEvaluationTemplateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strEvaluationID = 2;
  void clear_strevaluationid();
  static const int kStrEvaluationIDFieldNumber = 2;
  const ::std::string& strevaluationid() const;
  void set_strevaluationid(const ::std::string& value);
  #if LANG_CXX11
  void set_strevaluationid(::std::string&& value);
  #endif
  void set_strevaluationid(const char* value);
  void set_strevaluationid(const char* value, size_t size);
  ::std::string* mutable_strevaluationid();
  ::std::string* release_strevaluationid();
  void set_allocated_strevaluationid(::std::string* strevaluationid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strevaluationid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteEvaluationTemplateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp) */ {
 public:
  DeleteEvaluationTemplateRsp();
  virtual ~DeleteEvaluationTemplateRsp();

  DeleteEvaluationTemplateRsp(const DeleteEvaluationTemplateRsp& from);

  inline DeleteEvaluationTemplateRsp& operator=(const DeleteEvaluationTemplateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEvaluationTemplateRsp& default_instance();

  static inline const DeleteEvaluationTemplateRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteEvaluationTemplateRsp*>(
               &_DeleteEvaluationTemplateRsp_default_instance_);
  }

  void Swap(DeleteEvaluationTemplateRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteEvaluationTemplateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteEvaluationTemplateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteEvaluationTemplateRsp& from);
  void MergeFrom(const DeleteEvaluationTemplateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteEvaluationTemplateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyEvaluationTemplateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq) */ {
 public:
  ModifyEvaluationTemplateReq();
  virtual ~ModifyEvaluationTemplateReq();

  ModifyEvaluationTemplateReq(const ModifyEvaluationTemplateReq& from);

  inline ModifyEvaluationTemplateReq& operator=(const ModifyEvaluationTemplateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyEvaluationTemplateReq& default_instance();

  static inline const ModifyEvaluationTemplateReq* internal_default_instance() {
    return reinterpret_cast<const ModifyEvaluationTemplateReq*>(
               &_ModifyEvaluationTemplateReq_default_instance_);
  }

  void Swap(ModifyEvaluationTemplateReq* other);

  // implements Message ----------------------------------------------

  inline ModifyEvaluationTemplateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyEvaluationTemplateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyEvaluationTemplateReq& from);
  void MergeFrom(const ModifyEvaluationTemplateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyEvaluationTemplateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 2;
  bool has_evaluationitem() const;
  void clear_evaluationitem();
  static const int kEvaluationItemFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::EvaluationItem& evaluationitem() const;
  ::CustomerFlow::Interactive::Message::EvaluationItem* mutable_evaluationitem();
  ::CustomerFlow::Interactive::Message::EvaluationItem* release_evaluationitem();
  void set_allocated_evaluationitem(::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyEvaluationTemplateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp) */ {
 public:
  ModifyEvaluationTemplateRsp();
  virtual ~ModifyEvaluationTemplateRsp();

  ModifyEvaluationTemplateRsp(const ModifyEvaluationTemplateRsp& from);

  inline ModifyEvaluationTemplateRsp& operator=(const ModifyEvaluationTemplateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyEvaluationTemplateRsp& default_instance();

  static inline const ModifyEvaluationTemplateRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyEvaluationTemplateRsp*>(
               &_ModifyEvaluationTemplateRsp_default_instance_);
  }

  void Swap(ModifyEvaluationTemplateRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyEvaluationTemplateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyEvaluationTemplateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyEvaluationTemplateRsp& from);
  void MergeFrom(const ModifyEvaluationTemplateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyEvaluationTemplateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllEvaluationTemplateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq) */ {
 public:
  QueryAllEvaluationTemplateReq();
  virtual ~QueryAllEvaluationTemplateReq();

  QueryAllEvaluationTemplateReq(const QueryAllEvaluationTemplateReq& from);

  inline QueryAllEvaluationTemplateReq& operator=(const QueryAllEvaluationTemplateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllEvaluationTemplateReq& default_instance();

  static inline const QueryAllEvaluationTemplateReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllEvaluationTemplateReq*>(
               &_QueryAllEvaluationTemplateReq_default_instance_);
  }

  void Swap(QueryAllEvaluationTemplateReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllEvaluationTemplateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllEvaluationTemplateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllEvaluationTemplateReq& from);
  void MergeFrom(const QueryAllEvaluationTemplateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllEvaluationTemplateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllEvaluationTemplateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp) */ {
 public:
  QueryAllEvaluationTemplateRsp();
  virtual ~QueryAllEvaluationTemplateRsp();

  QueryAllEvaluationTemplateRsp(const QueryAllEvaluationTemplateRsp& from);

  inline QueryAllEvaluationTemplateRsp& operator=(const QueryAllEvaluationTemplateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllEvaluationTemplateRsp& default_instance();

  static inline const QueryAllEvaluationTemplateRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllEvaluationTemplateRsp*>(
               &_QueryAllEvaluationTemplateRsp_default_instance_);
  }

  void Swap(QueryAllEvaluationTemplateRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllEvaluationTemplateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllEvaluationTemplateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllEvaluationTemplateRsp& from);
  void MergeFrom(const QueryAllEvaluationTemplateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllEvaluationTemplateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 1;
  int evaluationitem_size() const;
  void clear_evaluationitem();
  static const int kEvaluationItemFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::EvaluationItem& evaluationitem(int index) const;
  ::CustomerFlow::Interactive::Message::EvaluationItem* mutable_evaluationitem(int index);
  ::CustomerFlow::Interactive::Message::EvaluationItem* add_evaluationitem();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItem >*
      mutable_evaluationitem();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItem >&
      evaluationitem() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItem > evaluationitem_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddStoreEvaluationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddStoreEvaluationReq) */ {
 public:
  AddStoreEvaluationReq();
  virtual ~AddStoreEvaluationReq();

  AddStoreEvaluationReq(const AddStoreEvaluationReq& from);

  inline AddStoreEvaluationReq& operator=(const AddStoreEvaluationReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddStoreEvaluationReq& default_instance();

  static inline const AddStoreEvaluationReq* internal_default_instance() {
    return reinterpret_cast<const AddStoreEvaluationReq*>(
               &_AddStoreEvaluationReq_default_instance_);
  }

  void Swap(AddStoreEvaluationReq* other);

  // implements Message ----------------------------------------------

  inline AddStoreEvaluationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddStoreEvaluationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddStoreEvaluationReq& from);
  void MergeFrom(const AddStoreEvaluationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddStoreEvaluationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 1;
  bool has_storeevaluation() const;
  void clear_storeevaluation();
  static const int kStoreEvaluationFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::StoreEvaluation& storeevaluation() const;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* mutable_storeevaluation();
  ::CustomerFlow::Interactive::Message::StoreEvaluation* release_storeevaluation();
  void set_allocated_storeevaluation(::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddStoreEvaluationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddStoreEvaluationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp) */ {
 public:
  AddStoreEvaluationRsp();
  virtual ~AddStoreEvaluationRsp();

  AddStoreEvaluationRsp(const AddStoreEvaluationRsp& from);

  inline AddStoreEvaluationRsp& operator=(const AddStoreEvaluationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddStoreEvaluationRsp& default_instance();

  static inline const AddStoreEvaluationRsp* internal_default_instance() {
    return reinterpret_cast<const AddStoreEvaluationRsp*>(
               &_AddStoreEvaluationRsp_default_instance_);
  }

  void Swap(AddStoreEvaluationRsp* other);

  // implements Message ----------------------------------------------

  inline AddStoreEvaluationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddStoreEvaluationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddStoreEvaluationRsp& from);
  void MergeFrom(const AddStoreEvaluationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddStoreEvaluationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strEvaluationID = 1;
  void clear_strevaluationid();
  static const int kStrEvaluationIDFieldNumber = 1;
  const ::std::string& strevaluationid() const;
  void set_strevaluationid(const ::std::string& value);
  #if LANG_CXX11
  void set_strevaluationid(::std::string&& value);
  #endif
  void set_strevaluationid(const char* value);
  void set_strevaluationid(const char* value, size_t size);
  ::std::string* mutable_strevaluationid();
  ::std::string* release_strevaluationid();
  void set_allocated_strevaluationid(::std::string* strevaluationid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strevaluationid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStoreEvaluationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq) */ {
 public:
  DeleteStoreEvaluationReq();
  virtual ~DeleteStoreEvaluationReq();

  DeleteStoreEvaluationReq(const DeleteStoreEvaluationReq& from);

  inline DeleteStoreEvaluationReq& operator=(const DeleteStoreEvaluationReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStoreEvaluationReq& default_instance();

  static inline const DeleteStoreEvaluationReq* internal_default_instance() {
    return reinterpret_cast<const DeleteStoreEvaluationReq*>(
               &_DeleteStoreEvaluationReq_default_instance_);
  }

  void Swap(DeleteStoreEvaluationReq* other);

  // implements Message ----------------------------------------------

  inline DeleteStoreEvaluationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteStoreEvaluationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteStoreEvaluationReq& from);
  void MergeFrom(const DeleteStoreEvaluationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteStoreEvaluationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strEvaluationID = 2;
  void clear_strevaluationid();
  static const int kStrEvaluationIDFieldNumber = 2;
  const ::std::string& strevaluationid() const;
  void set_strevaluationid(const ::std::string& value);
  #if LANG_CXX11
  void set_strevaluationid(::std::string&& value);
  #endif
  void set_strevaluationid(const char* value);
  void set_strevaluationid(const char* value, size_t size);
  ::std::string* mutable_strevaluationid();
  ::std::string* release_strevaluationid();
  void set_allocated_strevaluationid(::std::string* strevaluationid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strevaluationid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStoreEvaluationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp) */ {
 public:
  DeleteStoreEvaluationRsp();
  virtual ~DeleteStoreEvaluationRsp();

  DeleteStoreEvaluationRsp(const DeleteStoreEvaluationRsp& from);

  inline DeleteStoreEvaluationRsp& operator=(const DeleteStoreEvaluationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStoreEvaluationRsp& default_instance();

  static inline const DeleteStoreEvaluationRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteStoreEvaluationRsp*>(
               &_DeleteStoreEvaluationRsp_default_instance_);
  }

  void Swap(DeleteStoreEvaluationRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteStoreEvaluationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteStoreEvaluationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteStoreEvaluationRsp& from);
  void MergeFrom(const DeleteStoreEvaluationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteStoreEvaluationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyStoreEvaluationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq) */ {
 public:
  ModifyStoreEvaluationReq();
  virtual ~ModifyStoreEvaluationReq();

  ModifyStoreEvaluationReq(const ModifyStoreEvaluationReq& from);

  inline ModifyStoreEvaluationReq& operator=(const ModifyStoreEvaluationReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyStoreEvaluationReq& default_instance();

  static inline const ModifyStoreEvaluationReq* internal_default_instance() {
    return reinterpret_cast<const ModifyStoreEvaluationReq*>(
               &_ModifyStoreEvaluationReq_default_instance_);
  }

  void Swap(ModifyStoreEvaluationReq* other);

  // implements Message ----------------------------------------------

  inline ModifyStoreEvaluationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyStoreEvaluationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyStoreEvaluationReq& from);
  void MergeFrom(const ModifyStoreEvaluationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyStoreEvaluationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 2;
  bool has_storeevaluation() const;
  void clear_storeevaluation();
  static const int kStoreEvaluationFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::StoreEvaluation& storeevaluation() const;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* mutable_storeevaluation();
  ::CustomerFlow::Interactive::Message::StoreEvaluation* release_storeevaluation();
  void set_allocated_storeevaluation(::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyStoreEvaluationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp) */ {
 public:
  ModifyStoreEvaluationRsp();
  virtual ~ModifyStoreEvaluationRsp();

  ModifyStoreEvaluationRsp(const ModifyStoreEvaluationRsp& from);

  inline ModifyStoreEvaluationRsp& operator=(const ModifyStoreEvaluationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyStoreEvaluationRsp& default_instance();

  static inline const ModifyStoreEvaluationRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyStoreEvaluationRsp*>(
               &_ModifyStoreEvaluationRsp_default_instance_);
  }

  void Swap(ModifyStoreEvaluationRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyStoreEvaluationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyStoreEvaluationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyStoreEvaluationRsp& from);
  void MergeFrom(const ModifyStoreEvaluationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyStoreEvaluationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreEvaluationInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq) */ {
 public:
  QueryStoreEvaluationInfoReq();
  virtual ~QueryStoreEvaluationInfoReq();

  QueryStoreEvaluationInfoReq(const QueryStoreEvaluationInfoReq& from);

  inline QueryStoreEvaluationInfoReq& operator=(const QueryStoreEvaluationInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreEvaluationInfoReq& default_instance();

  static inline const QueryStoreEvaluationInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryStoreEvaluationInfoReq*>(
               &_QueryStoreEvaluationInfoReq_default_instance_);
  }

  void Swap(QueryStoreEvaluationInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryStoreEvaluationInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreEvaluationInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreEvaluationInfoReq& from);
  void MergeFrom(const QueryStoreEvaluationInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreEvaluationInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strEvaluationID = 3;
  void clear_strevaluationid();
  static const int kStrEvaluationIDFieldNumber = 3;
  const ::std::string& strevaluationid() const;
  void set_strevaluationid(const ::std::string& value);
  #if LANG_CXX11
  void set_strevaluationid(::std::string&& value);
  #endif
  void set_strevaluationid(const char* value);
  void set_strevaluationid(const char* value, size_t size);
  ::std::string* mutable_strevaluationid();
  ::std::string* release_strevaluationid();
  void set_allocated_strevaluationid(::std::string* strevaluationid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strevaluationid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreEvaluationInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp) */ {
 public:
  QueryStoreEvaluationInfoRsp();
  virtual ~QueryStoreEvaluationInfoRsp();

  QueryStoreEvaluationInfoRsp(const QueryStoreEvaluationInfoRsp& from);

  inline QueryStoreEvaluationInfoRsp& operator=(const QueryStoreEvaluationInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreEvaluationInfoRsp& default_instance();

  static inline const QueryStoreEvaluationInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryStoreEvaluationInfoRsp*>(
               &_QueryStoreEvaluationInfoRsp_default_instance_);
  }

  void Swap(QueryStoreEvaluationInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryStoreEvaluationInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreEvaluationInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreEvaluationInfoRsp& from);
  void MergeFrom(const QueryStoreEvaluationInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreEvaluationInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 1;
  bool has_storeevaluation() const;
  void clear_storeevaluation();
  static const int kStoreEvaluationFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::StoreEvaluation& storeevaluation() const;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* mutable_storeevaluation();
  ::CustomerFlow::Interactive::Message::StoreEvaluation* release_storeevaluation();
  void set_allocated_storeevaluation(::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllStoreEvaluationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq) */ {
 public:
  QueryAllStoreEvaluationReq();
  virtual ~QueryAllStoreEvaluationReq();

  QueryAllStoreEvaluationReq(const QueryAllStoreEvaluationReq& from);

  inline QueryAllStoreEvaluationReq& operator=(const QueryAllStoreEvaluationReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllStoreEvaluationReq& default_instance();

  static inline const QueryAllStoreEvaluationReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllStoreEvaluationReq*>(
               &_QueryAllStoreEvaluationReq_default_instance_);
  }

  void Swap(QueryAllStoreEvaluationReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllStoreEvaluationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllStoreEvaluationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllStoreEvaluationReq& from);
  void MergeFrom(const QueryAllStoreEvaluationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllStoreEvaluationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strBeginDate = 3;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 3;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 4;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 4;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // uint32 uiBeginIndex = 5;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 5;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // uint32 uiCheckStatus = 6;
  void clear_uicheckstatus();
  static const int kUiCheckStatusFieldNumber = 6;
  ::google::protobuf::uint32 uicheckstatus() const;
  void set_uicheckstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::uint32 uibeginindex_;
  ::google::protobuf::uint32 uicheckstatus_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllStoreEvaluationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp) */ {
 public:
  QueryAllStoreEvaluationRsp();
  virtual ~QueryAllStoreEvaluationRsp();

  QueryAllStoreEvaluationRsp(const QueryAllStoreEvaluationRsp& from);

  inline QueryAllStoreEvaluationRsp& operator=(const QueryAllStoreEvaluationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllStoreEvaluationRsp& default_instance();

  static inline const QueryAllStoreEvaluationRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllStoreEvaluationRsp*>(
               &_QueryAllStoreEvaluationRsp_default_instance_);
  }

  void Swap(QueryAllStoreEvaluationRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllStoreEvaluationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllStoreEvaluationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllStoreEvaluationRsp& from);
  void MergeFrom(const QueryAllStoreEvaluationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllStoreEvaluationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 1;
  int storeevaluation_size() const;
  void clear_storeevaluation();
  static const int kStoreEvaluationFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::StoreEvaluation& storeevaluation(int index) const;
  ::CustomerFlow::Interactive::Message::StoreEvaluation* mutable_storeevaluation(int index);
  ::CustomerFlow::Interactive::Message::StoreEvaluation* add_storeevaluation();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::StoreEvaluation >*
      mutable_storeevaluation();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::StoreEvaluation >&
      storeevaluation() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::StoreEvaluation > storeevaluation_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRemotePatrolStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq) */ {
 public:
  AddRemotePatrolStoreReq();
  virtual ~AddRemotePatrolStoreReq();

  AddRemotePatrolStoreReq(const AddRemotePatrolStoreReq& from);

  inline AddRemotePatrolStoreReq& operator=(const AddRemotePatrolStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRemotePatrolStoreReq& default_instance();

  static inline const AddRemotePatrolStoreReq* internal_default_instance() {
    return reinterpret_cast<const AddRemotePatrolStoreReq*>(
               &_AddRemotePatrolStoreReq_default_instance_);
  }

  void Swap(AddRemotePatrolStoreReq* other);

  // implements Message ----------------------------------------------

  inline AddRemotePatrolStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRemotePatrolStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRemotePatrolStoreReq& from);
  void MergeFrom(const AddRemotePatrolStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRemotePatrolStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 1;
  bool has_patrolstore() const;
  void clear_patrolstore();
  static const int kPatrolStoreFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::RemotePatrolStore& patrolstore() const;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* mutable_patrolstore();
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* release_patrolstore();
  void set_allocated_patrolstore(::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRemotePatrolStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp) */ {
 public:
  AddRemotePatrolStoreRsp();
  virtual ~AddRemotePatrolStoreRsp();

  AddRemotePatrolStoreRsp(const AddRemotePatrolStoreRsp& from);

  inline AddRemotePatrolStoreRsp& operator=(const AddRemotePatrolStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRemotePatrolStoreRsp& default_instance();

  static inline const AddRemotePatrolStoreRsp* internal_default_instance() {
    return reinterpret_cast<const AddRemotePatrolStoreRsp*>(
               &_AddRemotePatrolStoreRsp_default_instance_);
  }

  void Swap(AddRemotePatrolStoreRsp* other);

  // implements Message ----------------------------------------------

  inline AddRemotePatrolStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRemotePatrolStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRemotePatrolStoreRsp& from);
  void MergeFrom(const AddRemotePatrolStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRemotePatrolStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strPatrolID = 1;
  void clear_strpatrolid();
  static const int kStrPatrolIDFieldNumber = 1;
  const ::std::string& strpatrolid() const;
  void set_strpatrolid(const ::std::string& value);
  #if LANG_CXX11
  void set_strpatrolid(::std::string&& value);
  #endif
  void set_strpatrolid(const char* value);
  void set_strpatrolid(const char* value, size_t size);
  ::std::string* mutable_strpatrolid();
  ::std::string* release_strpatrolid();
  void set_allocated_strpatrolid(::std::string* strpatrolid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strpatrolid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteRemotePatrolStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq) */ {
 public:
  DeleteRemotePatrolStoreReq();
  virtual ~DeleteRemotePatrolStoreReq();

  DeleteRemotePatrolStoreReq(const DeleteRemotePatrolStoreReq& from);

  inline DeleteRemotePatrolStoreReq& operator=(const DeleteRemotePatrolStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRemotePatrolStoreReq& default_instance();

  static inline const DeleteRemotePatrolStoreReq* internal_default_instance() {
    return reinterpret_cast<const DeleteRemotePatrolStoreReq*>(
               &_DeleteRemotePatrolStoreReq_default_instance_);
  }

  void Swap(DeleteRemotePatrolStoreReq* other);

  // implements Message ----------------------------------------------

  inline DeleteRemotePatrolStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteRemotePatrolStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteRemotePatrolStoreReq& from);
  void MergeFrom(const DeleteRemotePatrolStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteRemotePatrolStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strPatrolID = 2;
  void clear_strpatrolid();
  static const int kStrPatrolIDFieldNumber = 2;
  const ::std::string& strpatrolid() const;
  void set_strpatrolid(const ::std::string& value);
  #if LANG_CXX11
  void set_strpatrolid(::std::string&& value);
  #endif
  void set_strpatrolid(const char* value);
  void set_strpatrolid(const char* value, size_t size);
  ::std::string* mutable_strpatrolid();
  ::std::string* release_strpatrolid();
  void set_allocated_strpatrolid(::std::string* strpatrolid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strpatrolid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteRemotePatrolStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp) */ {
 public:
  DeleteRemotePatrolStoreRsp();
  virtual ~DeleteRemotePatrolStoreRsp();

  DeleteRemotePatrolStoreRsp(const DeleteRemotePatrolStoreRsp& from);

  inline DeleteRemotePatrolStoreRsp& operator=(const DeleteRemotePatrolStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRemotePatrolStoreRsp& default_instance();

  static inline const DeleteRemotePatrolStoreRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteRemotePatrolStoreRsp*>(
               &_DeleteRemotePatrolStoreRsp_default_instance_);
  }

  void Swap(DeleteRemotePatrolStoreRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteRemotePatrolStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteRemotePatrolStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteRemotePatrolStoreRsp& from);
  void MergeFrom(const DeleteRemotePatrolStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteRemotePatrolStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyRemotePatrolStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq) */ {
 public:
  ModifyRemotePatrolStoreReq();
  virtual ~ModifyRemotePatrolStoreReq();

  ModifyRemotePatrolStoreReq(const ModifyRemotePatrolStoreReq& from);

  inline ModifyRemotePatrolStoreReq& operator=(const ModifyRemotePatrolStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyRemotePatrolStoreReq& default_instance();

  static inline const ModifyRemotePatrolStoreReq* internal_default_instance() {
    return reinterpret_cast<const ModifyRemotePatrolStoreReq*>(
               &_ModifyRemotePatrolStoreReq_default_instance_);
  }

  void Swap(ModifyRemotePatrolStoreReq* other);

  // implements Message ----------------------------------------------

  inline ModifyRemotePatrolStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyRemotePatrolStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyRemotePatrolStoreReq& from);
  void MergeFrom(const ModifyRemotePatrolStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyRemotePatrolStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 2;
  bool has_patrolstore() const;
  void clear_patrolstore();
  static const int kPatrolStoreFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::RemotePatrolStore& patrolstore() const;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* mutable_patrolstore();
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* release_patrolstore();
  void set_allocated_patrolstore(::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyRemotePatrolStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp) */ {
 public:
  ModifyRemotePatrolStoreRsp();
  virtual ~ModifyRemotePatrolStoreRsp();

  ModifyRemotePatrolStoreRsp(const ModifyRemotePatrolStoreRsp& from);

  inline ModifyRemotePatrolStoreRsp& operator=(const ModifyRemotePatrolStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyRemotePatrolStoreRsp& default_instance();

  static inline const ModifyRemotePatrolStoreRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyRemotePatrolStoreRsp*>(
               &_ModifyRemotePatrolStoreRsp_default_instance_);
  }

  void Swap(ModifyRemotePatrolStoreRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyRemotePatrolStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyRemotePatrolStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyRemotePatrolStoreRsp& from);
  void MergeFrom(const ModifyRemotePatrolStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyRemotePatrolStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRemotePatrolStoreInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq) */ {
 public:
  QueryRemotePatrolStoreInfoReq();
  virtual ~QueryRemotePatrolStoreInfoReq();

  QueryRemotePatrolStoreInfoReq(const QueryRemotePatrolStoreInfoReq& from);

  inline QueryRemotePatrolStoreInfoReq& operator=(const QueryRemotePatrolStoreInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRemotePatrolStoreInfoReq& default_instance();

  static inline const QueryRemotePatrolStoreInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryRemotePatrolStoreInfoReq*>(
               &_QueryRemotePatrolStoreInfoReq_default_instance_);
  }

  void Swap(QueryRemotePatrolStoreInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryRemotePatrolStoreInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRemotePatrolStoreInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRemotePatrolStoreInfoReq& from);
  void MergeFrom(const QueryRemotePatrolStoreInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRemotePatrolStoreInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strPatrolID = 2;
  void clear_strpatrolid();
  static const int kStrPatrolIDFieldNumber = 2;
  const ::std::string& strpatrolid() const;
  void set_strpatrolid(const ::std::string& value);
  #if LANG_CXX11
  void set_strpatrolid(::std::string&& value);
  #endif
  void set_strpatrolid(const char* value);
  void set_strpatrolid(const char* value, size_t size);
  ::std::string* mutable_strpatrolid();
  ::std::string* release_strpatrolid();
  void set_allocated_strpatrolid(::std::string* strpatrolid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strpatrolid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRemotePatrolStoreInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp) */ {
 public:
  QueryRemotePatrolStoreInfoRsp();
  virtual ~QueryRemotePatrolStoreInfoRsp();

  QueryRemotePatrolStoreInfoRsp(const QueryRemotePatrolStoreInfoRsp& from);

  inline QueryRemotePatrolStoreInfoRsp& operator=(const QueryRemotePatrolStoreInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRemotePatrolStoreInfoRsp& default_instance();

  static inline const QueryRemotePatrolStoreInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryRemotePatrolStoreInfoRsp*>(
               &_QueryRemotePatrolStoreInfoRsp_default_instance_);
  }

  void Swap(QueryRemotePatrolStoreInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryRemotePatrolStoreInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRemotePatrolStoreInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRemotePatrolStoreInfoRsp& from);
  void MergeFrom(const QueryRemotePatrolStoreInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRemotePatrolStoreInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 1;
  bool has_patrolstore() const;
  void clear_patrolstore();
  static const int kPatrolStoreFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::RemotePatrolStore& patrolstore() const;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* mutable_patrolstore();
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* release_patrolstore();
  void set_allocated_patrolstore(::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllRemotePatrolStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq) */ {
 public:
  QueryAllRemotePatrolStoreReq();
  virtual ~QueryAllRemotePatrolStoreReq();

  QueryAllRemotePatrolStoreReq(const QueryAllRemotePatrolStoreReq& from);

  inline QueryAllRemotePatrolStoreReq& operator=(const QueryAllRemotePatrolStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllRemotePatrolStoreReq& default_instance();

  static inline const QueryAllRemotePatrolStoreReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllRemotePatrolStoreReq*>(
               &_QueryAllRemotePatrolStoreReq_default_instance_);
  }

  void Swap(QueryAllRemotePatrolStoreReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllRemotePatrolStoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllRemotePatrolStoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllRemotePatrolStoreReq& from);
  void MergeFrom(const QueryAllRemotePatrolStoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllRemotePatrolStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strPlanID = 5;
  void clear_strplanid();
  static const int kStrPlanIDFieldNumber = 5;
  const ::std::string& strplanid() const;
  void set_strplanid(const ::std::string& value);
  #if LANG_CXX11
  void set_strplanid(::std::string&& value);
  #endif
  void set_strplanid(const char* value);
  void set_strplanid(const char* value, size_t size);
  ::std::string* mutable_strplanid();
  ::std::string* release_strplanid();
  void set_allocated_strplanid(::std::string* strplanid);

  // string strBeginDate = 6;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 6;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 7;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 7;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // uint32 uiPatrolResult = 3;
  void clear_uipatrolresult();
  static const int kUiPatrolResultFieldNumber = 3;
  ::google::protobuf::uint32 uipatrolresult() const;
  void set_uipatrolresult(::google::protobuf::uint32 value);

  // uint32 uiPlanFlag = 4;
  void clear_uiplanflag();
  static const int kUiPlanFlagFieldNumber = 4;
  ::google::protobuf::uint32 uiplanflag() const;
  void set_uiplanflag(::google::protobuf::uint32 value);

  // uint32 uiBeginIndex = 8;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 8;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strplanid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::uint32 uipatrolresult_;
  ::google::protobuf::uint32 uiplanflag_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllRemotePatrolStoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp) */ {
 public:
  QueryAllRemotePatrolStoreRsp();
  virtual ~QueryAllRemotePatrolStoreRsp();

  QueryAllRemotePatrolStoreRsp(const QueryAllRemotePatrolStoreRsp& from);

  inline QueryAllRemotePatrolStoreRsp& operator=(const QueryAllRemotePatrolStoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllRemotePatrolStoreRsp& default_instance();

  static inline const QueryAllRemotePatrolStoreRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllRemotePatrolStoreRsp*>(
               &_QueryAllRemotePatrolStoreRsp_default_instance_);
  }

  void Swap(QueryAllRemotePatrolStoreRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllRemotePatrolStoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllRemotePatrolStoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllRemotePatrolStoreRsp& from);
  void MergeFrom(const QueryAllRemotePatrolStoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllRemotePatrolStoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 1;
  int patrolstore_size() const;
  void clear_patrolstore();
  static const int kPatrolStoreFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::RemotePatrolStore& patrolstore(int index) const;
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* mutable_patrolstore(int index);
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* add_patrolstore();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RemotePatrolStore >*
      mutable_patrolstore();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RemotePatrolStore >&
      patrolstore() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RemotePatrolStore > patrolstore_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddStoreSensorReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddStoreSensorReq) */ {
 public:
  AddStoreSensorReq();
  virtual ~AddStoreSensorReq();

  AddStoreSensorReq(const AddStoreSensorReq& from);

  inline AddStoreSensorReq& operator=(const AddStoreSensorReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddStoreSensorReq& default_instance();

  static inline const AddStoreSensorReq* internal_default_instance() {
    return reinterpret_cast<const AddStoreSensorReq*>(
               &_AddStoreSensorReq_default_instance_);
  }

  void Swap(AddStoreSensorReq* other);

  // implements Message ----------------------------------------------

  inline AddStoreSensorReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddStoreSensorReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddStoreSensorReq& from);
  void MergeFrom(const AddStoreSensorReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddStoreSensorReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
  bool has_sensorinfo() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo() const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo();
  ::CustomerFlow::Interactive::Message::Sensor* release_sensorinfo();
  void set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddStoreSensorReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Sensor* sensorinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddStoreSensorRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddStoreSensorRsp) */ {
 public:
  AddStoreSensorRsp();
  virtual ~AddStoreSensorRsp();

  AddStoreSensorRsp(const AddStoreSensorRsp& from);

  inline AddStoreSensorRsp& operator=(const AddStoreSensorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddStoreSensorRsp& default_instance();

  static inline const AddStoreSensorRsp* internal_default_instance() {
    return reinterpret_cast<const AddStoreSensorRsp*>(
               &_AddStoreSensorRsp_default_instance_);
  }

  void Swap(AddStoreSensorRsp* other);

  // implements Message ----------------------------------------------

  inline AddStoreSensorRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddStoreSensorRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddStoreSensorRsp& from);
  void MergeFrom(const AddStoreSensorRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddStoreSensorRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strSensorID = 1;
  void clear_strsensorid();
  static const int kStrSensorIDFieldNumber = 1;
  const ::std::string& strsensorid() const;
  void set_strsensorid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorid(::std::string&& value);
  #endif
  void set_strsensorid(const char* value);
  void set_strsensorid(const char* value, size_t size);
  ::std::string* mutable_strsensorid();
  ::std::string* release_strsensorid();
  void set_allocated_strsensorid(::std::string* strsensorid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddStoreSensorRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsensorid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStoreSensorReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteStoreSensorReq) */ {
 public:
  DeleteStoreSensorReq();
  virtual ~DeleteStoreSensorReq();

  DeleteStoreSensorReq(const DeleteStoreSensorReq& from);

  inline DeleteStoreSensorReq& operator=(const DeleteStoreSensorReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStoreSensorReq& default_instance();

  static inline const DeleteStoreSensorReq* internal_default_instance() {
    return reinterpret_cast<const DeleteStoreSensorReq*>(
               &_DeleteStoreSensorReq_default_instance_);
  }

  void Swap(DeleteStoreSensorReq* other);

  // implements Message ----------------------------------------------

  inline DeleteStoreSensorReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteStoreSensorReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteStoreSensorReq& from);
  void MergeFrom(const DeleteStoreSensorReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteStoreSensorReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strSensorID = 3;
  void clear_strsensorid();
  static const int kStrSensorIDFieldNumber = 3;
  const ::std::string& strsensorid() const;
  void set_strsensorid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorid(::std::string&& value);
  #endif
  void set_strsensorid(const char* value);
  void set_strsensorid(const char* value, size_t size);
  ::std::string* mutable_strsensorid();
  ::std::string* release_strsensorid();
  void set_allocated_strsensorid(::std::string* strsensorid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteStoreSensorReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strsensorid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStoreSensorRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp) */ {
 public:
  DeleteStoreSensorRsp();
  virtual ~DeleteStoreSensorRsp();

  DeleteStoreSensorRsp(const DeleteStoreSensorRsp& from);

  inline DeleteStoreSensorRsp& operator=(const DeleteStoreSensorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStoreSensorRsp& default_instance();

  static inline const DeleteStoreSensorRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteStoreSensorRsp*>(
               &_DeleteStoreSensorRsp_default_instance_);
  }

  void Swap(DeleteStoreSensorRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteStoreSensorRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteStoreSensorRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteStoreSensorRsp& from);
  void MergeFrom(const DeleteStoreSensorRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteStoreSensorRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyStoreSensorReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyStoreSensorReq) */ {
 public:
  ModifyStoreSensorReq();
  virtual ~ModifyStoreSensorReq();

  ModifyStoreSensorReq(const ModifyStoreSensorReq& from);

  inline ModifyStoreSensorReq& operator=(const ModifyStoreSensorReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyStoreSensorReq& default_instance();

  static inline const ModifyStoreSensorReq* internal_default_instance() {
    return reinterpret_cast<const ModifyStoreSensorReq*>(
               &_ModifyStoreSensorReq_default_instance_);
  }

  void Swap(ModifyStoreSensorReq* other);

  // implements Message ----------------------------------------------

  inline ModifyStoreSensorReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyStoreSensorReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyStoreSensorReq& from);
  void MergeFrom(const ModifyStoreSensorReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyStoreSensorReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
  bool has_sensorinfo() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo() const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo();
  ::CustomerFlow::Interactive::Message::Sensor* release_sensorinfo();
  void set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyStoreSensorReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Sensor* sensorinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyStoreSensorRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp) */ {
 public:
  ModifyStoreSensorRsp();
  virtual ~ModifyStoreSensorRsp();

  ModifyStoreSensorRsp(const ModifyStoreSensorRsp& from);

  inline ModifyStoreSensorRsp& operator=(const ModifyStoreSensorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyStoreSensorRsp& default_instance();

  static inline const ModifyStoreSensorRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyStoreSensorRsp*>(
               &_ModifyStoreSensorRsp_default_instance_);
  }

  void Swap(ModifyStoreSensorRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyStoreSensorRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyStoreSensorRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyStoreSensorRsp& from);
  void MergeFrom(const ModifyStoreSensorRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyStoreSensorRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreSensorInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq) */ {
 public:
  QueryStoreSensorInfoReq();
  virtual ~QueryStoreSensorInfoReq();

  QueryStoreSensorInfoReq(const QueryStoreSensorInfoReq& from);

  inline QueryStoreSensorInfoReq& operator=(const QueryStoreSensorInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreSensorInfoReq& default_instance();

  static inline const QueryStoreSensorInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryStoreSensorInfoReq*>(
               &_QueryStoreSensorInfoReq_default_instance_);
  }

  void Swap(QueryStoreSensorInfoReq* other);

  // implements Message ----------------------------------------------

  inline QueryStoreSensorInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreSensorInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreSensorInfoReq& from);
  void MergeFrom(const QueryStoreSensorInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreSensorInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strSensorID = 2;
  void clear_strsensorid();
  static const int kStrSensorIDFieldNumber = 2;
  const ::std::string& strsensorid() const;
  void set_strsensorid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorid(::std::string&& value);
  #endif
  void set_strsensorid(const char* value);
  void set_strsensorid(const char* value, size_t size);
  ::std::string* mutable_strsensorid();
  ::std::string* release_strsensorid();
  void set_allocated_strsensorid(::std::string* strsensorid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strsensorid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStoreSensorInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp) */ {
 public:
  QueryStoreSensorInfoRsp();
  virtual ~QueryStoreSensorInfoRsp();

  QueryStoreSensorInfoRsp(const QueryStoreSensorInfoRsp& from);

  inline QueryStoreSensorInfoRsp& operator=(const QueryStoreSensorInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStoreSensorInfoRsp& default_instance();

  static inline const QueryStoreSensorInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryStoreSensorInfoRsp*>(
               &_QueryStoreSensorInfoRsp_default_instance_);
  }

  void Swap(QueryStoreSensorInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QueryStoreSensorInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryStoreSensorInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryStoreSensorInfoRsp& from);
  void MergeFrom(const QueryStoreSensorInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryStoreSensorInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
  bool has_sensorinfo() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo() const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo();
  ::CustomerFlow::Interactive::Message::Sensor* release_sensorinfo();
  void set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::Sensor* sensorinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllStoreSensorReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq) */ {
 public:
  QueryAllStoreSensorReq();
  virtual ~QueryAllStoreSensorReq();

  QueryAllStoreSensorReq(const QueryAllStoreSensorReq& from);

  inline QueryAllStoreSensorReq& operator=(const QueryAllStoreSensorReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllStoreSensorReq& default_instance();

  static inline const QueryAllStoreSensorReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllStoreSensorReq*>(
               &_QueryAllStoreSensorReq_default_instance_);
  }

  void Swap(QueryAllStoreSensorReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllStoreSensorReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllStoreSensorReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllStoreSensorReq& from);
  void MergeFrom(const QueryAllStoreSensorReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllStoreSensorReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllStoreSensorRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp) */ {
 public:
  QueryAllStoreSensorRsp();
  virtual ~QueryAllStoreSensorRsp();

  QueryAllStoreSensorRsp(const QueryAllStoreSensorRsp& from);

  inline QueryAllStoreSensorRsp& operator=(const QueryAllStoreSensorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllStoreSensorRsp& default_instance();

  static inline const QueryAllStoreSensorRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllStoreSensorRsp*>(
               &_QueryAllStoreSensorRsp_default_instance_);
  }

  void Swap(QueryAllStoreSensorRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllStoreSensorRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllStoreSensorRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllStoreSensorRsp& from);
  void MergeFrom(const QueryAllStoreSensorRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllStoreSensorRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
  int sensorinfo_size() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo(int index);
  ::CustomerFlow::Interactive::Message::Sensor* add_sensorinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
      mutable_sensorinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
      sensorinfo() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor > sensorinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportPOSDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ImportPOSDataReq) */ {
 public:
  ImportPOSDataReq();
  virtual ~ImportPOSDataReq();

  ImportPOSDataReq(const ImportPOSDataReq& from);

  inline ImportPOSDataReq& operator=(const ImportPOSDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportPOSDataReq& default_instance();

  static inline const ImportPOSDataReq* internal_default_instance() {
    return reinterpret_cast<const ImportPOSDataReq*>(
               &_ImportPOSDataReq_default_instance_);
  }

  void Swap(ImportPOSDataReq* other);

  // implements Message ----------------------------------------------

  inline ImportPOSDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportPOSDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportPOSDataReq& from);
  void MergeFrom(const ImportPOSDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportPOSDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strDealDate = 6;
  void clear_strdealdate();
  static const int kStrDealDateFieldNumber = 6;
  const ::std::string& strdealdate() const;
  void set_strdealdate(const ::std::string& value);
  #if LANG_CXX11
  void set_strdealdate(::std::string&& value);
  #endif
  void set_strdealdate(const char* value);
  void set_strdealdate(const char* value, size_t size);
  ::std::string* mutable_strdealdate();
  ::std::string* release_strdealdate();
  void set_allocated_strdealdate(::std::string* strdealdate);

  // uint32 uiOrderAmount = 3;
  void clear_uiorderamount();
  static const int kUiOrderAmountFieldNumber = 3;
  ::google::protobuf::uint32 uiorderamount() const;
  void set_uiorderamount(::google::protobuf::uint32 value);

  // uint32 uiGoodsAmount = 4;
  void clear_uigoodsamount();
  static const int kUiGoodsAmountFieldNumber = 4;
  ::google::protobuf::uint32 uigoodsamount() const;
  void set_uigoodsamount(::google::protobuf::uint32 value);

  // double dDealAmount = 5;
  void clear_ddealamount();
  static const int kDDealAmountFieldNumber = 5;
  double ddealamount() const;
  void set_ddealamount(double value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ImportPOSDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strdealdate_;
  ::google::protobuf::uint32 uiorderamount_;
  ::google::protobuf::uint32 uigoodsamount_;
  double ddealamount_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportPOSDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ImportPOSDataRsp) */ {
 public:
  ImportPOSDataRsp();
  virtual ~ImportPOSDataRsp();

  ImportPOSDataRsp(const ImportPOSDataRsp& from);

  inline ImportPOSDataRsp& operator=(const ImportPOSDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportPOSDataRsp& default_instance();

  static inline const ImportPOSDataRsp* internal_default_instance() {
    return reinterpret_cast<const ImportPOSDataRsp*>(
               &_ImportPOSDataRsp_default_instance_);
  }

  void Swap(ImportPOSDataRsp* other);

  // implements Message ----------------------------------------------

  inline ImportPOSDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportPOSDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportPOSDataRsp& from);
  void MergeFrom(const ImportPOSDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportPOSDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ImportPOSDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryCustomerFlowStatisticReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq) */ {
 public:
  QueryCustomerFlowStatisticReq();
  virtual ~QueryCustomerFlowStatisticReq();

  QueryCustomerFlowStatisticReq(const QueryCustomerFlowStatisticReq& from);

  inline QueryCustomerFlowStatisticReq& operator=(const QueryCustomerFlowStatisticReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCustomerFlowStatisticReq& default_instance();

  static inline const QueryCustomerFlowStatisticReq* internal_default_instance() {
    return reinterpret_cast<const QueryCustomerFlowStatisticReq*>(
               &_QueryCustomerFlowStatisticReq_default_instance_);
  }

  void Swap(QueryCustomerFlowStatisticReq* other);

  // implements Message ----------------------------------------------

  inline QueryCustomerFlowStatisticReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryCustomerFlowStatisticReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryCustomerFlowStatisticReq& from);
  void MergeFrom(const QueryCustomerFlowStatisticReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryCustomerFlowStatisticReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strBeginDate = 3;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 3;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 4;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 4;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // uint32 uiTimePrecision = 5;
  void clear_uitimeprecision();
  static const int kUiTimePrecisionFieldNumber = 5;
  ::google::protobuf::uint32 uitimeprecision() const;
  void set_uitimeprecision(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::uint32 uitimeprecision_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryCustomerFlowStatisticRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp) */ {
 public:
  QueryCustomerFlowStatisticRsp();
  virtual ~QueryCustomerFlowStatisticRsp();

  QueryCustomerFlowStatisticRsp(const QueryCustomerFlowStatisticRsp& from);

  inline QueryCustomerFlowStatisticRsp& operator=(const QueryCustomerFlowStatisticRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCustomerFlowStatisticRsp& default_instance();

  static inline const QueryCustomerFlowStatisticRsp* internal_default_instance() {
    return reinterpret_cast<const QueryCustomerFlowStatisticRsp*>(
               &_QueryCustomerFlowStatisticRsp_default_instance_);
  }

  void Swap(QueryCustomerFlowStatisticRsp* other);

  // implements Message ----------------------------------------------

  inline QueryCustomerFlowStatisticRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryCustomerFlowStatisticRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryCustomerFlowStatisticRsp& from);
  void MergeFrom(const QueryCustomerFlowStatisticRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryCustomerFlowStatisticRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strChartData = 1;
  void clear_strchartdata();
  static const int kStrChartDataFieldNumber = 1;
  const ::std::string& strchartdata() const;
  void set_strchartdata(const ::std::string& value);
  #if LANG_CXX11
  void set_strchartdata(::std::string&& value);
  #endif
  void set_strchartdata(const char* value);
  void set_strchartdata(const char* value, size_t size);
  ::std::string* mutable_strchartdata();
  ::std::string* release_strchartdata();
  void set_allocated_strchartdata(::std::string* strchartdata);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strchartdata_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryPatrolResultReportReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq) */ {
 public:
  QueryPatrolResultReportReq();
  virtual ~QueryPatrolResultReportReq();

  QueryPatrolResultReportReq(const QueryPatrolResultReportReq& from);

  inline QueryPatrolResultReportReq& operator=(const QueryPatrolResultReportReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPatrolResultReportReq& default_instance();

  static inline const QueryPatrolResultReportReq* internal_default_instance() {
    return reinterpret_cast<const QueryPatrolResultReportReq*>(
               &_QueryPatrolResultReportReq_default_instance_);
  }

  void Swap(QueryPatrolResultReportReq* other);

  // implements Message ----------------------------------------------

  inline QueryPatrolResultReportReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryPatrolResultReportReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryPatrolResultReportReq& from);
  void MergeFrom(const QueryPatrolResultReportReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryPatrolResultReportReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strBeginDate = 3;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 3;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 4;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 4;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // string strPatrolUserID = 6;
  void clear_strpatroluserid();
  static const int kStrPatrolUserIDFieldNumber = 6;
  const ::std::string& strpatroluserid() const;
  void set_strpatroluserid(const ::std::string& value);
  #if LANG_CXX11
  void set_strpatroluserid(::std::string&& value);
  #endif
  void set_strpatroluserid(const char* value);
  void set_strpatroluserid(const char* value, size_t size);
  ::std::string* mutable_strpatroluserid();
  ::std::string* release_strpatroluserid();
  void set_allocated_strpatroluserid(::std::string* strpatroluserid);

  // uint32 uiPatrolResult = 5;
  void clear_uipatrolresult();
  static const int kUiPatrolResultFieldNumber = 5;
  ::google::protobuf::uint32 uipatrolresult() const;
  void set_uipatrolresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::internal::ArenaStringPtr strpatroluserid_;
  ::google::protobuf::uint32 uipatrolresult_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryPatrolResultReportRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp) */ {
 public:
  QueryPatrolResultReportRsp();
  virtual ~QueryPatrolResultReportRsp();

  QueryPatrolResultReportRsp(const QueryPatrolResultReportRsp& from);

  inline QueryPatrolResultReportRsp& operator=(const QueryPatrolResultReportRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPatrolResultReportRsp& default_instance();

  static inline const QueryPatrolResultReportRsp* internal_default_instance() {
    return reinterpret_cast<const QueryPatrolResultReportRsp*>(
               &_QueryPatrolResultReportRsp_default_instance_);
  }

  void Swap(QueryPatrolResultReportRsp* other);

  // implements Message ----------------------------------------------

  inline QueryPatrolResultReportRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryPatrolResultReportRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryPatrolResultReportRsp& from);
  void MergeFrom(const QueryPatrolResultReportRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryPatrolResultReportRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strChartData = 1;
  void clear_strchartdata();
  static const int kStrChartDataFieldNumber = 1;
  const ::std::string& strchartdata() const;
  void set_strchartdata(const ::std::string& value);
  #if LANG_CXX11
  void set_strchartdata(::std::string&& value);
  #endif
  void set_strchartdata(const char* value);
  void set_strchartdata(const char* value, size_t size);
  ::std::string* mutable_strchartdata();
  ::std::string* release_strchartdata();
  void set_allocated_strchartdata(::std::string* strchartdata);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strchartdata_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportCustomerFlowDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq) */ {
 public:
  ReportCustomerFlowDataReq();
  virtual ~ReportCustomerFlowDataReq();

  ReportCustomerFlowDataReq(const ReportCustomerFlowDataReq& from);

  inline ReportCustomerFlowDataReq& operator=(const ReportCustomerFlowDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportCustomerFlowDataReq& default_instance();

  static inline const ReportCustomerFlowDataReq* internal_default_instance() {
    return reinterpret_cast<const ReportCustomerFlowDataReq*>(
               &_ReportCustomerFlowDataReq_default_instance_);
  }

  void Swap(ReportCustomerFlowDataReq* other);

  // implements Message ----------------------------------------------

  inline ReportCustomerFlowDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportCustomerFlowDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportCustomerFlowDataReq& from);
  void MergeFrom(const ReportCustomerFlowDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportCustomerFlowDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.RawCustomerFlow customerFlow = 2;
  int customerflow_size() const;
  void clear_customerflow();
  static const int kCustomerFlowFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::RawCustomerFlow& customerflow(int index) const;
  ::CustomerFlow::Interactive::Message::RawCustomerFlow* mutable_customerflow(int index);
  ::CustomerFlow::Interactive::Message::RawCustomerFlow* add_customerflow();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RawCustomerFlow >*
      mutable_customerflow();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RawCustomerFlow >&
      customerflow() const;

  // string strDeviceID = 1;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 1;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RawCustomerFlow > customerflow_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportCustomerFlowDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp) */ {
 public:
  ReportCustomerFlowDataRsp();
  virtual ~ReportCustomerFlowDataRsp();

  ReportCustomerFlowDataRsp(const ReportCustomerFlowDataRsp& from);

  inline ReportCustomerFlowDataRsp& operator=(const ReportCustomerFlowDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportCustomerFlowDataRsp& default_instance();

  static inline const ReportCustomerFlowDataRsp* internal_default_instance() {
    return reinterpret_cast<const ReportCustomerFlowDataRsp*>(
               &_ReportCustomerFlowDataRsp_default_instance_);
  }

  void Swap(ReportCustomerFlowDataRsp* other);

  // implements Message ----------------------------------------------

  inline ReportCustomerFlowDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportCustomerFlowDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportCustomerFlowDataRsp& from);
  void MergeFrom(const ReportCustomerFlowDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportCustomerFlowDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportSensorInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ReportSensorInfoReq) */ {
 public:
  ReportSensorInfoReq();
  virtual ~ReportSensorInfoReq();

  ReportSensorInfoReq(const ReportSensorInfoReq& from);

  inline ReportSensorInfoReq& operator=(const ReportSensorInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSensorInfoReq& default_instance();

  static inline const ReportSensorInfoReq* internal_default_instance() {
    return reinterpret_cast<const ReportSensorInfoReq*>(
               &_ReportSensorInfoReq_default_instance_);
  }

  void Swap(ReportSensorInfoReq* other);

  // implements Message ----------------------------------------------

  inline ReportSensorInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportSensorInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportSensorInfoReq& from);
  void MergeFrom(const ReportSensorInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportSensorInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
  int sensorinfo_size() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo(int index);
  ::CustomerFlow::Interactive::Message::Sensor* add_sensorinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
      mutable_sensorinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
      sensorinfo() const;

  // string strDeviceID = 1;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 1;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ReportSensorInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor > sensorinfo_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportSensorInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ReportSensorInfoRsp) */ {
 public:
  ReportSensorInfoRsp();
  virtual ~ReportSensorInfoRsp();

  ReportSensorInfoRsp(const ReportSensorInfoRsp& from);

  inline ReportSensorInfoRsp& operator=(const ReportSensorInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSensorInfoRsp& default_instance();

  static inline const ReportSensorInfoRsp* internal_default_instance() {
    return reinterpret_cast<const ReportSensorInfoRsp*>(
               &_ReportSensorInfoRsp_default_instance_);
  }

  void Swap(ReportSensorInfoRsp* other);

  // implements Message ----------------------------------------------

  inline ReportSensorInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportSensorInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportSensorInfoRsp& from);
  void MergeFrom(const ReportSensorInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportSensorInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ReportSensorInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportSensorAlarmInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq) */ {
 public:
  ReportSensorAlarmInfoReq();
  virtual ~ReportSensorAlarmInfoReq();

  ReportSensorAlarmInfoReq(const ReportSensorAlarmInfoReq& from);

  inline ReportSensorAlarmInfoReq& operator=(const ReportSensorAlarmInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSensorAlarmInfoReq& default_instance();

  static inline const ReportSensorAlarmInfoReq* internal_default_instance() {
    return reinterpret_cast<const ReportSensorAlarmInfoReq*>(
               &_ReportSensorAlarmInfoReq_default_instance_);
  }

  void Swap(ReportSensorAlarmInfoReq* other);

  // implements Message ----------------------------------------------

  inline ReportSensorAlarmInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportSensorAlarmInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportSensorAlarmInfoReq& from);
  void MergeFrom(const ReportSensorAlarmInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportSensorAlarmInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strFileID = 3;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 3;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfileid(::std::string&& value);
  #endif
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
  bool has_sensorinfo() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo() const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo();
  ::CustomerFlow::Interactive::Message::Sensor* release_sensorinfo();
  void set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo);

  // uint32 uiRecover = 2;
  void clear_uirecover();
  static const int kUiRecoverFieldNumber = 2;
  ::google::protobuf::uint32 uirecover() const;
  void set_uirecover(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::CustomerFlow::Interactive::Message::Sensor* sensorinfo_;
  ::google::protobuf::uint32 uirecover_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportSensorAlarmInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp) */ {
 public:
  ReportSensorAlarmInfoRsp();
  virtual ~ReportSensorAlarmInfoRsp();

  ReportSensorAlarmInfoRsp(const ReportSensorAlarmInfoRsp& from);

  inline ReportSensorAlarmInfoRsp& operator=(const ReportSensorAlarmInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSensorAlarmInfoRsp& default_instance();

  static inline const ReportSensorAlarmInfoRsp* internal_default_instance() {
    return reinterpret_cast<const ReportSensorAlarmInfoRsp*>(
               &_ReportSensorAlarmInfoRsp_default_instance_);
  }

  void Swap(ReportSensorAlarmInfoRsp* other);

  // implements Message ----------------------------------------------

  inline ReportSensorAlarmInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportSensorAlarmInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportSensorAlarmInfoRsp& from);
  void MergeFrom(const ReportSensorAlarmInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportSensorAlarmInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySensorAlarmThresholdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq) */ {
 public:
  QuerySensorAlarmThresholdReq();
  virtual ~QuerySensorAlarmThresholdReq();

  QuerySensorAlarmThresholdReq(const QuerySensorAlarmThresholdReq& from);

  inline QuerySensorAlarmThresholdReq& operator=(const QuerySensorAlarmThresholdReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySensorAlarmThresholdReq& default_instance();

  static inline const QuerySensorAlarmThresholdReq* internal_default_instance() {
    return reinterpret_cast<const QuerySensorAlarmThresholdReq*>(
               &_QuerySensorAlarmThresholdReq_default_instance_);
  }

  void Swap(QuerySensorAlarmThresholdReq* other);

  // implements Message ----------------------------------------------

  inline QuerySensorAlarmThresholdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySensorAlarmThresholdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySensorAlarmThresholdReq& from);
  void MergeFrom(const QuerySensorAlarmThresholdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySensorAlarmThresholdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDeviceID = 1;
  void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 1;
  const ::std::string& strdeviceid() const;
  void set_strdeviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdeviceid(::std::string&& value);
  #endif
  void set_strdeviceid(const char* value);
  void set_strdeviceid(const char* value, size_t size);
  ::std::string* mutable_strdeviceid();
  ::std::string* release_strdeviceid();
  void set_allocated_strdeviceid(::std::string* strdeviceid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdeviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySensorAlarmThresholdRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp) */ {
 public:
  QuerySensorAlarmThresholdRsp();
  virtual ~QuerySensorAlarmThresholdRsp();

  QuerySensorAlarmThresholdRsp(const QuerySensorAlarmThresholdRsp& from);

  inline QuerySensorAlarmThresholdRsp& operator=(const QuerySensorAlarmThresholdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySensorAlarmThresholdRsp& default_instance();

  static inline const QuerySensorAlarmThresholdRsp* internal_default_instance() {
    return reinterpret_cast<const QuerySensorAlarmThresholdRsp*>(
               &_QuerySensorAlarmThresholdRsp_default_instance_);
  }

  void Swap(QuerySensorAlarmThresholdRsp* other);

  // implements Message ----------------------------------------------

  inline QuerySensorAlarmThresholdRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySensorAlarmThresholdRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySensorAlarmThresholdRsp& from);
  void MergeFrom(const QuerySensorAlarmThresholdRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySensorAlarmThresholdRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
  int sensorinfo_size() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo(int index);
  ::CustomerFlow::Interactive::Message::Sensor* add_sensorinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
      mutable_sensorinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
      sensorinfo() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor > sensorinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveSensorRecordsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq) */ {
 public:
  RemoveSensorRecordsReq();
  virtual ~RemoveSensorRecordsReq();

  RemoveSensorRecordsReq(const RemoveSensorRecordsReq& from);

  inline RemoveSensorRecordsReq& operator=(const RemoveSensorRecordsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSensorRecordsReq& default_instance();

  static inline const RemoveSensorRecordsReq* internal_default_instance() {
    return reinterpret_cast<const RemoveSensorRecordsReq*>(
               &_RemoveSensorRecordsReq_default_instance_);
  }

  void Swap(RemoveSensorRecordsReq* other);

  // implements Message ----------------------------------------------

  inline RemoveSensorRecordsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveSensorRecordsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveSensorRecordsReq& from);
  void MergeFrom(const RemoveSensorRecordsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveSensorRecordsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strRecordIDList = 2;
  int strrecordidlist_size() const;
  void clear_strrecordidlist();
  static const int kStrRecordIDListFieldNumber = 2;
  const ::std::string& strrecordidlist(int index) const;
  ::std::string* mutable_strrecordidlist(int index);
  void set_strrecordidlist(int index, const ::std::string& value);
  void set_strrecordidlist(int index, const char* value);
  void set_strrecordidlist(int index, const char* value, size_t size);
  ::std::string* add_strrecordidlist();
  void add_strrecordidlist(const ::std::string& value);
  void add_strrecordidlist(const char* value);
  void add_strrecordidlist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strrecordidlist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strrecordidlist();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strrecordidlist_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveSensorRecordsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp) */ {
 public:
  RemoveSensorRecordsRsp();
  virtual ~RemoveSensorRecordsRsp();

  RemoveSensorRecordsRsp(const RemoveSensorRecordsRsp& from);

  inline RemoveSensorRecordsRsp& operator=(const RemoveSensorRecordsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSensorRecordsRsp& default_instance();

  static inline const RemoveSensorRecordsRsp* internal_default_instance() {
    return reinterpret_cast<const RemoveSensorRecordsRsp*>(
               &_RemoveSensorRecordsRsp_default_instance_);
  }

  void Swap(RemoveSensorRecordsRsp* other);

  // implements Message ----------------------------------------------

  inline RemoveSensorRecordsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveSensorRecordsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveSensorRecordsRsp& from);
  void MergeFrom(const RemoveSensorRecordsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveSensorRecordsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveSensorAlarmRecordsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq) */ {
 public:
  RemoveSensorAlarmRecordsReq();
  virtual ~RemoveSensorAlarmRecordsReq();

  RemoveSensorAlarmRecordsReq(const RemoveSensorAlarmRecordsReq& from);

  inline RemoveSensorAlarmRecordsReq& operator=(const RemoveSensorAlarmRecordsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSensorAlarmRecordsReq& default_instance();

  static inline const RemoveSensorAlarmRecordsReq* internal_default_instance() {
    return reinterpret_cast<const RemoveSensorAlarmRecordsReq*>(
               &_RemoveSensorAlarmRecordsReq_default_instance_);
  }

  void Swap(RemoveSensorAlarmRecordsReq* other);

  // implements Message ----------------------------------------------

  inline RemoveSensorAlarmRecordsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveSensorAlarmRecordsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveSensorAlarmRecordsReq& from);
  void MergeFrom(const RemoveSensorAlarmRecordsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveSensorAlarmRecordsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strRecordIDList = 2;
  int strrecordidlist_size() const;
  void clear_strrecordidlist();
  static const int kStrRecordIDListFieldNumber = 2;
  const ::std::string& strrecordidlist(int index) const;
  ::std::string* mutable_strrecordidlist(int index);
  void set_strrecordidlist(int index, const ::std::string& value);
  void set_strrecordidlist(int index, const char* value);
  void set_strrecordidlist(int index, const char* value, size_t size);
  ::std::string* add_strrecordidlist();
  void add_strrecordidlist(const ::std::string& value);
  void add_strrecordidlist(const char* value);
  void add_strrecordidlist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strrecordidlist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strrecordidlist();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strrecordidlist_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveSensorAlarmRecordsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp) */ {
 public:
  RemoveSensorAlarmRecordsRsp();
  virtual ~RemoveSensorAlarmRecordsRsp();

  RemoveSensorAlarmRecordsRsp(const RemoveSensorAlarmRecordsRsp& from);

  inline RemoveSensorAlarmRecordsRsp& operator=(const RemoveSensorAlarmRecordsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSensorAlarmRecordsRsp& default_instance();

  static inline const RemoveSensorAlarmRecordsRsp* internal_default_instance() {
    return reinterpret_cast<const RemoveSensorAlarmRecordsRsp*>(
               &_RemoveSensorAlarmRecordsRsp_default_instance_);
  }

  void Swap(RemoveSensorAlarmRecordsRsp* other);

  // implements Message ----------------------------------------------

  inline RemoveSensorAlarmRecordsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveSensorAlarmRecordsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveSensorAlarmRecordsRsp& from);
  void MergeFrom(const RemoveSensorAlarmRecordsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveSensorAlarmRecordsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySensorRecordsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySensorRecordsReq) */ {
 public:
  QuerySensorRecordsReq();
  virtual ~QuerySensorRecordsReq();

  QuerySensorRecordsReq(const QuerySensorRecordsReq& from);

  inline QuerySensorRecordsReq& operator=(const QuerySensorRecordsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySensorRecordsReq& default_instance();

  static inline const QuerySensorRecordsReq* internal_default_instance() {
    return reinterpret_cast<const QuerySensorRecordsReq*>(
               &_QuerySensorRecordsReq_default_instance_);
  }

  void Swap(QuerySensorRecordsReq* other);

  // implements Message ----------------------------------------------

  inline QuerySensorRecordsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySensorRecordsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySensorRecordsReq& from);
  void MergeFrom(const QuerySensorRecordsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySensorRecordsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strSensorID = 3;
  void clear_strsensorid();
  static const int kStrSensorIDFieldNumber = 3;
  const ::std::string& strsensorid() const;
  void set_strsensorid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorid(::std::string&& value);
  #endif
  void set_strsensorid(const char* value);
  void set_strsensorid(const char* value, size_t size);
  ::std::string* mutable_strsensorid();
  ::std::string* release_strsensorid();
  void set_allocated_strsensorid(::std::string* strsensorid);

  // string strSensorType = 4;
  void clear_strsensortype();
  static const int kStrSensorTypeFieldNumber = 4;
  const ::std::string& strsensortype() const;
  void set_strsensortype(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensortype(::std::string&& value);
  #endif
  void set_strsensortype(const char* value);
  void set_strsensortype(const char* value, size_t size);
  ::std::string* mutable_strsensortype();
  ::std::string* release_strsensortype();
  void set_allocated_strsensortype(::std::string* strsensortype);

  // string strBeginDate = 5;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 5;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 6;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 6;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // string strValue = 10;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 10;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiBeginIndex = 7;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 7;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // uint32 uiTimeRangeType = 8;
  void clear_uitimerangetype();
  static const int kUiTimeRangeTypeFieldNumber = 8;
  ::google::protobuf::uint32 uitimerangetype() const;
  void set_uitimerangetype(::google::protobuf::uint32 value);

  // uint32 uiTimeRangeBase = 9;
  void clear_uitimerangebase();
  static const int kUiTimeRangeBaseFieldNumber = 9;
  ::google::protobuf::uint32 uitimerangebase() const;
  void set_uitimerangebase(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySensorRecordsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strsensorid_;
  ::google::protobuf::internal::ArenaStringPtr strsensortype_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uibeginindex_;
  ::google::protobuf::uint32 uitimerangetype_;
  ::google::protobuf::uint32 uitimerangebase_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySensorRecordsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp) */ {
 public:
  QuerySensorRecordsRsp();
  virtual ~QuerySensorRecordsRsp();

  QuerySensorRecordsRsp(const QuerySensorRecordsRsp& from);

  inline QuerySensorRecordsRsp& operator=(const QuerySensorRecordsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySensorRecordsRsp& default_instance();

  static inline const QuerySensorRecordsRsp* internal_default_instance() {
    return reinterpret_cast<const QuerySensorRecordsRsp*>(
               &_QuerySensorRecordsRsp_default_instance_);
  }

  void Swap(QuerySensorRecordsRsp* other);

  // implements Message ----------------------------------------------

  inline QuerySensorRecordsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySensorRecordsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySensorRecordsRsp& from);
  void MergeFrom(const QuerySensorRecordsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySensorRecordsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strRecordIDList = 1;
  int strrecordidlist_size() const;
  void clear_strrecordidlist();
  static const int kStrRecordIDListFieldNumber = 1;
  const ::std::string& strrecordidlist(int index) const;
  ::std::string* mutable_strrecordidlist(int index);
  void set_strrecordidlist(int index, const ::std::string& value);
  void set_strrecordidlist(int index, const char* value);
  void set_strrecordidlist(int index, const char* value, size_t size);
  ::std::string* add_strrecordidlist();
  void add_strrecordidlist(const ::std::string& value);
  void add_strrecordidlist(const char* value);
  void add_strrecordidlist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strrecordidlist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strrecordidlist();

  // repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
  int sensorinfo_size() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo(int index) const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo(int index);
  ::CustomerFlow::Interactive::Message::Sensor* add_sensorinfo();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
      mutable_sensorinfo();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
      sensorinfo() const;

  // string strValue = 4;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 4;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiRealRecordNum = 3;
  void clear_uirealrecordnum();
  static const int kUiRealRecordNumFieldNumber = 3;
  ::google::protobuf::uint32 uirealrecordnum() const;
  void set_uirealrecordnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strrecordidlist_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor > sensorinfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uirealrecordnum_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySensorAlarmRecordsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq) */ {
 public:
  QuerySensorAlarmRecordsReq();
  virtual ~QuerySensorAlarmRecordsReq();

  QuerySensorAlarmRecordsReq(const QuerySensorAlarmRecordsReq& from);

  inline QuerySensorAlarmRecordsReq& operator=(const QuerySensorAlarmRecordsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySensorAlarmRecordsReq& default_instance();

  static inline const QuerySensorAlarmRecordsReq* internal_default_instance() {
    return reinterpret_cast<const QuerySensorAlarmRecordsReq*>(
               &_QuerySensorAlarmRecordsReq_default_instance_);
  }

  void Swap(QuerySensorAlarmRecordsReq* other);

  // implements Message ----------------------------------------------

  inline QuerySensorAlarmRecordsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySensorAlarmRecordsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySensorAlarmRecordsReq& from);
  void MergeFrom(const QuerySensorAlarmRecordsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySensorAlarmRecordsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strStoreID = 2;
  void clear_strstoreid();
  static const int kStrStoreIDFieldNumber = 2;
  const ::std::string& strstoreid() const;
  void set_strstoreid(const ::std::string& value);
  #if LANG_CXX11
  void set_strstoreid(::std::string&& value);
  #endif
  void set_strstoreid(const char* value);
  void set_strstoreid(const char* value, size_t size);
  ::std::string* mutable_strstoreid();
  ::std::string* release_strstoreid();
  void set_allocated_strstoreid(::std::string* strstoreid);

  // string strSensorID = 3;
  void clear_strsensorid();
  static const int kStrSensorIDFieldNumber = 3;
  const ::std::string& strsensorid() const;
  void set_strsensorid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensorid(::std::string&& value);
  #endif
  void set_strsensorid(const char* value);
  void set_strsensorid(const char* value, size_t size);
  ::std::string* mutable_strsensorid();
  ::std::string* release_strsensorid();
  void set_allocated_strsensorid(::std::string* strsensorid);

  // string strSensorType = 4;
  void clear_strsensortype();
  static const int kStrSensorTypeFieldNumber = 4;
  const ::std::string& strsensortype() const;
  void set_strsensortype(const ::std::string& value);
  #if LANG_CXX11
  void set_strsensortype(::std::string&& value);
  #endif
  void set_strsensortype(const char* value);
  void set_strsensortype(const char* value, size_t size);
  ::std::string* mutable_strsensortype();
  ::std::string* release_strsensortype();
  void set_allocated_strsensortype(::std::string* strsensortype);

  // string strBeginDate = 6;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 6;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 7;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 7;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // uint32 uiRecover = 5;
  void clear_uirecover();
  static const int kUiRecoverFieldNumber = 5;
  ::google::protobuf::uint32 uirecover() const;
  void set_uirecover(::google::protobuf::uint32 value);

  // uint32 uiBeginIndex = 8;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 8;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strstoreid_;
  ::google::protobuf::internal::ArenaStringPtr strsensorid_;
  ::google::protobuf::internal::ArenaStringPtr strsensortype_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::uint32 uirecover_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SensorAlarmRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.SensorAlarmRecord) */ {
 public:
  SensorAlarmRecord();
  virtual ~SensorAlarmRecord();

  SensorAlarmRecord(const SensorAlarmRecord& from);

  inline SensorAlarmRecord& operator=(const SensorAlarmRecord& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorAlarmRecord& default_instance();

  static inline const SensorAlarmRecord* internal_default_instance() {
    return reinterpret_cast<const SensorAlarmRecord*>(
               &_SensorAlarmRecord_default_instance_);
  }

  void Swap(SensorAlarmRecord* other);

  // implements Message ----------------------------------------------

  inline SensorAlarmRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  SensorAlarmRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SensorAlarmRecord& from);
  void MergeFrom(const SensorAlarmRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SensorAlarmRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strFileID = 3;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 3;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfileid(::std::string&& value);
  #endif
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // string strRecordID = 4;
  void clear_strrecordid();
  static const int kStrRecordIDFieldNumber = 4;
  const ::std::string& strrecordid() const;
  void set_strrecordid(const ::std::string& value);
  #if LANG_CXX11
  void set_strrecordid(::std::string&& value);
  #endif
  void set_strrecordid(const char* value);
  void set_strrecordid(const char* value, size_t size);
  ::std::string* mutable_strrecordid();
  ::std::string* release_strrecordid();
  void set_allocated_strrecordid(::std::string* strrecordid);

  // .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
  bool has_sensorinfo() const;
  void clear_sensorinfo();
  static const int kSensorInfoFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Sensor& sensorinfo() const;
  ::CustomerFlow::Interactive::Message::Sensor* mutable_sensorinfo();
  ::CustomerFlow::Interactive::Message::Sensor* release_sensorinfo();
  void set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo);

  // uint32 uiRecover = 2;
  void clear_uirecover();
  static const int kUiRecoverFieldNumber = 2;
  ::google::protobuf::uint32 uirecover() const;
  void set_uirecover(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.SensorAlarmRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::google::protobuf::internal::ArenaStringPtr strrecordid_;
  ::CustomerFlow::Interactive::Message::Sensor* sensorinfo_;
  ::google::protobuf::uint32 uirecover_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySensorAlarmRecordsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp) */ {
 public:
  QuerySensorAlarmRecordsRsp();
  virtual ~QuerySensorAlarmRecordsRsp();

  QuerySensorAlarmRecordsRsp(const QuerySensorAlarmRecordsRsp& from);

  inline QuerySensorAlarmRecordsRsp& operator=(const QuerySensorAlarmRecordsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySensorAlarmRecordsRsp& default_instance();

  static inline const QuerySensorAlarmRecordsRsp* internal_default_instance() {
    return reinterpret_cast<const QuerySensorAlarmRecordsRsp*>(
               &_QuerySensorAlarmRecordsRsp_default_instance_);
  }

  void Swap(QuerySensorAlarmRecordsRsp* other);

  // implements Message ----------------------------------------------

  inline QuerySensorAlarmRecordsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QuerySensorAlarmRecordsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuerySensorAlarmRecordsRsp& from);
  void MergeFrom(const QuerySensorAlarmRecordsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuerySensorAlarmRecordsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.SensorAlarmRecord sard = 1;
  int sard_size() const;
  void clear_sard();
  static const int kSardFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::SensorAlarmRecord& sard(int index) const;
  ::CustomerFlow::Interactive::Message::SensorAlarmRecord* mutable_sard(int index);
  ::CustomerFlow::Interactive::Message::SensorAlarmRecord* add_sard();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SensorAlarmRecord >*
      mutable_sard();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SensorAlarmRecord >&
      sard() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SensorAlarmRecord > sard_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Permission : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Permission) */ {
 public:
  Permission();
  virtual ~Permission();

  Permission(const Permission& from);

  inline Permission& operator=(const Permission& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Permission& default_instance();

  static inline const Permission* internal_default_instance() {
    return reinterpret_cast<const Permission*>(
               &_Permission_default_instance_);
  }

  void Swap(Permission* other);

  // implements Message ----------------------------------------------

  inline Permission* New() const PROTOBUF_FINAL { return New(NULL); }

  Permission* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Permission& from);
  void MergeFrom(const Permission& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Permission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAccess = 2;
  void clear_straccess();
  static const int kStrAccessFieldNumber = 2;
  const ::std::string& straccess() const;
  void set_straccess(const ::std::string& value);
  #if LANG_CXX11
  void set_straccess(::std::string&& value);
  #endif
  void set_straccess(const char* value);
  void set_straccess(const char* value, size_t size);
  ::std::string* mutable_straccess();
  ::std::string* release_straccess();
  void set_allocated_straccess(::std::string* straccess);

  // string strExtend = 3;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 3;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // uint32 uiFuncID = 1;
  void clear_uifuncid();
  static const int kUiFuncIDFieldNumber = 1;
  ::google::protobuf::uint32 uifuncid() const;
  void set_uifuncid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Permission)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr straccess_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::uint32 uifuncid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Role : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Role) */ {
 public:
  Role();
  virtual ~Role();

  Role(const Role& from);

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();

  static inline const Role* internal_default_instance() {
    return reinterpret_cast<const Role*>(
               &_Role_default_instance_);
  }

  void Swap(Role* other);

  // implements Message ----------------------------------------------

  inline Role* New() const PROTOBUF_FINAL { return New(NULL); }

  Role* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Role* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Permission pmlist = 5;
  int pmlist_size() const;
  void clear_pmlist();
  static const int kPmlistFieldNumber = 5;
  const ::CustomerFlow::Interactive::Message::Permission& pmlist(int index) const;
  ::CustomerFlow::Interactive::Message::Permission* mutable_pmlist(int index);
  ::CustomerFlow::Interactive::Message::Permission* add_pmlist();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Permission >*
      mutable_pmlist();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Permission >&
      pmlist() const;

  // string strRoleID = 1;
  void clear_strroleid();
  static const int kStrRoleIDFieldNumber = 1;
  const ::std::string& strroleid() const;
  void set_strroleid(const ::std::string& value);
  #if LANG_CXX11
  void set_strroleid(::std::string&& value);
  #endif
  void set_strroleid(const char* value);
  void set_strroleid(const char* value, size_t size);
  ::std::string* mutable_strroleid();
  ::std::string* release_strroleid();
  void set_allocated_strroleid(::std::string* strroleid);

  // string strCreateDate = 3;
  void clear_strcreatedate();
  static const int kStrCreateDateFieldNumber = 3;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strUpdateDate = 4;
  void clear_strupdatedate();
  static const int kStrUpdateDateFieldNumber = 4;
  const ::std::string& strupdatedate() const;
  void set_strupdatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strupdatedate(::std::string&& value);
  #endif
  void set_strupdatedate(const char* value);
  void set_strupdatedate(const char* value, size_t size);
  ::std::string* mutable_strupdatedate();
  ::std::string* release_strupdatedate();
  void set_allocated_strupdatedate(::std::string* strupdatedate);

  // uint32 uiState = 2;
  void clear_uistate();
  static const int kUiStateFieldNumber = 2;
  ::google::protobuf::uint32 uistate() const;
  void set_uistate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Role)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Permission > pmlist_;
  ::google::protobuf::internal::ArenaStringPtr strroleid_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strupdatedate_;
  ::google::protobuf::uint32 uistate_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddRoleReq) */ {
 public:
  AddRoleReq();
  virtual ~AddRoleReq();

  AddRoleReq(const AddRoleReq& from);

  inline AddRoleReq& operator=(const AddRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRoleReq& default_instance();

  static inline const AddRoleReq* internal_default_instance() {
    return reinterpret_cast<const AddRoleReq*>(
               &_AddRoleReq_default_instance_);
  }

  void Swap(AddRoleReq* other);

  // implements Message ----------------------------------------------

  inline AddRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRoleReq& from);
  void MergeFrom(const AddRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strRoleIDNew = 2;
  void clear_strroleidnew();
  static const int kStrRoleIDNewFieldNumber = 2;
  const ::std::string& strroleidnew() const;
  void set_strroleidnew(const ::std::string& value);
  #if LANG_CXX11
  void set_strroleidnew(::std::string&& value);
  #endif
  void set_strroleidnew(const char* value);
  void set_strroleidnew(const char* value, size_t size);
  ::std::string* mutable_strroleidnew();
  ::std::string* release_strroleidnew();
  void set_allocated_strroleidnew(::std::string* strroleidnew);

  // string strRoleIDOld = 3;
  void clear_strroleidold();
  static const int kStrRoleIDOldFieldNumber = 3;
  const ::std::string& strroleidold() const;
  void set_strroleidold(const ::std::string& value);
  #if LANG_CXX11
  void set_strroleidold(::std::string&& value);
  #endif
  void set_strroleidold(const char* value);
  void set_strroleidold(const char* value, size_t size);
  ::std::string* mutable_strroleidold();
  ::std::string* release_strroleidold();
  void set_allocated_strroleidold(::std::string* strroleidold);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strroleidnew_;
  ::google::protobuf::internal::ArenaStringPtr strroleidold_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.AddRoleRsp) */ {
 public:
  AddRoleRsp();
  virtual ~AddRoleRsp();

  AddRoleRsp(const AddRoleRsp& from);

  inline AddRoleRsp& operator=(const AddRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRoleRsp& default_instance();

  static inline const AddRoleRsp* internal_default_instance() {
    return reinterpret_cast<const AddRoleRsp*>(
               &_AddRoleRsp_default_instance_);
  }

  void Swap(AddRoleRsp* other);

  // implements Message ----------------------------------------------

  inline AddRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRoleRsp& from);
  void MergeFrom(const AddRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.AddRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemoveRoleReq) */ {
 public:
  RemoveRoleReq();
  virtual ~RemoveRoleReq();

  RemoveRoleReq(const RemoveRoleReq& from);

  inline RemoveRoleReq& operator=(const RemoveRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRoleReq& default_instance();

  static inline const RemoveRoleReq* internal_default_instance() {
    return reinterpret_cast<const RemoveRoleReq*>(
               &_RemoveRoleReq_default_instance_);
  }

  void Swap(RemoveRoleReq* other);

  // implements Message ----------------------------------------------

  inline RemoveRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveRoleReq& from);
  void MergeFrom(const RemoveRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 2;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 2;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strRoleID = 3;
  void clear_strroleid();
  static const int kStrRoleIDFieldNumber = 3;
  const ::std::string& strroleid() const;
  void set_strroleid(const ::std::string& value);
  #if LANG_CXX11
  void set_strroleid(::std::string&& value);
  #endif
  void set_strroleid(const char* value);
  void set_strroleid(const char* value, size_t size);
  ::std::string* mutable_strroleid();
  ::std::string* release_strroleid();
  void set_allocated_strroleid(::std::string* strroleid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemoveRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strroleid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.RemoveRoleRsp) */ {
 public:
  RemoveRoleRsp();
  virtual ~RemoveRoleRsp();

  RemoveRoleRsp(const RemoveRoleRsp& from);

  inline RemoveRoleRsp& operator=(const RemoveRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRoleRsp& default_instance();

  static inline const RemoveRoleRsp* internal_default_instance() {
    return reinterpret_cast<const RemoveRoleRsp*>(
               &_RemoveRoleRsp_default_instance_);
  }

  void Swap(RemoveRoleRsp* other);

  // implements Message ----------------------------------------------

  inline RemoveRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveRoleRsp& from);
  void MergeFrom(const RemoveRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.RemoveRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyRoleReq) */ {
 public:
  ModifyRoleReq();
  virtual ~ModifyRoleReq();

  ModifyRoleReq(const ModifyRoleReq& from);

  inline ModifyRoleReq& operator=(const ModifyRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyRoleReq& default_instance();

  static inline const ModifyRoleReq* internal_default_instance() {
    return reinterpret_cast<const ModifyRoleReq*>(
               &_ModifyRoleReq_default_instance_);
  }

  void Swap(ModifyRoleReq* other);

  // implements Message ----------------------------------------------

  inline ModifyRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyRoleReq& from);
  void MergeFrom(const ModifyRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .CustomerFlow.Interactive.Message.Role role = 2;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 2;
  const ::CustomerFlow::Interactive::Message::Role& role() const;
  ::CustomerFlow::Interactive::Message::Role* mutable_role();
  ::CustomerFlow::Interactive::Message::Role* release_role();
  void set_allocated_role(::CustomerFlow::Interactive::Message::Role* role);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::CustomerFlow::Interactive::Message::Role* role_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.ModifyRoleRsp) */ {
 public:
  ModifyRoleRsp();
  virtual ~ModifyRoleRsp();

  ModifyRoleRsp(const ModifyRoleRsp& from);

  inline ModifyRoleRsp& operator=(const ModifyRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyRoleRsp& default_instance();

  static inline const ModifyRoleRsp* internal_default_instance() {
    return reinterpret_cast<const ModifyRoleRsp*>(
               &_ModifyRoleRsp_default_instance_);
  }

  void Swap(ModifyRoleRsp* other);

  // implements Message ----------------------------------------------

  inline ModifyRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyRoleRsp& from);
  void MergeFrom(const ModifyRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.ModifyRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryRoleReq) */ {
 public:
  QueryRoleReq();
  virtual ~QueryRoleReq();

  QueryRoleReq(const QueryRoleReq& from);

  inline QueryRoleReq& operator=(const QueryRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRoleReq& default_instance();

  static inline const QueryRoleReq* internal_default_instance() {
    return reinterpret_cast<const QueryRoleReq*>(
               &_QueryRoleReq_default_instance_);
  }

  void Swap(QueryRoleReq* other);

  // implements Message ----------------------------------------------

  inline QueryRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRoleReq& from);
  void MergeFrom(const QueryRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strRoleID = 2;
  void clear_strroleid();
  static const int kStrRoleIDFieldNumber = 2;
  const ::std::string& strroleid() const;
  void set_strroleid(const ::std::string& value);
  #if LANG_CXX11
  void set_strroleid(::std::string&& value);
  #endif
  void set_strroleid(const char* value);
  void set_strroleid(const char* value, size_t size);
  ::std::string* mutable_strroleid();
  ::std::string* release_strroleid();
  void set_allocated_strroleid(::std::string* strroleid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strroleid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryRoleRsp) */ {
 public:
  QueryRoleRsp();
  virtual ~QueryRoleRsp();

  QueryRoleRsp(const QueryRoleRsp& from);

  inline QueryRoleRsp& operator=(const QueryRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRoleRsp& default_instance();

  static inline const QueryRoleRsp* internal_default_instance() {
    return reinterpret_cast<const QueryRoleRsp*>(
               &_QueryRoleRsp_default_instance_);
  }

  void Swap(QueryRoleRsp* other);

  // implements Message ----------------------------------------------

  inline QueryRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRoleRsp& from);
  void MergeFrom(const QueryRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.Role role = 1;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Role& role() const;
  ::CustomerFlow::Interactive::Message::Role* mutable_role();
  ::CustomerFlow::Interactive::Message::Role* release_role();
  void set_allocated_role(::CustomerFlow::Interactive::Message::Role* role);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::Role* role_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllRoleReq) */ {
 public:
  QueryAllRoleReq();
  virtual ~QueryAllRoleReq();

  QueryAllRoleReq(const QueryAllRoleReq& from);

  inline QueryAllRoleReq& operator=(const QueryAllRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllRoleReq& default_instance();

  static inline const QueryAllRoleReq* internal_default_instance() {
    return reinterpret_cast<const QueryAllRoleReq*>(
               &_QueryAllRoleReq_default_instance_);
  }

  void Swap(QueryAllRoleReq* other);

  // implements Message ----------------------------------------------

  inline QueryAllRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllRoleReq& from);
  void MergeFrom(const QueryAllRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAllRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.QueryAllRoleRsp) */ {
 public:
  QueryAllRoleRsp();
  virtual ~QueryAllRoleRsp();

  QueryAllRoleRsp(const QueryAllRoleRsp& from);

  inline QueryAllRoleRsp& operator=(const QueryAllRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllRoleRsp& default_instance();

  static inline const QueryAllRoleRsp* internal_default_instance() {
    return reinterpret_cast<const QueryAllRoleRsp*>(
               &_QueryAllRoleRsp_default_instance_);
  }

  void Swap(QueryAllRoleRsp* other);

  // implements Message ----------------------------------------------

  inline QueryAllRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAllRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAllRoleRsp& from);
  void MergeFrom(const QueryAllRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAllRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CustomerFlow.Interactive.Message.Role rolelist = 1;
  int rolelist_size() const;
  void clear_rolelist();
  static const int kRolelistFieldNumber = 1;
  const ::CustomerFlow::Interactive::Message::Role& rolelist(int index) const;
  ::CustomerFlow::Interactive::Message::Role* mutable_rolelist(int index);
  ::CustomerFlow::Interactive::Message::Role* add_rolelist();
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Role >*
      mutable_rolelist();
  const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Role >&
      rolelist() const;

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.QueryAllRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Role > rolelist_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserBindRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserBindRoleReq) */ {
 public:
  UserBindRoleReq();
  virtual ~UserBindRoleReq();

  UserBindRoleReq(const UserBindRoleReq& from);

  inline UserBindRoleReq& operator=(const UserBindRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBindRoleReq& default_instance();

  static inline const UserBindRoleReq* internal_default_instance() {
    return reinterpret_cast<const UserBindRoleReq*>(
               &_UserBindRoleReq_default_instance_);
  }

  void Swap(UserBindRoleReq* other);

  // implements Message ----------------------------------------------

  inline UserBindRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserBindRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserBindRoleReq& from);
  void MergeFrom(const UserBindRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserBindRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strRoleID = 2;
  void clear_strroleid();
  static const int kStrRoleIDFieldNumber = 2;
  const ::std::string& strroleid() const;
  void set_strroleid(const ::std::string& value);
  #if LANG_CXX11
  void set_strroleid(::std::string&& value);
  #endif
  void set_strroleid(const char* value);
  void set_strroleid(const char* value, size_t size);
  ::std::string* mutable_strroleid();
  ::std::string* release_strroleid();
  void set_allocated_strroleid(::std::string* strroleid);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserBindRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strroleid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserBindRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.UserBindRoleRsp) */ {
 public:
  UserBindRoleRsp();
  virtual ~UserBindRoleRsp();

  UserBindRoleRsp(const UserBindRoleRsp& from);

  inline UserBindRoleRsp& operator=(const UserBindRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBindRoleRsp& default_instance();

  static inline const UserBindRoleRsp* internal_default_instance() {
    return reinterpret_cast<const UserBindRoleRsp*>(
               &_UserBindRoleRsp_default_instance_);
  }

  void Swap(UserBindRoleRsp* other);

  // implements Message ----------------------------------------------

  inline UserBindRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UserBindRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserBindRoleRsp& from);
  void MergeFrom(const UserBindRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserBindRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.UserBindRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq CustomerFlowPreHandleReq_Value = 10;
  bool has_customerflowprehandlereq_value() const;
  void clear_customerflowprehandlereq_value();
  static const int kCustomerFlowPreHandleReqValueFieldNumber = 10;
  const ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq& customerflowprehandlereq_value() const;
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* mutable_customerflowprehandlereq_value();
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* release_customerflowprehandlereq_value();
  void set_allocated_customerflowprehandlereq_value(::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* customerflowprehandlereq_value);

  // .CustomerFlow.Interactive.Message.ShakehandReq ShakehandReq_Value = 50;
  bool has_shakehandreq_value() const;
  void clear_shakehandreq_value();
  static const int kShakehandReqValueFieldNumber = 50;
  const ::CustomerFlow::Interactive::Message::ShakehandReq& shakehandreq_value() const;
  ::CustomerFlow::Interactive::Message::ShakehandReq* mutable_shakehandreq_value();
  ::CustomerFlow::Interactive::Message::ShakehandReq* release_shakehandreq_value();
  void set_allocated_shakehandreq_value(::CustomerFlow::Interactive::Message::ShakehandReq* shakehandreq_value);

  // .CustomerFlow.Interactive.Message.AddGroupReq AddGroupReq_Value = 100;
  bool has_addgroupreq_value() const;
  void clear_addgroupreq_value();
  static const int kAddGroupReqValueFieldNumber = 100;
  const ::CustomerFlow::Interactive::Message::AddGroupReq& addgroupreq_value() const;
  ::CustomerFlow::Interactive::Message::AddGroupReq* mutable_addgroupreq_value();
  ::CustomerFlow::Interactive::Message::AddGroupReq* release_addgroupreq_value();
  void set_allocated_addgroupreq_value(::CustomerFlow::Interactive::Message::AddGroupReq* addgroupreq_value);

  // .CustomerFlow.Interactive.Message.DeleteGroupReq DeleteGroupReq_Value = 110;
  bool has_deletegroupreq_value() const;
  void clear_deletegroupreq_value();
  static const int kDeleteGroupReqValueFieldNumber = 110;
  const ::CustomerFlow::Interactive::Message::DeleteGroupReq& deletegroupreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteGroupReq* mutable_deletegroupreq_value();
  ::CustomerFlow::Interactive::Message::DeleteGroupReq* release_deletegroupreq_value();
  void set_allocated_deletegroupreq_value(::CustomerFlow::Interactive::Message::DeleteGroupReq* deletegroupreq_value);

  // .CustomerFlow.Interactive.Message.ModifyGroupReq ModifyGroupReq_Value = 120;
  bool has_modifygroupreq_value() const;
  void clear_modifygroupreq_value();
  static const int kModifyGroupReqValueFieldNumber = 120;
  const ::CustomerFlow::Interactive::Message::ModifyGroupReq& modifygroupreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyGroupReq* mutable_modifygroupreq_value();
  ::CustomerFlow::Interactive::Message::ModifyGroupReq* release_modifygroupreq_value();
  void set_allocated_modifygroupreq_value(::CustomerFlow::Interactive::Message::ModifyGroupReq* modifygroupreq_value);

  // .CustomerFlow.Interactive.Message.QueryGroupInfoReq QueryGroupInfoReq_Value = 130;
  bool has_querygroupinforeq_value() const;
  void clear_querygroupinforeq_value();
  static const int kQueryGroupInfoReqValueFieldNumber = 130;
  const ::CustomerFlow::Interactive::Message::QueryGroupInfoReq& querygroupinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryGroupInfoReq* mutable_querygroupinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryGroupInfoReq* release_querygroupinforeq_value();
  void set_allocated_querygroupinforeq_value(::CustomerFlow::Interactive::Message::QueryGroupInfoReq* querygroupinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllGroupReq QueryAllGroupReq_Value = 140;
  bool has_queryallgroupreq_value() const;
  void clear_queryallgroupreq_value();
  static const int kQueryAllGroupReqValueFieldNumber = 140;
  const ::CustomerFlow::Interactive::Message::QueryAllGroupReq& queryallgroupreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllGroupReq* mutable_queryallgroupreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllGroupReq* release_queryallgroupreq_value();
  void set_allocated_queryallgroupreq_value(::CustomerFlow::Interactive::Message::QueryAllGroupReq* queryallgroupreq_value);

  // .CustomerFlow.Interactive.Message.AddStoreReq AddStoreReq_Value = 150;
  bool has_addstorereq_value() const;
  void clear_addstorereq_value();
  static const int kAddStoreReqValueFieldNumber = 150;
  const ::CustomerFlow::Interactive::Message::AddStoreReq& addstorereq_value() const;
  ::CustomerFlow::Interactive::Message::AddStoreReq* mutable_addstorereq_value();
  ::CustomerFlow::Interactive::Message::AddStoreReq* release_addstorereq_value();
  void set_allocated_addstorereq_value(::CustomerFlow::Interactive::Message::AddStoreReq* addstorereq_value);

  // .CustomerFlow.Interactive.Message.DeleteStoreReq DeleteStoreReq_Value = 160;
  bool has_deletestorereq_value() const;
  void clear_deletestorereq_value();
  static const int kDeleteStoreReqValueFieldNumber = 160;
  const ::CustomerFlow::Interactive::Message::DeleteStoreReq& deletestorereq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteStoreReq* mutable_deletestorereq_value();
  ::CustomerFlow::Interactive::Message::DeleteStoreReq* release_deletestorereq_value();
  void set_allocated_deletestorereq_value(::CustomerFlow::Interactive::Message::DeleteStoreReq* deletestorereq_value);

  // .CustomerFlow.Interactive.Message.ModifyStoreReq ModifyStoreReq_Value = 170;
  bool has_modifystorereq_value() const;
  void clear_modifystorereq_value();
  static const int kModifyStoreReqValueFieldNumber = 170;
  const ::CustomerFlow::Interactive::Message::ModifyStoreReq& modifystorereq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyStoreReq* mutable_modifystorereq_value();
  ::CustomerFlow::Interactive::Message::ModifyStoreReq* release_modifystorereq_value();
  void set_allocated_modifystorereq_value(::CustomerFlow::Interactive::Message::ModifyStoreReq* modifystorereq_value);

  // .CustomerFlow.Interactive.Message.QueryStoreInfoReq QueryStoreInfoReq_Value = 180;
  bool has_querystoreinforeq_value() const;
  void clear_querystoreinforeq_value();
  static const int kQueryStoreInfoReqValueFieldNumber = 180;
  const ::CustomerFlow::Interactive::Message::QueryStoreInfoReq& querystoreinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreInfoReq* mutable_querystoreinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryStoreInfoReq* release_querystoreinforeq_value();
  void set_allocated_querystoreinforeq_value(::CustomerFlow::Interactive::Message::QueryStoreInfoReq* querystoreinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllStoreReq QueryAllStoreReq_Value = 190;
  bool has_queryallstorereq_value() const;
  void clear_queryallstorereq_value();
  static const int kQueryAllStoreReqValueFieldNumber = 190;
  const ::CustomerFlow::Interactive::Message::QueryAllStoreReq& queryallstorereq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllStoreReq* mutable_queryallstorereq_value();
  ::CustomerFlow::Interactive::Message::QueryAllStoreReq* release_queryallstorereq_value();
  void set_allocated_queryallstorereq_value(::CustomerFlow::Interactive::Message::QueryAllStoreReq* queryallstorereq_value);

  // .CustomerFlow.Interactive.Message.AddEntranceReq AddEntranceReq_Value = 200;
  bool has_addentrancereq_value() const;
  void clear_addentrancereq_value();
  static const int kAddEntranceReqValueFieldNumber = 200;
  const ::CustomerFlow::Interactive::Message::AddEntranceReq& addentrancereq_value() const;
  ::CustomerFlow::Interactive::Message::AddEntranceReq* mutable_addentrancereq_value();
  ::CustomerFlow::Interactive::Message::AddEntranceReq* release_addentrancereq_value();
  void set_allocated_addentrancereq_value(::CustomerFlow::Interactive::Message::AddEntranceReq* addentrancereq_value);

  // .CustomerFlow.Interactive.Message.DeleteEntranceReq DeleteEntranceReq_Value = 210;
  bool has_deleteentrancereq_value() const;
  void clear_deleteentrancereq_value();
  static const int kDeleteEntranceReqValueFieldNumber = 210;
  const ::CustomerFlow::Interactive::Message::DeleteEntranceReq& deleteentrancereq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEntranceReq* mutable_deleteentrancereq_value();
  ::CustomerFlow::Interactive::Message::DeleteEntranceReq* release_deleteentrancereq_value();
  void set_allocated_deleteentrancereq_value(::CustomerFlow::Interactive::Message::DeleteEntranceReq* deleteentrancereq_value);

  // .CustomerFlow.Interactive.Message.ModifyEntranceReq ModifyEntranceReq_Value = 220;
  bool has_modifyentrancereq_value() const;
  void clear_modifyentrancereq_value();
  static const int kModifyEntranceReqValueFieldNumber = 220;
  const ::CustomerFlow::Interactive::Message::ModifyEntranceReq& modifyentrancereq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyEntranceReq* mutable_modifyentrancereq_value();
  ::CustomerFlow::Interactive::Message::ModifyEntranceReq* release_modifyentrancereq_value();
  void set_allocated_modifyentrancereq_value(::CustomerFlow::Interactive::Message::ModifyEntranceReq* modifyentrancereq_value);

  // .CustomerFlow.Interactive.Message.AddEntranceDeviceReq AddEntranceDeviceReq_Value = 230;
  bool has_addentrancedevicereq_value() const;
  void clear_addentrancedevicereq_value();
  static const int kAddEntranceDeviceReqValueFieldNumber = 230;
  const ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq& addentrancedevicereq_value() const;
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* mutable_addentrancedevicereq_value();
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* release_addentrancedevicereq_value();
  void set_allocated_addentrancedevicereq_value(::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* addentrancedevicereq_value);

  // .CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq DeleteEntranceDeviceReq_Value = 240;
  bool has_deleteentrancedevicereq_value() const;
  void clear_deleteentrancedevicereq_value();
  static const int kDeleteEntranceDeviceReqValueFieldNumber = 240;
  const ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq& deleteentrancedevicereq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* mutable_deleteentrancedevicereq_value();
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* release_deleteentrancedevicereq_value();
  void set_allocated_deleteentrancedevicereq_value(::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* deleteentrancedevicereq_value);

  // .CustomerFlow.Interactive.Message.AddEventReq AddEventReq_Value = 300;
  bool has_addeventreq_value() const;
  void clear_addeventreq_value();
  static const int kAddEventReqValueFieldNumber = 300;
  const ::CustomerFlow::Interactive::Message::AddEventReq& addeventreq_value() const;
  ::CustomerFlow::Interactive::Message::AddEventReq* mutable_addeventreq_value();
  ::CustomerFlow::Interactive::Message::AddEventReq* release_addeventreq_value();
  void set_allocated_addeventreq_value(::CustomerFlow::Interactive::Message::AddEventReq* addeventreq_value);

  // .CustomerFlow.Interactive.Message.DeleteEventReq DeleteEventReq_Value = 310;
  bool has_deleteeventreq_value() const;
  void clear_deleteeventreq_value();
  static const int kDeleteEventReqValueFieldNumber = 310;
  const ::CustomerFlow::Interactive::Message::DeleteEventReq& deleteeventreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEventReq* mutable_deleteeventreq_value();
  ::CustomerFlow::Interactive::Message::DeleteEventReq* release_deleteeventreq_value();
  void set_allocated_deleteeventreq_value(::CustomerFlow::Interactive::Message::DeleteEventReq* deleteeventreq_value);

  // .CustomerFlow.Interactive.Message.ModifyEventReq ModifyEventReq_Value = 320;
  bool has_modifyeventreq_value() const;
  void clear_modifyeventreq_value();
  static const int kModifyEventReqValueFieldNumber = 320;
  const ::CustomerFlow::Interactive::Message::ModifyEventReq& modifyeventreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyEventReq* mutable_modifyeventreq_value();
  ::CustomerFlow::Interactive::Message::ModifyEventReq* release_modifyeventreq_value();
  void set_allocated_modifyeventreq_value(::CustomerFlow::Interactive::Message::ModifyEventReq* modifyeventreq_value);

  // .CustomerFlow.Interactive.Message.QueryEventInfoReq QueryEventInfoReq_Value = 330;
  bool has_queryeventinforeq_value() const;
  void clear_queryeventinforeq_value();
  static const int kQueryEventInfoReqValueFieldNumber = 330;
  const ::CustomerFlow::Interactive::Message::QueryEventInfoReq& queryeventinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryEventInfoReq* mutable_queryeventinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryEventInfoReq* release_queryeventinforeq_value();
  void set_allocated_queryeventinforeq_value(::CustomerFlow::Interactive::Message::QueryEventInfoReq* queryeventinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllEventReq QueryAllEventReq_Value = 340;
  bool has_queryalleventreq_value() const;
  void clear_queryalleventreq_value();
  static const int kQueryAllEventReqValueFieldNumber = 340;
  const ::CustomerFlow::Interactive::Message::QueryAllEventReq& queryalleventreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllEventReq* mutable_queryalleventreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllEventReq* release_queryalleventreq_value();
  void set_allocated_queryalleventreq_value(::CustomerFlow::Interactive::Message::QueryAllEventReq* queryalleventreq_value);

  // .CustomerFlow.Interactive.Message.AddSmartGuardStoreReq AddSmartGuardStoreReq_Value = 350;
  bool has_addsmartguardstorereq_value() const;
  void clear_addsmartguardstorereq_value();
  static const int kAddSmartGuardStoreReqValueFieldNumber = 350;
  const ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq& addsmartguardstorereq_value() const;
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* mutable_addsmartguardstorereq_value();
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* release_addsmartguardstorereq_value();
  void set_allocated_addsmartguardstorereq_value(::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* addsmartguardstorereq_value);

  // .CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq DeleteSmartGuardStoreReq_Value = 360;
  bool has_deletesmartguardstorereq_value() const;
  void clear_deletesmartguardstorereq_value();
  static const int kDeleteSmartGuardStoreReqValueFieldNumber = 360;
  const ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq& deletesmartguardstorereq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* mutable_deletesmartguardstorereq_value();
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* release_deletesmartguardstorereq_value();
  void set_allocated_deletesmartguardstorereq_value(::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* deletesmartguardstorereq_value);

  // .CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq ModifySmartGuardStoreReq_Value = 370;
  bool has_modifysmartguardstorereq_value() const;
  void clear_modifysmartguardstorereq_value();
  static const int kModifySmartGuardStoreReqValueFieldNumber = 370;
  const ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq& modifysmartguardstorereq_value() const;
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* mutable_modifysmartguardstorereq_value();
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* release_modifysmartguardstorereq_value();
  void set_allocated_modifysmartguardstorereq_value(::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* modifysmartguardstorereq_value);

  // .CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq QuerySmartGuardStoreInfoReq_Value = 380;
  bool has_querysmartguardstoreinforeq_value() const;
  void clear_querysmartguardstoreinforeq_value();
  static const int kQuerySmartGuardStoreInfoReqValueFieldNumber = 380;
  const ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq& querysmartguardstoreinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* mutable_querysmartguardstoreinforeq_value();
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* release_querysmartguardstoreinforeq_value();
  void set_allocated_querysmartguardstoreinforeq_value(::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* querysmartguardstoreinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq QueryAllSmartGuardStoreReq_Value = 390;
  bool has_queryallsmartguardstorereq_value() const;
  void clear_queryallsmartguardstorereq_value();
  static const int kQueryAllSmartGuardStoreReqValueFieldNumber = 390;
  const ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq& queryallsmartguardstorereq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* mutable_queryallsmartguardstorereq_value();
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* release_queryallsmartguardstorereq_value();
  void set_allocated_queryallsmartguardstorereq_value(::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* queryallsmartguardstorereq_value);

  // .CustomerFlow.Interactive.Message.AddRegularPatrolReq AddRegularPatrolReq_Value = 400;
  bool has_addregularpatrolreq_value() const;
  void clear_addregularpatrolreq_value();
  static const int kAddRegularPatrolReqValueFieldNumber = 400;
  const ::CustomerFlow::Interactive::Message::AddRegularPatrolReq& addregularpatrolreq_value() const;
  ::CustomerFlow::Interactive::Message::AddRegularPatrolReq* mutable_addregularpatrolreq_value();
  ::CustomerFlow::Interactive::Message::AddRegularPatrolReq* release_addregularpatrolreq_value();
  void set_allocated_addregularpatrolreq_value(::CustomerFlow::Interactive::Message::AddRegularPatrolReq* addregularpatrolreq_value);

  // .CustomerFlow.Interactive.Message.DeleteRegularPatrolReq DeleteRegularPatrolReq_Value = 410;
  bool has_deleteregularpatrolreq_value() const;
  void clear_deleteregularpatrolreq_value();
  static const int kDeleteRegularPatrolReqValueFieldNumber = 410;
  const ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq& deleteregularpatrolreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* mutable_deleteregularpatrolreq_value();
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* release_deleteregularpatrolreq_value();
  void set_allocated_deleteregularpatrolreq_value(::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* deleteregularpatrolreq_value);

  // .CustomerFlow.Interactive.Message.ModifyRegularPatrolReq ModifyRegularPatrolReq_Value = 420;
  bool has_modifyregularpatrolreq_value() const;
  void clear_modifyregularpatrolreq_value();
  static const int kModifyRegularPatrolReqValueFieldNumber = 420;
  const ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq& modifyregularpatrolreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* mutable_modifyregularpatrolreq_value();
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* release_modifyregularpatrolreq_value();
  void set_allocated_modifyregularpatrolreq_value(::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* modifyregularpatrolreq_value);

  // .CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq QueryRegularPatrolInfoReq_Value = 430;
  bool has_queryregularpatrolinforeq_value() const;
  void clear_queryregularpatrolinforeq_value();
  static const int kQueryRegularPatrolInfoReqValueFieldNumber = 430;
  const ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq& queryregularpatrolinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* mutable_queryregularpatrolinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* release_queryregularpatrolinforeq_value();
  void set_allocated_queryregularpatrolinforeq_value(::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* queryregularpatrolinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq QueryAllRegularPatrolReq_Value = 440;
  bool has_queryallregularpatrolreq_value() const;
  void clear_queryallregularpatrolreq_value();
  static const int kQueryAllRegularPatrolReqValueFieldNumber = 440;
  const ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq& queryallregularpatrolreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* mutable_queryallregularpatrolreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* release_queryallregularpatrolreq_value();
  void set_allocated_queryallregularpatrolreq_value(::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* queryallregularpatrolreq_value);

  // .CustomerFlow.Interactive.Message.UserJoinStoreReq UserJoinStoreReq_Value = 500;
  bool has_userjoinstorereq_value() const;
  void clear_userjoinstorereq_value();
  static const int kUserJoinStoreReqValueFieldNumber = 500;
  const ::CustomerFlow::Interactive::Message::UserJoinStoreReq& userjoinstorereq_value() const;
  ::CustomerFlow::Interactive::Message::UserJoinStoreReq* mutable_userjoinstorereq_value();
  ::CustomerFlow::Interactive::Message::UserJoinStoreReq* release_userjoinstorereq_value();
  void set_allocated_userjoinstorereq_value(::CustomerFlow::Interactive::Message::UserJoinStoreReq* userjoinstorereq_value);

  // .CustomerFlow.Interactive.Message.UserQuitStoreReq UserQuitStoreReq_Value = 510;
  bool has_userquitstorereq_value() const;
  void clear_userquitstorereq_value();
  static const int kUserQuitStoreReqValueFieldNumber = 510;
  const ::CustomerFlow::Interactive::Message::UserQuitStoreReq& userquitstorereq_value() const;
  ::CustomerFlow::Interactive::Message::UserQuitStoreReq* mutable_userquitstorereq_value();
  ::CustomerFlow::Interactive::Message::UserQuitStoreReq* release_userquitstorereq_value();
  void set_allocated_userquitstorereq_value(::CustomerFlow::Interactive::Message::UserQuitStoreReq* userquitstorereq_value);

  // .CustomerFlow.Interactive.Message.QueryStoreAllUserReq QueryStoreAllUserReq_Value = 520;
  bool has_querystorealluserreq_value() const;
  void clear_querystorealluserreq_value();
  static const int kQueryStoreAllUserReqValueFieldNumber = 520;
  const ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq& querystorealluserreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* mutable_querystorealluserreq_value();
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* release_querystorealluserreq_value();
  void set_allocated_querystorealluserreq_value(::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* querystorealluserreq_value);

  // .CustomerFlow.Interactive.Message.QueryCompanyAllUserReq QueryCompanyAllUserReq_Value = 530;
  bool has_querycompanyalluserreq_value() const;
  void clear_querycompanyalluserreq_value();
  static const int kQueryCompanyAllUserReqValueFieldNumber = 530;
  const ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq& querycompanyalluserreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* mutable_querycompanyalluserreq_value();
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* release_querycompanyalluserreq_value();
  void set_allocated_querycompanyalluserreq_value(::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* querycompanyalluserreq_value);

  // .CustomerFlow.Interactive.Message.AddVIPCustomerReq AddVIPCustomerReq_Value = 800;
  bool has_addvipcustomerreq_value() const;
  void clear_addvipcustomerreq_value();
  static const int kAddVIPCustomerReqValueFieldNumber = 800;
  const ::CustomerFlow::Interactive::Message::AddVIPCustomerReq& addvipcustomerreq_value() const;
  ::CustomerFlow::Interactive::Message::AddVIPCustomerReq* mutable_addvipcustomerreq_value();
  ::CustomerFlow::Interactive::Message::AddVIPCustomerReq* release_addvipcustomerreq_value();
  void set_allocated_addvipcustomerreq_value(::CustomerFlow::Interactive::Message::AddVIPCustomerReq* addvipcustomerreq_value);

  // .CustomerFlow.Interactive.Message.DeleteVIPCustomerReq DeleteVIPCustomerReq_Value = 810;
  bool has_deletevipcustomerreq_value() const;
  void clear_deletevipcustomerreq_value();
  static const int kDeleteVIPCustomerReqValueFieldNumber = 810;
  const ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq& deletevipcustomerreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* mutable_deletevipcustomerreq_value();
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* release_deletevipcustomerreq_value();
  void set_allocated_deletevipcustomerreq_value(::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* deletevipcustomerreq_value);

  // .CustomerFlow.Interactive.Message.ModifyVIPCustomerReq ModifyVIPCustomerReq_Value = 820;
  bool has_modifyvipcustomerreq_value() const;
  void clear_modifyvipcustomerreq_value();
  static const int kModifyVIPCustomerReqValueFieldNumber = 820;
  const ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq& modifyvipcustomerreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* mutable_modifyvipcustomerreq_value();
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* release_modifyvipcustomerreq_value();
  void set_allocated_modifyvipcustomerreq_value(::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* modifyvipcustomerreq_value);

  // .CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq QueryVIPCustomerInfoReq_Value = 830;
  bool has_queryvipcustomerinforeq_value() const;
  void clear_queryvipcustomerinforeq_value();
  static const int kQueryVIPCustomerInfoReqValueFieldNumber = 830;
  const ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq& queryvipcustomerinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* mutable_queryvipcustomerinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* release_queryvipcustomerinforeq_value();
  void set_allocated_queryvipcustomerinforeq_value(::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* queryvipcustomerinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq QueryAllVIPCustomerReq_Value = 840;
  bool has_queryallvipcustomerreq_value() const;
  void clear_queryallvipcustomerreq_value();
  static const int kQueryAllVIPCustomerReqValueFieldNumber = 840;
  const ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq& queryallvipcustomerreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* mutable_queryallvipcustomerreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* release_queryallvipcustomerreq_value();
  void set_allocated_queryallvipcustomerreq_value(::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* queryallvipcustomerreq_value);

  // .CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq AddVIPConsumeHistoryReq_Value = 850;
  bool has_addvipconsumehistoryreq_value() const;
  void clear_addvipconsumehistoryreq_value();
  static const int kAddVIPConsumeHistoryReqValueFieldNumber = 850;
  const ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq& addvipconsumehistoryreq_value() const;
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* mutable_addvipconsumehistoryreq_value();
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* release_addvipconsumehistoryreq_value();
  void set_allocated_addvipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* addvipconsumehistoryreq_value);

  // .CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq DeleteVIPConsumeHistoryReq_Value = 860;
  bool has_deletevipconsumehistoryreq_value() const;
  void clear_deletevipconsumehistoryreq_value();
  static const int kDeleteVIPConsumeHistoryReqValueFieldNumber = 860;
  const ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq& deletevipconsumehistoryreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* mutable_deletevipconsumehistoryreq_value();
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* release_deletevipconsumehistoryreq_value();
  void set_allocated_deletevipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* deletevipconsumehistoryreq_value);

  // .CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq ModifyVIPConsumeHistoryReq_Value = 870;
  bool has_modifyvipconsumehistoryreq_value() const;
  void clear_modifyvipconsumehistoryreq_value();
  static const int kModifyVIPConsumeHistoryReqValueFieldNumber = 870;
  const ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq& modifyvipconsumehistoryreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* mutable_modifyvipconsumehistoryreq_value();
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* release_modifyvipconsumehistoryreq_value();
  void set_allocated_modifyvipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* modifyvipconsumehistoryreq_value);

  // .CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq QueryAllVIPConsumeHistoryReq_Value = 880;
  bool has_queryallvipconsumehistoryreq_value() const;
  void clear_queryallvipconsumehistoryreq_value();
  static const int kQueryAllVIPConsumeHistoryReqValueFieldNumber = 880;
  const ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq& queryallvipconsumehistoryreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* mutable_queryallvipconsumehistoryreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* release_queryallvipconsumehistoryreq_value();
  void set_allocated_queryallvipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* queryallvipconsumehistoryreq_value);

  // .CustomerFlow.Interactive.Message.AddEvaluationTemplateReq AddEvaluationTemplateReq_Value = 900;
  bool has_addevaluationtemplatereq_value() const;
  void clear_addevaluationtemplatereq_value();
  static const int kAddEvaluationTemplateReqValueFieldNumber = 900;
  const ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq& addevaluationtemplatereq_value() const;
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* mutable_addevaluationtemplatereq_value();
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* release_addevaluationtemplatereq_value();
  void set_allocated_addevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* addevaluationtemplatereq_value);

  // .CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq DeleteEvaluationTemplateReq_Value = 910;
  bool has_deleteevaluationtemplatereq_value() const;
  void clear_deleteevaluationtemplatereq_value();
  static const int kDeleteEvaluationTemplateReqValueFieldNumber = 910;
  const ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq& deleteevaluationtemplatereq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* mutable_deleteevaluationtemplatereq_value();
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* release_deleteevaluationtemplatereq_value();
  void set_allocated_deleteevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* deleteevaluationtemplatereq_value);

  // .CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq ModifyEvaluationTemplateReq_Value = 920;
  bool has_modifyevaluationtemplatereq_value() const;
  void clear_modifyevaluationtemplatereq_value();
  static const int kModifyEvaluationTemplateReqValueFieldNumber = 920;
  const ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq& modifyevaluationtemplatereq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* mutable_modifyevaluationtemplatereq_value();
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* release_modifyevaluationtemplatereq_value();
  void set_allocated_modifyevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* modifyevaluationtemplatereq_value);

  // .CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq QueryAllEvaluationTemplateReq_Value = 930;
  bool has_queryallevaluationtemplatereq_value() const;
  void clear_queryallevaluationtemplatereq_value();
  static const int kQueryAllEvaluationTemplateReqValueFieldNumber = 930;
  const ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq& queryallevaluationtemplatereq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* mutable_queryallevaluationtemplatereq_value();
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* release_queryallevaluationtemplatereq_value();
  void set_allocated_queryallevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* queryallevaluationtemplatereq_value);

  // .CustomerFlow.Interactive.Message.AddStoreEvaluationReq AddStoreEvaluationReq_Value = 950;
  bool has_addstoreevaluationreq_value() const;
  void clear_addstoreevaluationreq_value();
  static const int kAddStoreEvaluationReqValueFieldNumber = 950;
  const ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq& addstoreevaluationreq_value() const;
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* mutable_addstoreevaluationreq_value();
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* release_addstoreevaluationreq_value();
  void set_allocated_addstoreevaluationreq_value(::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* addstoreevaluationreq_value);

  // .CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq DeleteStoreEvaluationReq_Value = 960;
  bool has_deletestoreevaluationreq_value() const;
  void clear_deletestoreevaluationreq_value();
  static const int kDeleteStoreEvaluationReqValueFieldNumber = 960;
  const ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq& deletestoreevaluationreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* mutable_deletestoreevaluationreq_value();
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* release_deletestoreevaluationreq_value();
  void set_allocated_deletestoreevaluationreq_value(::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* deletestoreevaluationreq_value);

  // .CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq ModifyStoreEvaluationReq_Value = 970;
  bool has_modifystoreevaluationreq_value() const;
  void clear_modifystoreevaluationreq_value();
  static const int kModifyStoreEvaluationReqValueFieldNumber = 970;
  const ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq& modifystoreevaluationreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* mutable_modifystoreevaluationreq_value();
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* release_modifystoreevaluationreq_value();
  void set_allocated_modifystoreevaluationreq_value(::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* modifystoreevaluationreq_value);

  // .CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq QueryStoreEvaluationInfoReq_Value = 980;
  bool has_querystoreevaluationinforeq_value() const;
  void clear_querystoreevaluationinforeq_value();
  static const int kQueryStoreEvaluationInfoReqValueFieldNumber = 980;
  const ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq& querystoreevaluationinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* mutable_querystoreevaluationinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* release_querystoreevaluationinforeq_value();
  void set_allocated_querystoreevaluationinforeq_value(::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* querystoreevaluationinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq QueryAllStoreEvaluationReq_Value = 990;
  bool has_queryallstoreevaluationreq_value() const;
  void clear_queryallstoreevaluationreq_value();
  static const int kQueryAllStoreEvaluationReqValueFieldNumber = 990;
  const ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq& queryallstoreevaluationreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* mutable_queryallstoreevaluationreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* release_queryallstoreevaluationreq_value();
  void set_allocated_queryallstoreevaluationreq_value(::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* queryallstoreevaluationreq_value);

  // .CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq AddRemotePatrolStoreReq_Value = 1000;
  bool has_addremotepatrolstorereq_value() const;
  void clear_addremotepatrolstorereq_value();
  static const int kAddRemotePatrolStoreReqValueFieldNumber = 1000;
  const ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq& addremotepatrolstorereq_value() const;
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* mutable_addremotepatrolstorereq_value();
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* release_addremotepatrolstorereq_value();
  void set_allocated_addremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* addremotepatrolstorereq_value);

  // .CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq DeleteRemotePatrolStoreReq_Value = 1010;
  bool has_deleteremotepatrolstorereq_value() const;
  void clear_deleteremotepatrolstorereq_value();
  static const int kDeleteRemotePatrolStoreReqValueFieldNumber = 1010;
  const ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq& deleteremotepatrolstorereq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* mutable_deleteremotepatrolstorereq_value();
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* release_deleteremotepatrolstorereq_value();
  void set_allocated_deleteremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* deleteremotepatrolstorereq_value);

  // .CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq ModifyRemotePatrolStoreReq_Value = 1020;
  bool has_modifyremotepatrolstorereq_value() const;
  void clear_modifyremotepatrolstorereq_value();
  static const int kModifyRemotePatrolStoreReqValueFieldNumber = 1020;
  const ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq& modifyremotepatrolstorereq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* mutable_modifyremotepatrolstorereq_value();
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* release_modifyremotepatrolstorereq_value();
  void set_allocated_modifyremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* modifyremotepatrolstorereq_value);

  // .CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq QueryRemotePatrolStoreInfoReq_Value = 1030;
  bool has_queryremotepatrolstoreinforeq_value() const;
  void clear_queryremotepatrolstoreinforeq_value();
  static const int kQueryRemotePatrolStoreInfoReqValueFieldNumber = 1030;
  const ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq& queryremotepatrolstoreinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* mutable_queryremotepatrolstoreinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* release_queryremotepatrolstoreinforeq_value();
  void set_allocated_queryremotepatrolstoreinforeq_value(::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* queryremotepatrolstoreinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq QueryAllRemotePatrolStoreReq_Value = 1040;
  bool has_queryallremotepatrolstorereq_value() const;
  void clear_queryallremotepatrolstorereq_value();
  static const int kQueryAllRemotePatrolStoreReqValueFieldNumber = 1040;
  const ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq& queryallremotepatrolstorereq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* mutable_queryallremotepatrolstorereq_value();
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* release_queryallremotepatrolstorereq_value();
  void set_allocated_queryallremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* queryallremotepatrolstorereq_value);

  // .CustomerFlow.Interactive.Message.AddAreaReq AddAreaReq_Value = 1100;
  bool has_addareareq_value() const;
  void clear_addareareq_value();
  static const int kAddAreaReqValueFieldNumber = 1100;
  const ::CustomerFlow::Interactive::Message::AddAreaReq& addareareq_value() const;
  ::CustomerFlow::Interactive::Message::AddAreaReq* mutable_addareareq_value();
  ::CustomerFlow::Interactive::Message::AddAreaReq* release_addareareq_value();
  void set_allocated_addareareq_value(::CustomerFlow::Interactive::Message::AddAreaReq* addareareq_value);

  // .CustomerFlow.Interactive.Message.DeleteAreaReq DeleteAreaReq_Value = 1110;
  bool has_deleteareareq_value() const;
  void clear_deleteareareq_value();
  static const int kDeleteAreaReqValueFieldNumber = 1110;
  const ::CustomerFlow::Interactive::Message::DeleteAreaReq& deleteareareq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteAreaReq* mutable_deleteareareq_value();
  ::CustomerFlow::Interactive::Message::DeleteAreaReq* release_deleteareareq_value();
  void set_allocated_deleteareareq_value(::CustomerFlow::Interactive::Message::DeleteAreaReq* deleteareareq_value);

  // .CustomerFlow.Interactive.Message.ModifyAreaReq ModifyAreaReq_Value = 1120;
  bool has_modifyareareq_value() const;
  void clear_modifyareareq_value();
  static const int kModifyAreaReqValueFieldNumber = 1120;
  const ::CustomerFlow::Interactive::Message::ModifyAreaReq& modifyareareq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyAreaReq* mutable_modifyareareq_value();
  ::CustomerFlow::Interactive::Message::ModifyAreaReq* release_modifyareareq_value();
  void set_allocated_modifyareareq_value(::CustomerFlow::Interactive::Message::ModifyAreaReq* modifyareareq_value);

  // .CustomerFlow.Interactive.Message.QueryAreaInfoReq QueryAreaInfoReq_Value = 1130;
  bool has_queryareainforeq_value() const;
  void clear_queryareainforeq_value();
  static const int kQueryAreaInfoReqValueFieldNumber = 1130;
  const ::CustomerFlow::Interactive::Message::QueryAreaInfoReq& queryareainforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAreaInfoReq* mutable_queryareainforeq_value();
  ::CustomerFlow::Interactive::Message::QueryAreaInfoReq* release_queryareainforeq_value();
  void set_allocated_queryareainforeq_value(::CustomerFlow::Interactive::Message::QueryAreaInfoReq* queryareainforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllAreaReq QueryAllAreaReq_Value = 1140;
  bool has_queryallareareq_value() const;
  void clear_queryallareareq_value();
  static const int kQueryAllAreaReqValueFieldNumber = 1140;
  const ::CustomerFlow::Interactive::Message::QueryAllAreaReq& queryallareareq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllAreaReq* mutable_queryallareareq_value();
  ::CustomerFlow::Interactive::Message::QueryAllAreaReq* release_queryallareareq_value();
  void set_allocated_queryallareareq_value(::CustomerFlow::Interactive::Message::QueryAllAreaReq* queryallareareq_value);

  // .CustomerFlow.Interactive.Message.BindPushClientIDReq BindPushClientIDReq_Value = 1150;
  bool has_bindpushclientidreq_value() const;
  void clear_bindpushclientidreq_value();
  static const int kBindPushClientIDReqValueFieldNumber = 1150;
  const ::CustomerFlow::Interactive::Message::BindPushClientIDReq& bindpushclientidreq_value() const;
  ::CustomerFlow::Interactive::Message::BindPushClientIDReq* mutable_bindpushclientidreq_value();
  ::CustomerFlow::Interactive::Message::BindPushClientIDReq* release_bindpushclientidreq_value();
  void set_allocated_bindpushclientidreq_value(::CustomerFlow::Interactive::Message::BindPushClientIDReq* bindpushclientidreq_value);

  // .CustomerFlow.Interactive.Message.UnbindPushClientIDReq UnbindPushClientIDReq_Value = 1160;
  bool has_unbindpushclientidreq_value() const;
  void clear_unbindpushclientidreq_value();
  static const int kUnbindPushClientIDReqValueFieldNumber = 1160;
  const ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq& unbindpushclientidreq_value() const;
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* mutable_unbindpushclientidreq_value();
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* release_unbindpushclientidreq_value();
  void set_allocated_unbindpushclientidreq_value(::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* unbindpushclientidreq_value);

  // .CustomerFlow.Interactive.Message.AddStoreSensorReq AddStoreSensorReq_Value = 1200;
  bool has_addstoresensorreq_value() const;
  void clear_addstoresensorreq_value();
  static const int kAddStoreSensorReqValueFieldNumber = 1200;
  const ::CustomerFlow::Interactive::Message::AddStoreSensorReq& addstoresensorreq_value() const;
  ::CustomerFlow::Interactive::Message::AddStoreSensorReq* mutable_addstoresensorreq_value();
  ::CustomerFlow::Interactive::Message::AddStoreSensorReq* release_addstoresensorreq_value();
  void set_allocated_addstoresensorreq_value(::CustomerFlow::Interactive::Message::AddStoreSensorReq* addstoresensorreq_value);

  // .CustomerFlow.Interactive.Message.DeleteStoreSensorReq DeleteStoreSensorReq_Value = 1210;
  bool has_deletestoresensorreq_value() const;
  void clear_deletestoresensorreq_value();
  static const int kDeleteStoreSensorReqValueFieldNumber = 1210;
  const ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq& deletestoresensorreq_value() const;
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* mutable_deletestoresensorreq_value();
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* release_deletestoresensorreq_value();
  void set_allocated_deletestoresensorreq_value(::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* deletestoresensorreq_value);

  // .CustomerFlow.Interactive.Message.ModifyStoreSensorReq ModifyStoreSensorReq_Value = 1220;
  bool has_modifystoresensorreq_value() const;
  void clear_modifystoresensorreq_value();
  static const int kModifyStoreSensorReqValueFieldNumber = 1220;
  const ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq& modifystoresensorreq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* mutable_modifystoresensorreq_value();
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* release_modifystoresensorreq_value();
  void set_allocated_modifystoresensorreq_value(::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* modifystoresensorreq_value);

  // .CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq QueryStoreSensorInfoReq_Value = 1230;
  bool has_querystoresensorinforeq_value() const;
  void clear_querystoresensorinforeq_value();
  static const int kQueryStoreSensorInfoReqValueFieldNumber = 1230;
  const ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq& querystoresensorinforeq_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* mutable_querystoresensorinforeq_value();
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* release_querystoresensorinforeq_value();
  void set_allocated_querystoresensorinforeq_value(::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* querystoresensorinforeq_value);

  // .CustomerFlow.Interactive.Message.QueryAllStoreSensorReq QueryAllStoreSensorReq_Value = 1240;
  bool has_queryallstoresensorreq_value() const;
  void clear_queryallstoresensorreq_value();
  static const int kQueryAllStoreSensorReqValueFieldNumber = 1240;
  const ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq& queryallstoresensorreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* mutable_queryallstoresensorreq_value();
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* release_queryallstoresensorreq_value();
  void set_allocated_queryallstoresensorreq_value(::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* queryallstoresensorreq_value);

  // .CustomerFlow.Interactive.Message.ImportPOSDataReq ImportPOSDataReq_Value = 2000;
  bool has_importposdatareq_value() const;
  void clear_importposdatareq_value();
  static const int kImportPOSDataReqValueFieldNumber = 2000;
  const ::CustomerFlow::Interactive::Message::ImportPOSDataReq& importposdatareq_value() const;
  ::CustomerFlow::Interactive::Message::ImportPOSDataReq* mutable_importposdatareq_value();
  ::CustomerFlow::Interactive::Message::ImportPOSDataReq* release_importposdatareq_value();
  void set_allocated_importposdatareq_value(::CustomerFlow::Interactive::Message::ImportPOSDataReq* importposdatareq_value);

  // .CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq QueryCustomerFlowStatisticReq_Value = 2900;
  bool has_querycustomerflowstatisticreq_value() const;
  void clear_querycustomerflowstatisticreq_value();
  static const int kQueryCustomerFlowStatisticReqValueFieldNumber = 2900;
  const ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq& querycustomerflowstatisticreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* mutable_querycustomerflowstatisticreq_value();
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* release_querycustomerflowstatisticreq_value();
  void set_allocated_querycustomerflowstatisticreq_value(::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* querycustomerflowstatisticreq_value);

  // .CustomerFlow.Interactive.Message.QueryPatrolResultReportReq QueryPatrolResultReportReq_Value = 3000;
  bool has_querypatrolresultreportreq_value() const;
  void clear_querypatrolresultreportreq_value();
  static const int kQueryPatrolResultReportReqValueFieldNumber = 3000;
  const ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq& querypatrolresultreportreq_value() const;
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* mutable_querypatrolresultreportreq_value();
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* release_querypatrolresultreportreq_value();
  void set_allocated_querypatrolresultreportreq_value(::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* querypatrolresultreportreq_value);

  // .CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq ReportCustomerFlowDataReq_Value = 5000;
  bool has_reportcustomerflowdatareq_value() const;
  void clear_reportcustomerflowdatareq_value();
  static const int kReportCustomerFlowDataReqValueFieldNumber = 5000;
  const ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq& reportcustomerflowdatareq_value() const;
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* mutable_reportcustomerflowdatareq_value();
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* release_reportcustomerflowdatareq_value();
  void set_allocated_reportcustomerflowdatareq_value(::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* reportcustomerflowdatareq_value);

  // .CustomerFlow.Interactive.Message.ReportSensorInfoReq ReportSensorInfoReq_Value = 5100;
  bool has_reportsensorinforeq_value() const;
  void clear_reportsensorinforeq_value();
  static const int kReportSensorInfoReqValueFieldNumber = 5100;
  const ::CustomerFlow::Interactive::Message::ReportSensorInfoReq& reportsensorinforeq_value() const;
  ::CustomerFlow::Interactive::Message::ReportSensorInfoReq* mutable_reportsensorinforeq_value();
  ::CustomerFlow::Interactive::Message::ReportSensorInfoReq* release_reportsensorinforeq_value();
  void set_allocated_reportsensorinforeq_value(::CustomerFlow::Interactive::Message::ReportSensorInfoReq* reportsensorinforeq_value);

  // .CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq ReportSensorAlarmInfoReq_Value = 5110;
  bool has_reportsensoralarminforeq_value() const;
  void clear_reportsensoralarminforeq_value();
  static const int kReportSensorAlarmInfoReqValueFieldNumber = 5110;
  const ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq& reportsensoralarminforeq_value() const;
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* mutable_reportsensoralarminforeq_value();
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* release_reportsensoralarminforeq_value();
  void set_allocated_reportsensoralarminforeq_value(::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* reportsensoralarminforeq_value);

  // .CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq QuerySensorAlarmThresholdReq_Value = 5120;
  bool has_querysensoralarmthresholdreq_value() const;
  void clear_querysensoralarmthresholdreq_value();
  static const int kQuerySensorAlarmThresholdReqValueFieldNumber = 5120;
  const ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq& querysensoralarmthresholdreq_value() const;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* mutable_querysensoralarmthresholdreq_value();
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* release_querysensoralarmthresholdreq_value();
  void set_allocated_querysensoralarmthresholdreq_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* querysensoralarmthresholdreq_value);

  // .CustomerFlow.Interactive.Message.RemoveSensorRecordsReq RemoveSensorRecordsReq_Value = 5130;
  bool has_removesensorrecordsreq_value() const;
  void clear_removesensorrecordsreq_value();
  static const int kRemoveSensorRecordsReqValueFieldNumber = 5130;
  const ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq& removesensorrecordsreq_value() const;
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* mutable_removesensorrecordsreq_value();
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* release_removesensorrecordsreq_value();
  void set_allocated_removesensorrecordsreq_value(::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* removesensorrecordsreq_value);

  // .CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq RemoveSensorAlarmRecordsReq_Value = 5140;
  bool has_removesensoralarmrecordsreq_value() const;
  void clear_removesensoralarmrecordsreq_value();
  static const int kRemoveSensorAlarmRecordsReqValueFieldNumber = 5140;
  const ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq& removesensoralarmrecordsreq_value() const;
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* mutable_removesensoralarmrecordsreq_value();
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* release_removesensoralarmrecordsreq_value();
  void set_allocated_removesensoralarmrecordsreq_value(::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* removesensoralarmrecordsreq_value);

  // .CustomerFlow.Interactive.Message.QuerySensorRecordsReq QuerySensorRecordsReq_Value = 5150;
  bool has_querysensorrecordsreq_value() const;
  void clear_querysensorrecordsreq_value();
  static const int kQuerySensorRecordsReqValueFieldNumber = 5150;
  const ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq& querysensorrecordsreq_value() const;
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* mutable_querysensorrecordsreq_value();
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* release_querysensorrecordsreq_value();
  void set_allocated_querysensorrecordsreq_value(::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* querysensorrecordsreq_value);

  // .CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq QuerySensorAlarmRecordsReq_Value = 5160;
  bool has_querysensoralarmrecordsreq_value() const;
  void clear_querysensoralarmrecordsreq_value();
  static const int kQuerySensorAlarmRecordsReqValueFieldNumber = 5160;
  const ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq& querysensoralarmrecordsreq_value() const;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* mutable_querysensoralarmrecordsreq_value();
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* release_querysensoralarmrecordsreq_value();
  void set_allocated_querysensoralarmrecordsreq_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* querysensoralarmrecordsreq_value);

  // .CustomerFlow.Interactive.Message.AddRoleReq AddRoleReq_Value = 5170;
  bool has_addrolereq_value() const;
  void clear_addrolereq_value();
  static const int kAddRoleReqValueFieldNumber = 5170;
  const ::CustomerFlow::Interactive::Message::AddRoleReq& addrolereq_value() const;
  ::CustomerFlow::Interactive::Message::AddRoleReq* mutable_addrolereq_value();
  ::CustomerFlow::Interactive::Message::AddRoleReq* release_addrolereq_value();
  void set_allocated_addrolereq_value(::CustomerFlow::Interactive::Message::AddRoleReq* addrolereq_value);

  // .CustomerFlow.Interactive.Message.RemoveRoleReq RemoveRoleReq_Value = 5180;
  bool has_removerolereq_value() const;
  void clear_removerolereq_value();
  static const int kRemoveRoleReqValueFieldNumber = 5180;
  const ::CustomerFlow::Interactive::Message::RemoveRoleReq& removerolereq_value() const;
  ::CustomerFlow::Interactive::Message::RemoveRoleReq* mutable_removerolereq_value();
  ::CustomerFlow::Interactive::Message::RemoveRoleReq* release_removerolereq_value();
  void set_allocated_removerolereq_value(::CustomerFlow::Interactive::Message::RemoveRoleReq* removerolereq_value);

  // .CustomerFlow.Interactive.Message.ModifyRoleReq ModifyRoleReq_Value = 5190;
  bool has_modifyrolereq_value() const;
  void clear_modifyrolereq_value();
  static const int kModifyRoleReqValueFieldNumber = 5190;
  const ::CustomerFlow::Interactive::Message::ModifyRoleReq& modifyrolereq_value() const;
  ::CustomerFlow::Interactive::Message::ModifyRoleReq* mutable_modifyrolereq_value();
  ::CustomerFlow::Interactive::Message::ModifyRoleReq* release_modifyrolereq_value();
  void set_allocated_modifyrolereq_value(::CustomerFlow::Interactive::Message::ModifyRoleReq* modifyrolereq_value);

  // .CustomerFlow.Interactive.Message.QueryRoleReq QueryRoleReq_Value = 5200;
  bool has_queryrolereq_value() const;
  void clear_queryrolereq_value();
  static const int kQueryRoleReqValueFieldNumber = 5200;
  const ::CustomerFlow::Interactive::Message::QueryRoleReq& queryrolereq_value() const;
  ::CustomerFlow::Interactive::Message::QueryRoleReq* mutable_queryrolereq_value();
  ::CustomerFlow::Interactive::Message::QueryRoleReq* release_queryrolereq_value();
  void set_allocated_queryrolereq_value(::CustomerFlow::Interactive::Message::QueryRoleReq* queryrolereq_value);

  // .CustomerFlow.Interactive.Message.QueryAllRoleReq QueryAllRoleReq_Value = 5210;
  bool has_queryallrolereq_value() const;
  void clear_queryallrolereq_value();
  static const int kQueryAllRoleReqValueFieldNumber = 5210;
  const ::CustomerFlow::Interactive::Message::QueryAllRoleReq& queryallrolereq_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllRoleReq* mutable_queryallrolereq_value();
  ::CustomerFlow::Interactive::Message::QueryAllRoleReq* release_queryallrolereq_value();
  void set_allocated_queryallrolereq_value(::CustomerFlow::Interactive::Message::QueryAllRoleReq* queryallrolereq_value);

  // .CustomerFlow.Interactive.Message.UserBindRoleReq UserBindRoleReq_Value = 5220;
  bool has_userbindrolereq_value() const;
  void clear_userbindrolereq_value();
  static const int kUserBindRoleReqValueFieldNumber = 5220;
  const ::CustomerFlow::Interactive::Message::UserBindRoleReq& userbindrolereq_value() const;
  ::CustomerFlow::Interactive::Message::UserBindRoleReq* mutable_userbindrolereq_value();
  ::CustomerFlow::Interactive::Message::UserBindRoleReq* release_userbindrolereq_value();
  void set_allocated_userbindrolereq_value(::CustomerFlow::Interactive::Message::UserBindRoleReq* userbindrolereq_value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* customerflowprehandlereq_value_;
  ::CustomerFlow::Interactive::Message::ShakehandReq* shakehandreq_value_;
  ::CustomerFlow::Interactive::Message::AddGroupReq* addgroupreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteGroupReq* deletegroupreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyGroupReq* modifygroupreq_value_;
  ::CustomerFlow::Interactive::Message::QueryGroupInfoReq* querygroupinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllGroupReq* queryallgroupreq_value_;
  ::CustomerFlow::Interactive::Message::AddStoreReq* addstorereq_value_;
  ::CustomerFlow::Interactive::Message::DeleteStoreReq* deletestorereq_value_;
  ::CustomerFlow::Interactive::Message::ModifyStoreReq* modifystorereq_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreInfoReq* querystoreinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllStoreReq* queryallstorereq_value_;
  ::CustomerFlow::Interactive::Message::AddEntranceReq* addentrancereq_value_;
  ::CustomerFlow::Interactive::Message::DeleteEntranceReq* deleteentrancereq_value_;
  ::CustomerFlow::Interactive::Message::ModifyEntranceReq* modifyentrancereq_value_;
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* addentrancedevicereq_value_;
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* deleteentrancedevicereq_value_;
  ::CustomerFlow::Interactive::Message::AddEventReq* addeventreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteEventReq* deleteeventreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyEventReq* modifyeventreq_value_;
  ::CustomerFlow::Interactive::Message::QueryEventInfoReq* queryeventinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllEventReq* queryalleventreq_value_;
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* addsmartguardstorereq_value_;
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* deletesmartguardstorereq_value_;
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* modifysmartguardstorereq_value_;
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* querysmartguardstoreinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* queryallsmartguardstorereq_value_;
  ::CustomerFlow::Interactive::Message::AddRegularPatrolReq* addregularpatrolreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* deleteregularpatrolreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* modifyregularpatrolreq_value_;
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* queryregularpatrolinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* queryallregularpatrolreq_value_;
  ::CustomerFlow::Interactive::Message::UserJoinStoreReq* userjoinstorereq_value_;
  ::CustomerFlow::Interactive::Message::UserQuitStoreReq* userquitstorereq_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* querystorealluserreq_value_;
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* querycompanyalluserreq_value_;
  ::CustomerFlow::Interactive::Message::AddVIPCustomerReq* addvipcustomerreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* deletevipcustomerreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* modifyvipcustomerreq_value_;
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* queryvipcustomerinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* queryallvipcustomerreq_value_;
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* addvipconsumehistoryreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* deletevipconsumehistoryreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* modifyvipconsumehistoryreq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* queryallvipconsumehistoryreq_value_;
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* addevaluationtemplatereq_value_;
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* deleteevaluationtemplatereq_value_;
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* modifyevaluationtemplatereq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* queryallevaluationtemplatereq_value_;
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* addstoreevaluationreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* deletestoreevaluationreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* modifystoreevaluationreq_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* querystoreevaluationinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* queryallstoreevaluationreq_value_;
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* addremotepatrolstorereq_value_;
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* deleteremotepatrolstorereq_value_;
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* modifyremotepatrolstorereq_value_;
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* queryremotepatrolstoreinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* queryallremotepatrolstorereq_value_;
  ::CustomerFlow::Interactive::Message::AddAreaReq* addareareq_value_;
  ::CustomerFlow::Interactive::Message::DeleteAreaReq* deleteareareq_value_;
  ::CustomerFlow::Interactive::Message::ModifyAreaReq* modifyareareq_value_;
  ::CustomerFlow::Interactive::Message::QueryAreaInfoReq* queryareainforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllAreaReq* queryallareareq_value_;
  ::CustomerFlow::Interactive::Message::BindPushClientIDReq* bindpushclientidreq_value_;
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* unbindpushclientidreq_value_;
  ::CustomerFlow::Interactive::Message::AddStoreSensorReq* addstoresensorreq_value_;
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* deletestoresensorreq_value_;
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* modifystoresensorreq_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* querystoresensorinforeq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* queryallstoresensorreq_value_;
  ::CustomerFlow::Interactive::Message::ImportPOSDataReq* importposdatareq_value_;
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* querycustomerflowstatisticreq_value_;
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* querypatrolresultreportreq_value_;
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* reportcustomerflowdatareq_value_;
  ::CustomerFlow::Interactive::Message::ReportSensorInfoReq* reportsensorinforeq_value_;
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* reportsensoralarminforeq_value_;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* querysensoralarmthresholdreq_value_;
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* removesensorrecordsreq_value_;
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* removesensoralarmrecordsreq_value_;
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* querysensorrecordsreq_value_;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* querysensoralarmrecordsreq_value_;
  ::CustomerFlow::Interactive::Message::AddRoleReq* addrolereq_value_;
  ::CustomerFlow::Interactive::Message::RemoveRoleReq* removerolereq_value_;
  ::CustomerFlow::Interactive::Message::ModifyRoleReq* modifyrolereq_value_;
  ::CustomerFlow::Interactive::Message::QueryRoleReq* queryrolereq_value_;
  ::CustomerFlow::Interactive::Message::QueryAllRoleReq* queryallrolereq_value_;
  ::CustomerFlow::Interactive::Message::UserBindRoleReq* userbindrolereq_value_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strRetMsg = 2;
  void clear_strretmsg();
  static const int kStrRetMsgFieldNumber = 2;
  const ::std::string& strretmsg() const;
  void set_strretmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_strretmsg(::std::string&& value);
  #endif
  void set_strretmsg(const char* value);
  void set_strretmsg(const char* value, size_t size);
  ::std::string* mutable_strretmsg();
  ::std::string* release_strretmsg();
  void set_allocated_strretmsg(::std::string* strretmsg);

  // .CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp CustomerFlowPreHandleRsp_Value = 10;
  bool has_customerflowprehandlersp_value() const;
  void clear_customerflowprehandlersp_value();
  static const int kCustomerFlowPreHandleRspValueFieldNumber = 10;
  const ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp& customerflowprehandlersp_value() const;
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* mutable_customerflowprehandlersp_value();
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* release_customerflowprehandlersp_value();
  void set_allocated_customerflowprehandlersp_value(::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* customerflowprehandlersp_value);

  // .CustomerFlow.Interactive.Message.ShakehandRsp ShakehandRsp_Value = 50;
  bool has_shakehandrsp_value() const;
  void clear_shakehandrsp_value();
  static const int kShakehandRspValueFieldNumber = 50;
  const ::CustomerFlow::Interactive::Message::ShakehandRsp& shakehandrsp_value() const;
  ::CustomerFlow::Interactive::Message::ShakehandRsp* mutable_shakehandrsp_value();
  ::CustomerFlow::Interactive::Message::ShakehandRsp* release_shakehandrsp_value();
  void set_allocated_shakehandrsp_value(::CustomerFlow::Interactive::Message::ShakehandRsp* shakehandrsp_value);

  // .CustomerFlow.Interactive.Message.AddGroupRsp AddGroupRsp_Value = 100;
  bool has_addgrouprsp_value() const;
  void clear_addgrouprsp_value();
  static const int kAddGroupRspValueFieldNumber = 100;
  const ::CustomerFlow::Interactive::Message::AddGroupRsp& addgrouprsp_value() const;
  ::CustomerFlow::Interactive::Message::AddGroupRsp* mutable_addgrouprsp_value();
  ::CustomerFlow::Interactive::Message::AddGroupRsp* release_addgrouprsp_value();
  void set_allocated_addgrouprsp_value(::CustomerFlow::Interactive::Message::AddGroupRsp* addgrouprsp_value);

  // .CustomerFlow.Interactive.Message.DeleteGroupRsp DeleteGroupRsp_Value = 110;
  bool has_deletegrouprsp_value() const;
  void clear_deletegrouprsp_value();
  static const int kDeleteGroupRspValueFieldNumber = 110;
  const ::CustomerFlow::Interactive::Message::DeleteGroupRsp& deletegrouprsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteGroupRsp* mutable_deletegrouprsp_value();
  ::CustomerFlow::Interactive::Message::DeleteGroupRsp* release_deletegrouprsp_value();
  void set_allocated_deletegrouprsp_value(::CustomerFlow::Interactive::Message::DeleteGroupRsp* deletegrouprsp_value);

  // .CustomerFlow.Interactive.Message.ModifyGroupRsp ModifyGroupRsp_Value = 120;
  bool has_modifygrouprsp_value() const;
  void clear_modifygrouprsp_value();
  static const int kModifyGroupRspValueFieldNumber = 120;
  const ::CustomerFlow::Interactive::Message::ModifyGroupRsp& modifygrouprsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyGroupRsp* mutable_modifygrouprsp_value();
  ::CustomerFlow::Interactive::Message::ModifyGroupRsp* release_modifygrouprsp_value();
  void set_allocated_modifygrouprsp_value(::CustomerFlow::Interactive::Message::ModifyGroupRsp* modifygrouprsp_value);

  // .CustomerFlow.Interactive.Message.QueryGroupInfoRsp QueryGroupInfoRsp_Value = 130;
  bool has_querygroupinforsp_value() const;
  void clear_querygroupinforsp_value();
  static const int kQueryGroupInfoRspValueFieldNumber = 130;
  const ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp& querygroupinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* mutable_querygroupinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* release_querygroupinforsp_value();
  void set_allocated_querygroupinforsp_value(::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* querygroupinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllGroupRsp QueryAllGroupRsp_Value = 140;
  bool has_queryallgrouprsp_value() const;
  void clear_queryallgrouprsp_value();
  static const int kQueryAllGroupRspValueFieldNumber = 140;
  const ::CustomerFlow::Interactive::Message::QueryAllGroupRsp& queryallgrouprsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllGroupRsp* mutable_queryallgrouprsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllGroupRsp* release_queryallgrouprsp_value();
  void set_allocated_queryallgrouprsp_value(::CustomerFlow::Interactive::Message::QueryAllGroupRsp* queryallgrouprsp_value);

  // .CustomerFlow.Interactive.Message.AddStoreRsp AddStoreRsp_Value = 150;
  bool has_addstorersp_value() const;
  void clear_addstorersp_value();
  static const int kAddStoreRspValueFieldNumber = 150;
  const ::CustomerFlow::Interactive::Message::AddStoreRsp& addstorersp_value() const;
  ::CustomerFlow::Interactive::Message::AddStoreRsp* mutable_addstorersp_value();
  ::CustomerFlow::Interactive::Message::AddStoreRsp* release_addstorersp_value();
  void set_allocated_addstorersp_value(::CustomerFlow::Interactive::Message::AddStoreRsp* addstorersp_value);

  // .CustomerFlow.Interactive.Message.DeleteStoreRsp DeleteStoreRsp_Value = 160;
  bool has_deletestorersp_value() const;
  void clear_deletestorersp_value();
  static const int kDeleteStoreRspValueFieldNumber = 160;
  const ::CustomerFlow::Interactive::Message::DeleteStoreRsp& deletestorersp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteStoreRsp* mutable_deletestorersp_value();
  ::CustomerFlow::Interactive::Message::DeleteStoreRsp* release_deletestorersp_value();
  void set_allocated_deletestorersp_value(::CustomerFlow::Interactive::Message::DeleteStoreRsp* deletestorersp_value);

  // .CustomerFlow.Interactive.Message.ModifyStoreRsp ModifyStoreRsp_Value = 170;
  bool has_modifystorersp_value() const;
  void clear_modifystorersp_value();
  static const int kModifyStoreRspValueFieldNumber = 170;
  const ::CustomerFlow::Interactive::Message::ModifyStoreRsp& modifystorersp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyStoreRsp* mutable_modifystorersp_value();
  ::CustomerFlow::Interactive::Message::ModifyStoreRsp* release_modifystorersp_value();
  void set_allocated_modifystorersp_value(::CustomerFlow::Interactive::Message::ModifyStoreRsp* modifystorersp_value);

  // .CustomerFlow.Interactive.Message.QueryStoreInfoRsp QueryStoreInfoRsp_Value = 180;
  bool has_querystoreinforsp_value() const;
  void clear_querystoreinforsp_value();
  static const int kQueryStoreInfoRspValueFieldNumber = 180;
  const ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp& querystoreinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* mutable_querystoreinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* release_querystoreinforsp_value();
  void set_allocated_querystoreinforsp_value(::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* querystoreinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllStoreRsp QueryAllStoreRsp_Value = 190;
  bool has_queryallstorersp_value() const;
  void clear_queryallstorersp_value();
  static const int kQueryAllStoreRspValueFieldNumber = 190;
  const ::CustomerFlow::Interactive::Message::QueryAllStoreRsp& queryallstorersp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllStoreRsp* mutable_queryallstorersp_value();
  ::CustomerFlow::Interactive::Message::QueryAllStoreRsp* release_queryallstorersp_value();
  void set_allocated_queryallstorersp_value(::CustomerFlow::Interactive::Message::QueryAllStoreRsp* queryallstorersp_value);

  // .CustomerFlow.Interactive.Message.AddEntranceRsp AddEntranceRsp_Value = 200;
  bool has_addentrancersp_value() const;
  void clear_addentrancersp_value();
  static const int kAddEntranceRspValueFieldNumber = 200;
  const ::CustomerFlow::Interactive::Message::AddEntranceRsp& addentrancersp_value() const;
  ::CustomerFlow::Interactive::Message::AddEntranceRsp* mutable_addentrancersp_value();
  ::CustomerFlow::Interactive::Message::AddEntranceRsp* release_addentrancersp_value();
  void set_allocated_addentrancersp_value(::CustomerFlow::Interactive::Message::AddEntranceRsp* addentrancersp_value);

  // .CustomerFlow.Interactive.Message.DeleteEntranceRsp DeleteEntranceRsp_Value = 210;
  bool has_deleteentrancersp_value() const;
  void clear_deleteentrancersp_value();
  static const int kDeleteEntranceRspValueFieldNumber = 210;
  const ::CustomerFlow::Interactive::Message::DeleteEntranceRsp& deleteentrancersp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEntranceRsp* mutable_deleteentrancersp_value();
  ::CustomerFlow::Interactive::Message::DeleteEntranceRsp* release_deleteentrancersp_value();
  void set_allocated_deleteentrancersp_value(::CustomerFlow::Interactive::Message::DeleteEntranceRsp* deleteentrancersp_value);

  // .CustomerFlow.Interactive.Message.ModifyEntranceRsp ModifyEntranceRsp_Value = 220;
  bool has_modifyentrancersp_value() const;
  void clear_modifyentrancersp_value();
  static const int kModifyEntranceRspValueFieldNumber = 220;
  const ::CustomerFlow::Interactive::Message::ModifyEntranceRsp& modifyentrancersp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyEntranceRsp* mutable_modifyentrancersp_value();
  ::CustomerFlow::Interactive::Message::ModifyEntranceRsp* release_modifyentrancersp_value();
  void set_allocated_modifyentrancersp_value(::CustomerFlow::Interactive::Message::ModifyEntranceRsp* modifyentrancersp_value);

  // .CustomerFlow.Interactive.Message.AddEntranceDeviceRsp AddEntranceDeviceRsp_Value = 230;
  bool has_addentrancedevicersp_value() const;
  void clear_addentrancedevicersp_value();
  static const int kAddEntranceDeviceRspValueFieldNumber = 230;
  const ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp& addentrancedevicersp_value() const;
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* mutable_addentrancedevicersp_value();
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* release_addentrancedevicersp_value();
  void set_allocated_addentrancedevicersp_value(::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* addentrancedevicersp_value);

  // .CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp DeleteEntranceDeviceRsp_Value = 240;
  bool has_deleteentrancedevicersp_value() const;
  void clear_deleteentrancedevicersp_value();
  static const int kDeleteEntranceDeviceRspValueFieldNumber = 240;
  const ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp& deleteentrancedevicersp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* mutable_deleteentrancedevicersp_value();
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* release_deleteentrancedevicersp_value();
  void set_allocated_deleteentrancedevicersp_value(::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* deleteentrancedevicersp_value);

  // .CustomerFlow.Interactive.Message.AddEventRsp AddEventRsp_Value = 300;
  bool has_addeventrsp_value() const;
  void clear_addeventrsp_value();
  static const int kAddEventRspValueFieldNumber = 300;
  const ::CustomerFlow::Interactive::Message::AddEventRsp& addeventrsp_value() const;
  ::CustomerFlow::Interactive::Message::AddEventRsp* mutable_addeventrsp_value();
  ::CustomerFlow::Interactive::Message::AddEventRsp* release_addeventrsp_value();
  void set_allocated_addeventrsp_value(::CustomerFlow::Interactive::Message::AddEventRsp* addeventrsp_value);

  // .CustomerFlow.Interactive.Message.DeleteEventRsp DeleteEventRsp_Value = 310;
  bool has_deleteeventrsp_value() const;
  void clear_deleteeventrsp_value();
  static const int kDeleteEventRspValueFieldNumber = 310;
  const ::CustomerFlow::Interactive::Message::DeleteEventRsp& deleteeventrsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEventRsp* mutable_deleteeventrsp_value();
  ::CustomerFlow::Interactive::Message::DeleteEventRsp* release_deleteeventrsp_value();
  void set_allocated_deleteeventrsp_value(::CustomerFlow::Interactive::Message::DeleteEventRsp* deleteeventrsp_value);

  // .CustomerFlow.Interactive.Message.ModifyEventRsp ModifyEventRsp_Value = 320;
  bool has_modifyeventrsp_value() const;
  void clear_modifyeventrsp_value();
  static const int kModifyEventRspValueFieldNumber = 320;
  const ::CustomerFlow::Interactive::Message::ModifyEventRsp& modifyeventrsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyEventRsp* mutable_modifyeventrsp_value();
  ::CustomerFlow::Interactive::Message::ModifyEventRsp* release_modifyeventrsp_value();
  void set_allocated_modifyeventrsp_value(::CustomerFlow::Interactive::Message::ModifyEventRsp* modifyeventrsp_value);

  // .CustomerFlow.Interactive.Message.QueryEventInfoRsp QueryEventInfoRsp_Value = 330;
  bool has_queryeventinforsp_value() const;
  void clear_queryeventinforsp_value();
  static const int kQueryEventInfoRspValueFieldNumber = 330;
  const ::CustomerFlow::Interactive::Message::QueryEventInfoRsp& queryeventinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryEventInfoRsp* mutable_queryeventinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryEventInfoRsp* release_queryeventinforsp_value();
  void set_allocated_queryeventinforsp_value(::CustomerFlow::Interactive::Message::QueryEventInfoRsp* queryeventinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllEventRsp QueryAllEventRsp_Value = 340;
  bool has_queryalleventrsp_value() const;
  void clear_queryalleventrsp_value();
  static const int kQueryAllEventRspValueFieldNumber = 340;
  const ::CustomerFlow::Interactive::Message::QueryAllEventRsp& queryalleventrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllEventRsp* mutable_queryalleventrsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllEventRsp* release_queryalleventrsp_value();
  void set_allocated_queryalleventrsp_value(::CustomerFlow::Interactive::Message::QueryAllEventRsp* queryalleventrsp_value);

  // .CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp AddSmartGuardStoreRsp_Value = 350;
  bool has_addsmartguardstorersp_value() const;
  void clear_addsmartguardstorersp_value();
  static const int kAddSmartGuardStoreRspValueFieldNumber = 350;
  const ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp& addsmartguardstorersp_value() const;
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* mutable_addsmartguardstorersp_value();
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* release_addsmartguardstorersp_value();
  void set_allocated_addsmartguardstorersp_value(::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* addsmartguardstorersp_value);

  // .CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp DeleteSmartGuardStoreRsp_Value = 360;
  bool has_deletesmartguardstorersp_value() const;
  void clear_deletesmartguardstorersp_value();
  static const int kDeleteSmartGuardStoreRspValueFieldNumber = 360;
  const ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp& deletesmartguardstorersp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* mutable_deletesmartguardstorersp_value();
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* release_deletesmartguardstorersp_value();
  void set_allocated_deletesmartguardstorersp_value(::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* deletesmartguardstorersp_value);

  // .CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp ModifySmartGuardStoreRsp_Value = 370;
  bool has_modifysmartguardstorersp_value() const;
  void clear_modifysmartguardstorersp_value();
  static const int kModifySmartGuardStoreRspValueFieldNumber = 370;
  const ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp& modifysmartguardstorersp_value() const;
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* mutable_modifysmartguardstorersp_value();
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* release_modifysmartguardstorersp_value();
  void set_allocated_modifysmartguardstorersp_value(::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* modifysmartguardstorersp_value);

  // .CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp QuerySmartGuardStoreInfoRsp_Value = 380;
  bool has_querysmartguardstoreinforsp_value() const;
  void clear_querysmartguardstoreinforsp_value();
  static const int kQuerySmartGuardStoreInfoRspValueFieldNumber = 380;
  const ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp& querysmartguardstoreinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* mutable_querysmartguardstoreinforsp_value();
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* release_querysmartguardstoreinforsp_value();
  void set_allocated_querysmartguardstoreinforsp_value(::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* querysmartguardstoreinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp QueryAllSmartGuardStoreRsp_Value = 390;
  bool has_queryallsmartguardstorersp_value() const;
  void clear_queryallsmartguardstorersp_value();
  static const int kQueryAllSmartGuardStoreRspValueFieldNumber = 390;
  const ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp& queryallsmartguardstorersp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* mutable_queryallsmartguardstorersp_value();
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* release_queryallsmartguardstorersp_value();
  void set_allocated_queryallsmartguardstorersp_value(::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* queryallsmartguardstorersp_value);

  // .CustomerFlow.Interactive.Message.AddRegularPatrolRsp AddRegularPatrolRsp_Value = 400;
  bool has_addregularpatrolrsp_value() const;
  void clear_addregularpatrolrsp_value();
  static const int kAddRegularPatrolRspValueFieldNumber = 400;
  const ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp& addregularpatrolrsp_value() const;
  ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* mutable_addregularpatrolrsp_value();
  ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* release_addregularpatrolrsp_value();
  void set_allocated_addregularpatrolrsp_value(::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* addregularpatrolrsp_value);

  // .CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp DeleteRegularPatrolRsp_Value = 410;
  bool has_deleteregularpatrolrsp_value() const;
  void clear_deleteregularpatrolrsp_value();
  static const int kDeleteRegularPatrolRspValueFieldNumber = 410;
  const ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp& deleteregularpatrolrsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* mutable_deleteregularpatrolrsp_value();
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* release_deleteregularpatrolrsp_value();
  void set_allocated_deleteregularpatrolrsp_value(::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* deleteregularpatrolrsp_value);

  // .CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp ModifyRegularPatrolRsp_Value = 420;
  bool has_modifyregularpatrolrsp_value() const;
  void clear_modifyregularpatrolrsp_value();
  static const int kModifyRegularPatrolRspValueFieldNumber = 420;
  const ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp& modifyregularpatrolrsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* mutable_modifyregularpatrolrsp_value();
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* release_modifyregularpatrolrsp_value();
  void set_allocated_modifyregularpatrolrsp_value(::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* modifyregularpatrolrsp_value);

  // .CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp QueryRegularPatrolInfoRsp_Value = 430;
  bool has_queryregularpatrolinforsp_value() const;
  void clear_queryregularpatrolinforsp_value();
  static const int kQueryRegularPatrolInfoRspValueFieldNumber = 430;
  const ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp& queryregularpatrolinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* mutable_queryregularpatrolinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* release_queryregularpatrolinforsp_value();
  void set_allocated_queryregularpatrolinforsp_value(::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* queryregularpatrolinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp QueryAllRegularPatrolRsp_Value = 440;
  bool has_queryallregularpatrolrsp_value() const;
  void clear_queryallregularpatrolrsp_value();
  static const int kQueryAllRegularPatrolRspValueFieldNumber = 440;
  const ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp& queryallregularpatrolrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* mutable_queryallregularpatrolrsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* release_queryallregularpatrolrsp_value();
  void set_allocated_queryallregularpatrolrsp_value(::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* queryallregularpatrolrsp_value);

  // .CustomerFlow.Interactive.Message.UserJoinStoreRsp UserJoinStoreRsp_Value = 500;
  bool has_userjoinstorersp_value() const;
  void clear_userjoinstorersp_value();
  static const int kUserJoinStoreRspValueFieldNumber = 500;
  const ::CustomerFlow::Interactive::Message::UserJoinStoreRsp& userjoinstorersp_value() const;
  ::CustomerFlow::Interactive::Message::UserJoinStoreRsp* mutable_userjoinstorersp_value();
  ::CustomerFlow::Interactive::Message::UserJoinStoreRsp* release_userjoinstorersp_value();
  void set_allocated_userjoinstorersp_value(::CustomerFlow::Interactive::Message::UserJoinStoreRsp* userjoinstorersp_value);

  // .CustomerFlow.Interactive.Message.UserQuitStoreRsp UserQuitStoreRsp_Value = 510;
  bool has_userquitstorersp_value() const;
  void clear_userquitstorersp_value();
  static const int kUserQuitStoreRspValueFieldNumber = 510;
  const ::CustomerFlow::Interactive::Message::UserQuitStoreRsp& userquitstorersp_value() const;
  ::CustomerFlow::Interactive::Message::UserQuitStoreRsp* mutable_userquitstorersp_value();
  ::CustomerFlow::Interactive::Message::UserQuitStoreRsp* release_userquitstorersp_value();
  void set_allocated_userquitstorersp_value(::CustomerFlow::Interactive::Message::UserQuitStoreRsp* userquitstorersp_value);

  // .CustomerFlow.Interactive.Message.QueryStoreAllUserRsp QueryStoreAllUserRsp_Value = 520;
  bool has_querystorealluserrsp_value() const;
  void clear_querystorealluserrsp_value();
  static const int kQueryStoreAllUserRspValueFieldNumber = 520;
  const ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp& querystorealluserrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* mutable_querystorealluserrsp_value();
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* release_querystorealluserrsp_value();
  void set_allocated_querystorealluserrsp_value(::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* querystorealluserrsp_value);

  // .CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp QueryCompanyAllUserRsp_Value = 530;
  bool has_querycompanyalluserrsp_value() const;
  void clear_querycompanyalluserrsp_value();
  static const int kQueryCompanyAllUserRspValueFieldNumber = 530;
  const ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp& querycompanyalluserrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* mutable_querycompanyalluserrsp_value();
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* release_querycompanyalluserrsp_value();
  void set_allocated_querycompanyalluserrsp_value(::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* querycompanyalluserrsp_value);

  // .CustomerFlow.Interactive.Message.AddVIPCustomerRsp AddVIPCustomerRsp_Value = 800;
  bool has_addvipcustomerrsp_value() const;
  void clear_addvipcustomerrsp_value();
  static const int kAddVIPCustomerRspValueFieldNumber = 800;
  const ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp& addvipcustomerrsp_value() const;
  ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* mutable_addvipcustomerrsp_value();
  ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* release_addvipcustomerrsp_value();
  void set_allocated_addvipcustomerrsp_value(::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* addvipcustomerrsp_value);

  // .CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp DeleteVIPCustomerRsp_Value = 810;
  bool has_deletevipcustomerrsp_value() const;
  void clear_deletevipcustomerrsp_value();
  static const int kDeleteVIPCustomerRspValueFieldNumber = 810;
  const ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp& deletevipcustomerrsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* mutable_deletevipcustomerrsp_value();
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* release_deletevipcustomerrsp_value();
  void set_allocated_deletevipcustomerrsp_value(::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* deletevipcustomerrsp_value);

  // .CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp ModifyVIPCustomerRsp_Value = 820;
  bool has_modifyvipcustomerrsp_value() const;
  void clear_modifyvipcustomerrsp_value();
  static const int kModifyVIPCustomerRspValueFieldNumber = 820;
  const ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp& modifyvipcustomerrsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* mutable_modifyvipcustomerrsp_value();
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* release_modifyvipcustomerrsp_value();
  void set_allocated_modifyvipcustomerrsp_value(::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* modifyvipcustomerrsp_value);

  // .CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp QueryVIPCustomerInfoRsp_Value = 830;
  bool has_queryvipcustomerinforsp_value() const;
  void clear_queryvipcustomerinforsp_value();
  static const int kQueryVIPCustomerInfoRspValueFieldNumber = 830;
  const ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp& queryvipcustomerinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* mutable_queryvipcustomerinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* release_queryvipcustomerinforsp_value();
  void set_allocated_queryvipcustomerinforsp_value(::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* queryvipcustomerinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp QueryAllVIPCustomerRsp_Value = 840;
  bool has_queryallvipcustomerrsp_value() const;
  void clear_queryallvipcustomerrsp_value();
  static const int kQueryAllVIPCustomerRspValueFieldNumber = 840;
  const ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp& queryallvipcustomerrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* mutable_queryallvipcustomerrsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* release_queryallvipcustomerrsp_value();
  void set_allocated_queryallvipcustomerrsp_value(::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* queryallvipcustomerrsp_value);

  // .CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp AddVIPConsumeHistoryRsp_Value = 850;
  bool has_addvipconsumehistoryrsp_value() const;
  void clear_addvipconsumehistoryrsp_value();
  static const int kAddVIPConsumeHistoryRspValueFieldNumber = 850;
  const ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp& addvipconsumehistoryrsp_value() const;
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* mutable_addvipconsumehistoryrsp_value();
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* release_addvipconsumehistoryrsp_value();
  void set_allocated_addvipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* addvipconsumehistoryrsp_value);

  // .CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp DeleteVIPConsumeHistoryRsp_Value = 860;
  bool has_deletevipconsumehistoryrsp_value() const;
  void clear_deletevipconsumehistoryrsp_value();
  static const int kDeleteVIPConsumeHistoryRspValueFieldNumber = 860;
  const ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp& deletevipconsumehistoryrsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* mutable_deletevipconsumehistoryrsp_value();
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* release_deletevipconsumehistoryrsp_value();
  void set_allocated_deletevipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* deletevipconsumehistoryrsp_value);

  // .CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp ModifyVIPConsumeHistoryRsp_Value = 870;
  bool has_modifyvipconsumehistoryrsp_value() const;
  void clear_modifyvipconsumehistoryrsp_value();
  static const int kModifyVIPConsumeHistoryRspValueFieldNumber = 870;
  const ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp& modifyvipconsumehistoryrsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* mutable_modifyvipconsumehistoryrsp_value();
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* release_modifyvipconsumehistoryrsp_value();
  void set_allocated_modifyvipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* modifyvipconsumehistoryrsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp QueryAllVIPConsumeHistoryRsp_Value = 880;
  bool has_queryallvipconsumehistoryrsp_value() const;
  void clear_queryallvipconsumehistoryrsp_value();
  static const int kQueryAllVIPConsumeHistoryRspValueFieldNumber = 880;
  const ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp& queryallvipconsumehistoryrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* mutable_queryallvipconsumehistoryrsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* release_queryallvipconsumehistoryrsp_value();
  void set_allocated_queryallvipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* queryallvipconsumehistoryrsp_value);

  // .CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp AddEvaluationTemplateRsp_Value = 900;
  bool has_addevaluationtemplatersp_value() const;
  void clear_addevaluationtemplatersp_value();
  static const int kAddEvaluationTemplateRspValueFieldNumber = 900;
  const ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp& addevaluationtemplatersp_value() const;
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* mutable_addevaluationtemplatersp_value();
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* release_addevaluationtemplatersp_value();
  void set_allocated_addevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* addevaluationtemplatersp_value);

  // .CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp DeleteEvaluationTemplateRsp_Value = 910;
  bool has_deleteevaluationtemplatersp_value() const;
  void clear_deleteevaluationtemplatersp_value();
  static const int kDeleteEvaluationTemplateRspValueFieldNumber = 910;
  const ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp& deleteevaluationtemplatersp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* mutable_deleteevaluationtemplatersp_value();
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* release_deleteevaluationtemplatersp_value();
  void set_allocated_deleteevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* deleteevaluationtemplatersp_value);

  // .CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp ModifyEvaluationTemplateRsp_Value = 920;
  bool has_modifyevaluationtemplatersp_value() const;
  void clear_modifyevaluationtemplatersp_value();
  static const int kModifyEvaluationTemplateRspValueFieldNumber = 920;
  const ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp& modifyevaluationtemplatersp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* mutable_modifyevaluationtemplatersp_value();
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* release_modifyevaluationtemplatersp_value();
  void set_allocated_modifyevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* modifyevaluationtemplatersp_value);

  // .CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp QueryAllEvaluationTemplateRsp_Value = 930;
  bool has_queryallevaluationtemplatersp_value() const;
  void clear_queryallevaluationtemplatersp_value();
  static const int kQueryAllEvaluationTemplateRspValueFieldNumber = 930;
  const ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp& queryallevaluationtemplatersp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* mutable_queryallevaluationtemplatersp_value();
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* release_queryallevaluationtemplatersp_value();
  void set_allocated_queryallevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* queryallevaluationtemplatersp_value);

  // .CustomerFlow.Interactive.Message.AddStoreEvaluationRsp AddStoreEvaluationRsp_Value = 950;
  bool has_addstoreevaluationrsp_value() const;
  void clear_addstoreevaluationrsp_value();
  static const int kAddStoreEvaluationRspValueFieldNumber = 950;
  const ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp& addstoreevaluationrsp_value() const;
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* mutable_addstoreevaluationrsp_value();
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* release_addstoreevaluationrsp_value();
  void set_allocated_addstoreevaluationrsp_value(::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* addstoreevaluationrsp_value);

  // .CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp DeleteStoreEvaluationRsp_Value = 960;
  bool has_deletestoreevaluationrsp_value() const;
  void clear_deletestoreevaluationrsp_value();
  static const int kDeleteStoreEvaluationRspValueFieldNumber = 960;
  const ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp& deletestoreevaluationrsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* mutable_deletestoreevaluationrsp_value();
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* release_deletestoreevaluationrsp_value();
  void set_allocated_deletestoreevaluationrsp_value(::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* deletestoreevaluationrsp_value);

  // .CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp ModifyStoreEvaluationRsp_Value = 970;
  bool has_modifystoreevaluationrsp_value() const;
  void clear_modifystoreevaluationrsp_value();
  static const int kModifyStoreEvaluationRspValueFieldNumber = 970;
  const ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp& modifystoreevaluationrsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* mutable_modifystoreevaluationrsp_value();
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* release_modifystoreevaluationrsp_value();
  void set_allocated_modifystoreevaluationrsp_value(::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* modifystoreevaluationrsp_value);

  // .CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp QueryStoreEvaluationInfoRsp_Value = 980;
  bool has_querystoreevaluationinforsp_value() const;
  void clear_querystoreevaluationinforsp_value();
  static const int kQueryStoreEvaluationInfoRspValueFieldNumber = 980;
  const ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp& querystoreevaluationinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* mutable_querystoreevaluationinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* release_querystoreevaluationinforsp_value();
  void set_allocated_querystoreevaluationinforsp_value(::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* querystoreevaluationinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp QueryAllStoreEvaluationRsp_Value = 990;
  bool has_queryallstoreevaluationrsp_value() const;
  void clear_queryallstoreevaluationrsp_value();
  static const int kQueryAllStoreEvaluationRspValueFieldNumber = 990;
  const ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp& queryallstoreevaluationrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* mutable_queryallstoreevaluationrsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* release_queryallstoreevaluationrsp_value();
  void set_allocated_queryallstoreevaluationrsp_value(::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* queryallstoreevaluationrsp_value);

  // .CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp AddRemotePatrolStoreRsp_Value = 1000;
  bool has_addremotepatrolstorersp_value() const;
  void clear_addremotepatrolstorersp_value();
  static const int kAddRemotePatrolStoreRspValueFieldNumber = 1000;
  const ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp& addremotepatrolstorersp_value() const;
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* mutable_addremotepatrolstorersp_value();
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* release_addremotepatrolstorersp_value();
  void set_allocated_addremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* addremotepatrolstorersp_value);

  // .CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp DeleteRemotePatrolStoreRsp_Value = 1010;
  bool has_deleteremotepatrolstorersp_value() const;
  void clear_deleteremotepatrolstorersp_value();
  static const int kDeleteRemotePatrolStoreRspValueFieldNumber = 1010;
  const ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp& deleteremotepatrolstorersp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* mutable_deleteremotepatrolstorersp_value();
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* release_deleteremotepatrolstorersp_value();
  void set_allocated_deleteremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* deleteremotepatrolstorersp_value);

  // .CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp ModifyRemotePatrolStoreRsp_Value = 1020;
  bool has_modifyremotepatrolstorersp_value() const;
  void clear_modifyremotepatrolstorersp_value();
  static const int kModifyRemotePatrolStoreRspValueFieldNumber = 1020;
  const ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp& modifyremotepatrolstorersp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* mutable_modifyremotepatrolstorersp_value();
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* release_modifyremotepatrolstorersp_value();
  void set_allocated_modifyremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* modifyremotepatrolstorersp_value);

  // .CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp QueryRemotePatrolStoreInfoRsp_Value = 1030;
  bool has_queryremotepatrolstoreinforsp_value() const;
  void clear_queryremotepatrolstoreinforsp_value();
  static const int kQueryRemotePatrolStoreInfoRspValueFieldNumber = 1030;
  const ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp& queryremotepatrolstoreinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* mutable_queryremotepatrolstoreinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* release_queryremotepatrolstoreinforsp_value();
  void set_allocated_queryremotepatrolstoreinforsp_value(::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* queryremotepatrolstoreinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp QueryAllRemotePatrolStoreRsp_Value = 1040;
  bool has_queryallremotepatrolstorersp_value() const;
  void clear_queryallremotepatrolstorersp_value();
  static const int kQueryAllRemotePatrolStoreRspValueFieldNumber = 1040;
  const ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp& queryallremotepatrolstorersp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* mutable_queryallremotepatrolstorersp_value();
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* release_queryallremotepatrolstorersp_value();
  void set_allocated_queryallremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* queryallremotepatrolstorersp_value);

  // .CustomerFlow.Interactive.Message.AddAreaRsp AddAreaRsp_Value = 1100;
  bool has_addarearsp_value() const;
  void clear_addarearsp_value();
  static const int kAddAreaRspValueFieldNumber = 1100;
  const ::CustomerFlow::Interactive::Message::AddAreaRsp& addarearsp_value() const;
  ::CustomerFlow::Interactive::Message::AddAreaRsp* mutable_addarearsp_value();
  ::CustomerFlow::Interactive::Message::AddAreaRsp* release_addarearsp_value();
  void set_allocated_addarearsp_value(::CustomerFlow::Interactive::Message::AddAreaRsp* addarearsp_value);

  // .CustomerFlow.Interactive.Message.DeleteAreaRsp DeleteAreaRsp_Value = 1110;
  bool has_deletearearsp_value() const;
  void clear_deletearearsp_value();
  static const int kDeleteAreaRspValueFieldNumber = 1110;
  const ::CustomerFlow::Interactive::Message::DeleteAreaRsp& deletearearsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteAreaRsp* mutable_deletearearsp_value();
  ::CustomerFlow::Interactive::Message::DeleteAreaRsp* release_deletearearsp_value();
  void set_allocated_deletearearsp_value(::CustomerFlow::Interactive::Message::DeleteAreaRsp* deletearearsp_value);

  // .CustomerFlow.Interactive.Message.ModifyAreaRsp ModifyAreaRsp_Value = 1120;
  bool has_modifyarearsp_value() const;
  void clear_modifyarearsp_value();
  static const int kModifyAreaRspValueFieldNumber = 1120;
  const ::CustomerFlow::Interactive::Message::ModifyAreaRsp& modifyarearsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyAreaRsp* mutable_modifyarearsp_value();
  ::CustomerFlow::Interactive::Message::ModifyAreaRsp* release_modifyarearsp_value();
  void set_allocated_modifyarearsp_value(::CustomerFlow::Interactive::Message::ModifyAreaRsp* modifyarearsp_value);

  // .CustomerFlow.Interactive.Message.QueryAreaInfoRsp QueryAreaInfoRsp_Value = 1130;
  bool has_queryareainforsp_value() const;
  void clear_queryareainforsp_value();
  static const int kQueryAreaInfoRspValueFieldNumber = 1130;
  const ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp& queryareainforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* mutable_queryareainforsp_value();
  ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* release_queryareainforsp_value();
  void set_allocated_queryareainforsp_value(::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* queryareainforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllAreaRsp QueryAllAreaRsp_Value = 1140;
  bool has_queryallarearsp_value() const;
  void clear_queryallarearsp_value();
  static const int kQueryAllAreaRspValueFieldNumber = 1140;
  const ::CustomerFlow::Interactive::Message::QueryAllAreaRsp& queryallarearsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllAreaRsp* mutable_queryallarearsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllAreaRsp* release_queryallarearsp_value();
  void set_allocated_queryallarearsp_value(::CustomerFlow::Interactive::Message::QueryAllAreaRsp* queryallarearsp_value);

  // .CustomerFlow.Interactive.Message.BindPushClientIDRsp BindPushClientIDRsp_Value = 1150;
  bool has_bindpushclientidrsp_value() const;
  void clear_bindpushclientidrsp_value();
  static const int kBindPushClientIDRspValueFieldNumber = 1150;
  const ::CustomerFlow::Interactive::Message::BindPushClientIDRsp& bindpushclientidrsp_value() const;
  ::CustomerFlow::Interactive::Message::BindPushClientIDRsp* mutable_bindpushclientidrsp_value();
  ::CustomerFlow::Interactive::Message::BindPushClientIDRsp* release_bindpushclientidrsp_value();
  void set_allocated_bindpushclientidrsp_value(::CustomerFlow::Interactive::Message::BindPushClientIDRsp* bindpushclientidrsp_value);

  // .CustomerFlow.Interactive.Message.UnbindPushClientIDRsp UnbindPushClientIDRsp_Value = 1160;
  bool has_unbindpushclientidrsp_value() const;
  void clear_unbindpushclientidrsp_value();
  static const int kUnbindPushClientIDRspValueFieldNumber = 1160;
  const ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp& unbindpushclientidrsp_value() const;
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* mutable_unbindpushclientidrsp_value();
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* release_unbindpushclientidrsp_value();
  void set_allocated_unbindpushclientidrsp_value(::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* unbindpushclientidrsp_value);

  // .CustomerFlow.Interactive.Message.AddStoreSensorRsp AddStoreSensorRsp_Value = 1200;
  bool has_addstoresensorrsp_value() const;
  void clear_addstoresensorrsp_value();
  static const int kAddStoreSensorRspValueFieldNumber = 1200;
  const ::CustomerFlow::Interactive::Message::AddStoreSensorRsp& addstoresensorrsp_value() const;
  ::CustomerFlow::Interactive::Message::AddStoreSensorRsp* mutable_addstoresensorrsp_value();
  ::CustomerFlow::Interactive::Message::AddStoreSensorRsp* release_addstoresensorrsp_value();
  void set_allocated_addstoresensorrsp_value(::CustomerFlow::Interactive::Message::AddStoreSensorRsp* addstoresensorrsp_value);

  // .CustomerFlow.Interactive.Message.DeleteStoreSensorRsp DeleteStoreSensorRsp_Value = 1210;
  bool has_deletestoresensorrsp_value() const;
  void clear_deletestoresensorrsp_value();
  static const int kDeleteStoreSensorRspValueFieldNumber = 1210;
  const ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp& deletestoresensorrsp_value() const;
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* mutable_deletestoresensorrsp_value();
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* release_deletestoresensorrsp_value();
  void set_allocated_deletestoresensorrsp_value(::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* deletestoresensorrsp_value);

  // .CustomerFlow.Interactive.Message.ModifyStoreSensorRsp ModifyStoreSensorRsp_Value = 1220;
  bool has_modifystoresensorrsp_value() const;
  void clear_modifystoresensorrsp_value();
  static const int kModifyStoreSensorRspValueFieldNumber = 1220;
  const ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp& modifystoresensorrsp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* mutable_modifystoresensorrsp_value();
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* release_modifystoresensorrsp_value();
  void set_allocated_modifystoresensorrsp_value(::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* modifystoresensorrsp_value);

  // .CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp QueryStoreSensorInfoRsp_Value = 1230;
  bool has_querystoresensorinforsp_value() const;
  void clear_querystoresensorinforsp_value();
  static const int kQueryStoreSensorInfoRspValueFieldNumber = 1230;
  const ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp& querystoresensorinforsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* mutable_querystoresensorinforsp_value();
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* release_querystoresensorinforsp_value();
  void set_allocated_querystoresensorinforsp_value(::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* querystoresensorinforsp_value);

  // .CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp QueryAllStoreSensorRsp_Value = 1240;
  bool has_queryallstoresensorrsp_value() const;
  void clear_queryallstoresensorrsp_value();
  static const int kQueryAllStoreSensorRspValueFieldNumber = 1240;
  const ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp& queryallstoresensorrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* mutable_queryallstoresensorrsp_value();
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* release_queryallstoresensorrsp_value();
  void set_allocated_queryallstoresensorrsp_value(::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* queryallstoresensorrsp_value);

  // .CustomerFlow.Interactive.Message.ImportPOSDataRsp ImportPOSDataRsp_Value = 2000;
  bool has_importposdatarsp_value() const;
  void clear_importposdatarsp_value();
  static const int kImportPOSDataRspValueFieldNumber = 2000;
  const ::CustomerFlow::Interactive::Message::ImportPOSDataRsp& importposdatarsp_value() const;
  ::CustomerFlow::Interactive::Message::ImportPOSDataRsp* mutable_importposdatarsp_value();
  ::CustomerFlow::Interactive::Message::ImportPOSDataRsp* release_importposdatarsp_value();
  void set_allocated_importposdatarsp_value(::CustomerFlow::Interactive::Message::ImportPOSDataRsp* importposdatarsp_value);

  // .CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp QueryCustomerFlowStatisticRsp_Value = 2900;
  bool has_querycustomerflowstatisticrsp_value() const;
  void clear_querycustomerflowstatisticrsp_value();
  static const int kQueryCustomerFlowStatisticRspValueFieldNumber = 2900;
  const ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp& querycustomerflowstatisticrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* mutable_querycustomerflowstatisticrsp_value();
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* release_querycustomerflowstatisticrsp_value();
  void set_allocated_querycustomerflowstatisticrsp_value(::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* querycustomerflowstatisticrsp_value);

  // .CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp QueryPatrolResultReportRsp_Value = 3000;
  bool has_querypatrolresultreportrsp_value() const;
  void clear_querypatrolresultreportrsp_value();
  static const int kQueryPatrolResultReportRspValueFieldNumber = 3000;
  const ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp& querypatrolresultreportrsp_value() const;
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* mutable_querypatrolresultreportrsp_value();
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* release_querypatrolresultreportrsp_value();
  void set_allocated_querypatrolresultreportrsp_value(::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* querypatrolresultreportrsp_value);

  // .CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp ReportCustomerFlowDataRsp_Value = 5000;
  bool has_reportcustomerflowdatarsp_value() const;
  void clear_reportcustomerflowdatarsp_value();
  static const int kReportCustomerFlowDataRspValueFieldNumber = 5000;
  const ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp& reportcustomerflowdatarsp_value() const;
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* mutable_reportcustomerflowdatarsp_value();
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* release_reportcustomerflowdatarsp_value();
  void set_allocated_reportcustomerflowdatarsp_value(::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* reportcustomerflowdatarsp_value);

  // .CustomerFlow.Interactive.Message.ReportSensorInfoRsp ReportSensorInfoRsp_Value = 5100;
  bool has_reportsensorinforsp_value() const;
  void clear_reportsensorinforsp_value();
  static const int kReportSensorInfoRspValueFieldNumber = 5100;
  const ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp& reportsensorinforsp_value() const;
  ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* mutable_reportsensorinforsp_value();
  ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* release_reportsensorinforsp_value();
  void set_allocated_reportsensorinforsp_value(::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* reportsensorinforsp_value);

  // .CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp ReportSensorAlarmInfoRsp_Value = 5110;
  bool has_reportsensoralarminforsp_value() const;
  void clear_reportsensoralarminforsp_value();
  static const int kReportSensorAlarmInfoRspValueFieldNumber = 5110;
  const ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp& reportsensoralarminforsp_value() const;
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* mutable_reportsensoralarminforsp_value();
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* release_reportsensoralarminforsp_value();
  void set_allocated_reportsensoralarminforsp_value(::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* reportsensoralarminforsp_value);

  // .CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp QuerySensorAlarmThresholdRsp_Value = 5120;
  bool has_querysensoralarmthresholdrsp_value() const;
  void clear_querysensoralarmthresholdrsp_value();
  static const int kQuerySensorAlarmThresholdRspValueFieldNumber = 5120;
  const ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp& querysensoralarmthresholdrsp_value() const;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* mutable_querysensoralarmthresholdrsp_value();
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* release_querysensoralarmthresholdrsp_value();
  void set_allocated_querysensoralarmthresholdrsp_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* querysensoralarmthresholdrsp_value);

  // .CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp RemoveSensorRecordsRsp_Value = 5130;
  bool has_removesensorrecordsrsp_value() const;
  void clear_removesensorrecordsrsp_value();
  static const int kRemoveSensorRecordsRspValueFieldNumber = 5130;
  const ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp& removesensorrecordsrsp_value() const;
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* mutable_removesensorrecordsrsp_value();
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* release_removesensorrecordsrsp_value();
  void set_allocated_removesensorrecordsrsp_value(::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* removesensorrecordsrsp_value);

  // .CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp RemoveSensorAlarmRecordsRsp_Value = 5140;
  bool has_removesensoralarmrecordsrsp_value() const;
  void clear_removesensoralarmrecordsrsp_value();
  static const int kRemoveSensorAlarmRecordsRspValueFieldNumber = 5140;
  const ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp& removesensoralarmrecordsrsp_value() const;
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* mutable_removesensoralarmrecordsrsp_value();
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* release_removesensoralarmrecordsrsp_value();
  void set_allocated_removesensoralarmrecordsrsp_value(::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* removesensoralarmrecordsrsp_value);

  // .CustomerFlow.Interactive.Message.QuerySensorRecordsRsp QuerySensorRecordsRsp_Value = 5150;
  bool has_querysensorrecordsrsp_value() const;
  void clear_querysensorrecordsrsp_value();
  static const int kQuerySensorRecordsRspValueFieldNumber = 5150;
  const ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp& querysensorrecordsrsp_value() const;
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* mutable_querysensorrecordsrsp_value();
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* release_querysensorrecordsrsp_value();
  void set_allocated_querysensorrecordsrsp_value(::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* querysensorrecordsrsp_value);

  // .CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp QuerySensorAlarmRecordsRsp_Value = 5160;
  bool has_querysensoralarmrecordsrsp_value() const;
  void clear_querysensoralarmrecordsrsp_value();
  static const int kQuerySensorAlarmRecordsRspValueFieldNumber = 5160;
  const ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp& querysensoralarmrecordsrsp_value() const;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* mutable_querysensoralarmrecordsrsp_value();
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* release_querysensoralarmrecordsrsp_value();
  void set_allocated_querysensoralarmrecordsrsp_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* querysensoralarmrecordsrsp_value);

  // .CustomerFlow.Interactive.Message.AddRoleRsp AddRoleRsp_Value = 5170;
  bool has_addrolersp_value() const;
  void clear_addrolersp_value();
  static const int kAddRoleRspValueFieldNumber = 5170;
  const ::CustomerFlow::Interactive::Message::AddRoleRsp& addrolersp_value() const;
  ::CustomerFlow::Interactive::Message::AddRoleRsp* mutable_addrolersp_value();
  ::CustomerFlow::Interactive::Message::AddRoleRsp* release_addrolersp_value();
  void set_allocated_addrolersp_value(::CustomerFlow::Interactive::Message::AddRoleRsp* addrolersp_value);

  // .CustomerFlow.Interactive.Message.RemoveRoleRsp RemoveRoleRsp_Value = 5180;
  bool has_removerolersp_value() const;
  void clear_removerolersp_value();
  static const int kRemoveRoleRspValueFieldNumber = 5180;
  const ::CustomerFlow::Interactive::Message::RemoveRoleRsp& removerolersp_value() const;
  ::CustomerFlow::Interactive::Message::RemoveRoleRsp* mutable_removerolersp_value();
  ::CustomerFlow::Interactive::Message::RemoveRoleRsp* release_removerolersp_value();
  void set_allocated_removerolersp_value(::CustomerFlow::Interactive::Message::RemoveRoleRsp* removerolersp_value);

  // .CustomerFlow.Interactive.Message.ModifyRoleRsp ModifyRoleRsp_Value = 5190;
  bool has_modifyrolersp_value() const;
  void clear_modifyrolersp_value();
  static const int kModifyRoleRspValueFieldNumber = 5190;
  const ::CustomerFlow::Interactive::Message::ModifyRoleRsp& modifyrolersp_value() const;
  ::CustomerFlow::Interactive::Message::ModifyRoleRsp* mutable_modifyrolersp_value();
  ::CustomerFlow::Interactive::Message::ModifyRoleRsp* release_modifyrolersp_value();
  void set_allocated_modifyrolersp_value(::CustomerFlow::Interactive::Message::ModifyRoleRsp* modifyrolersp_value);

  // .CustomerFlow.Interactive.Message.QueryRoleRsp QueryRoleRsp_Value = 5200;
  bool has_queryrolersp_value() const;
  void clear_queryrolersp_value();
  static const int kQueryRoleRspValueFieldNumber = 5200;
  const ::CustomerFlow::Interactive::Message::QueryRoleRsp& queryrolersp_value() const;
  ::CustomerFlow::Interactive::Message::QueryRoleRsp* mutable_queryrolersp_value();
  ::CustomerFlow::Interactive::Message::QueryRoleRsp* release_queryrolersp_value();
  void set_allocated_queryrolersp_value(::CustomerFlow::Interactive::Message::QueryRoleRsp* queryrolersp_value);

  // .CustomerFlow.Interactive.Message.QueryAllRoleRsp QueryAllRoleRsp_Value = 5210;
  bool has_queryallrolersp_value() const;
  void clear_queryallrolersp_value();
  static const int kQueryAllRoleRspValueFieldNumber = 5210;
  const ::CustomerFlow::Interactive::Message::QueryAllRoleRsp& queryallrolersp_value() const;
  ::CustomerFlow::Interactive::Message::QueryAllRoleRsp* mutable_queryallrolersp_value();
  ::CustomerFlow::Interactive::Message::QueryAllRoleRsp* release_queryallrolersp_value();
  void set_allocated_queryallrolersp_value(::CustomerFlow::Interactive::Message::QueryAllRoleRsp* queryallrolersp_value);

  // .CustomerFlow.Interactive.Message.UserBindRoleRsp UserBindRoleRsp_Value = 5220;
  bool has_userbindrolersp_value() const;
  void clear_userbindrolersp_value();
  static const int kUserBindRoleRspValueFieldNumber = 5220;
  const ::CustomerFlow::Interactive::Message::UserBindRoleRsp& userbindrolersp_value() const;
  ::CustomerFlow::Interactive::Message::UserBindRoleRsp* mutable_userbindrolersp_value();
  ::CustomerFlow::Interactive::Message::UserBindRoleRsp* release_userbindrolersp_value();
  void set_allocated_userbindrolersp_value(::CustomerFlow::Interactive::Message::UserBindRoleRsp* userbindrolersp_value);

  // int32 iRetcode = 1;
  void clear_iretcode();
  static const int kIRetcodeFieldNumber = 1;
  ::google::protobuf::int32 iretcode() const;
  void set_iretcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strretmsg_;
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* customerflowprehandlersp_value_;
  ::CustomerFlow::Interactive::Message::ShakehandRsp* shakehandrsp_value_;
  ::CustomerFlow::Interactive::Message::AddGroupRsp* addgrouprsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteGroupRsp* deletegrouprsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyGroupRsp* modifygrouprsp_value_;
  ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* querygroupinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllGroupRsp* queryallgrouprsp_value_;
  ::CustomerFlow::Interactive::Message::AddStoreRsp* addstorersp_value_;
  ::CustomerFlow::Interactive::Message::DeleteStoreRsp* deletestorersp_value_;
  ::CustomerFlow::Interactive::Message::ModifyStoreRsp* modifystorersp_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* querystoreinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllStoreRsp* queryallstorersp_value_;
  ::CustomerFlow::Interactive::Message::AddEntranceRsp* addentrancersp_value_;
  ::CustomerFlow::Interactive::Message::DeleteEntranceRsp* deleteentrancersp_value_;
  ::CustomerFlow::Interactive::Message::ModifyEntranceRsp* modifyentrancersp_value_;
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* addentrancedevicersp_value_;
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* deleteentrancedevicersp_value_;
  ::CustomerFlow::Interactive::Message::AddEventRsp* addeventrsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteEventRsp* deleteeventrsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyEventRsp* modifyeventrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryEventInfoRsp* queryeventinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllEventRsp* queryalleventrsp_value_;
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* addsmartguardstorersp_value_;
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* deletesmartguardstorersp_value_;
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* modifysmartguardstorersp_value_;
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* querysmartguardstoreinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* queryallsmartguardstorersp_value_;
  ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* addregularpatrolrsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* deleteregularpatrolrsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* modifyregularpatrolrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* queryregularpatrolinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* queryallregularpatrolrsp_value_;
  ::CustomerFlow::Interactive::Message::UserJoinStoreRsp* userjoinstorersp_value_;
  ::CustomerFlow::Interactive::Message::UserQuitStoreRsp* userquitstorersp_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* querystorealluserrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* querycompanyalluserrsp_value_;
  ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* addvipcustomerrsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* deletevipcustomerrsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* modifyvipcustomerrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* queryvipcustomerinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* queryallvipcustomerrsp_value_;
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* addvipconsumehistoryrsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* deletevipconsumehistoryrsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* modifyvipconsumehistoryrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* queryallvipconsumehistoryrsp_value_;
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* addevaluationtemplatersp_value_;
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* deleteevaluationtemplatersp_value_;
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* modifyevaluationtemplatersp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* queryallevaluationtemplatersp_value_;
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* addstoreevaluationrsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* deletestoreevaluationrsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* modifystoreevaluationrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* querystoreevaluationinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* queryallstoreevaluationrsp_value_;
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* addremotepatrolstorersp_value_;
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* deleteremotepatrolstorersp_value_;
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* modifyremotepatrolstorersp_value_;
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* queryremotepatrolstoreinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* queryallremotepatrolstorersp_value_;
  ::CustomerFlow::Interactive::Message::AddAreaRsp* addarearsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteAreaRsp* deletearearsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyAreaRsp* modifyarearsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* queryareainforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllAreaRsp* queryallarearsp_value_;
  ::CustomerFlow::Interactive::Message::BindPushClientIDRsp* bindpushclientidrsp_value_;
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* unbindpushclientidrsp_value_;
  ::CustomerFlow::Interactive::Message::AddStoreSensorRsp* addstoresensorrsp_value_;
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* deletestoresensorrsp_value_;
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* modifystoresensorrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* querystoresensorinforsp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* queryallstoresensorrsp_value_;
  ::CustomerFlow::Interactive::Message::ImportPOSDataRsp* importposdatarsp_value_;
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* querycustomerflowstatisticrsp_value_;
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* querypatrolresultreportrsp_value_;
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* reportcustomerflowdatarsp_value_;
  ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* reportsensorinforsp_value_;
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* reportsensoralarminforsp_value_;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* querysensoralarmthresholdrsp_value_;
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* removesensorrecordsrsp_value_;
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* removesensoralarmrecordsrsp_value_;
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* querysensorrecordsrsp_value_;
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* querysensoralarmrecordsrsp_value_;
  ::CustomerFlow::Interactive::Message::AddRoleRsp* addrolersp_value_;
  ::CustomerFlow::Interactive::Message::RemoveRoleRsp* removerolersp_value_;
  ::CustomerFlow::Interactive::Message::ModifyRoleRsp* modifyrolersp_value_;
  ::CustomerFlow::Interactive::Message::QueryRoleRsp* queryrolersp_value_;
  ::CustomerFlow::Interactive::Message::QueryAllRoleRsp* queryallrolersp_value_;
  ::CustomerFlow::Interactive::Message::UserBindRoleRsp* userbindrolersp_value_;
  ::google::protobuf::int32 iretcode_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomerFlowMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CustomerFlow.Interactive.Message.CustomerFlowMessage) */ {
 public:
  CustomerFlowMessage();
  virtual ~CustomerFlowMessage();

  CustomerFlowMessage(const CustomerFlowMessage& from);

  inline CustomerFlowMessage& operator=(const CustomerFlowMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomerFlowMessage& default_instance();

  static inline const CustomerFlowMessage* internal_default_instance() {
    return reinterpret_cast<const CustomerFlowMessage*>(
               &_CustomerFlowMessage_default_instance_);
  }

  void Swap(CustomerFlowMessage* other);

  // implements Message ----------------------------------------------

  inline CustomerFlowMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomerFlowMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomerFlowMessage& from);
  void MergeFrom(const CustomerFlowMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomerFlowMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strSID = 3;
  void clear_strsid();
  static const int kStrSIDFieldNumber = 3;
  const ::std::string& strsid() const;
  void set_strsid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsid(::std::string&& value);
  #endif
  void set_strsid(const char* value);
  void set_strsid(const char* value, size_t size);
  ::std::string* mutable_strsid();
  ::std::string* release_strsid();
  void set_allocated_strsid(::std::string* strsid);

  // .CustomerFlow.Interactive.Message.Request reqValue = 4;
  bool has_reqvalue() const;
  void clear_reqvalue();
  static const int kReqValueFieldNumber = 4;
  const ::CustomerFlow::Interactive::Message::Request& reqvalue() const;
  ::CustomerFlow::Interactive::Message::Request* mutable_reqvalue();
  ::CustomerFlow::Interactive::Message::Request* release_reqvalue();
  void set_allocated_reqvalue(::CustomerFlow::Interactive::Message::Request* reqvalue);

  // .CustomerFlow.Interactive.Message.Response rspValue = 5;
  bool has_rspvalue() const;
  void clear_rspvalue();
  static const int kRspValueFieldNumber = 5;
  const ::CustomerFlow::Interactive::Message::Response& rspvalue() const;
  ::CustomerFlow::Interactive::Message::Response* mutable_rspvalue();
  ::CustomerFlow::Interactive::Message::Response* release_rspvalue();
  void set_allocated_rspvalue(::CustomerFlow::Interactive::Message::Response* rspvalue);

  // uint64 uiMsgSeq = 2;
  void clear_uimsgseq();
  static const int kUiMsgSeqFieldNumber = 2;
  ::google::protobuf::uint64 uimsgseq() const;
  void set_uimsgseq(::google::protobuf::uint64 value);

  // .CustomerFlow.Interactive.Message.CustomerFlowMsgType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::CustomerFlow::Interactive::Message::CustomerFlowMsgType type() const;
  void set_type(::CustomerFlow::Interactive::Message::CustomerFlowMsgType value);

  // @@protoc_insertion_point(class_scope:CustomerFlow.Interactive.Message.CustomerFlowMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsid_;
  ::CustomerFlow::Interactive::Message::Request* reqvalue_;
  ::CustomerFlow::Interactive::Message::Response* rspvalue_;
  ::google::protobuf::uint64 uimsgseq_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocolCustomerFlow_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Area

// string strAreaID = 1;
inline void Area::clear_strareaid() {
  strareaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Area::strareaid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.strAreaID)
  return strareaid_.GetNoArena();
}
inline void Area::set_strareaid(const ::std::string& value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.strAreaID)
}
#if LANG_CXX11
inline void Area::set_strareaid(::std::string&& value) {
  
  strareaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Area.strAreaID)
}
#endif
inline void Area::set_strareaid(const char* value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Area.strAreaID)
}
inline void Area::set_strareaid(const char* value, size_t size) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Area.strAreaID)
}
inline ::std::string* Area::mutable_strareaid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Area.strAreaID)
  return strareaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Area::release_strareaid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Area.strAreaID)
  
  return strareaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Area::set_allocated_strareaid(::std::string* strareaid) {
  if (strareaid != NULL) {
    
  } else {
    
  }
  strareaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strareaid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Area.strAreaID)
}

// string strAreaName = 2;
inline void Area::clear_strareaname() {
  strareaname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Area::strareaname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.strAreaName)
  return strareaname_.GetNoArena();
}
inline void Area::set_strareaname(const ::std::string& value) {
  
  strareaname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.strAreaName)
}
#if LANG_CXX11
inline void Area::set_strareaname(::std::string&& value) {
  
  strareaname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Area.strAreaName)
}
#endif
inline void Area::set_strareaname(const char* value) {
  
  strareaname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Area.strAreaName)
}
inline void Area::set_strareaname(const char* value, size_t size) {
  
  strareaname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Area.strAreaName)
}
inline ::std::string* Area::mutable_strareaname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Area.strAreaName)
  return strareaname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Area::release_strareaname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Area.strAreaName)
  
  return strareaname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Area::set_allocated_strareaname(::std::string* strareaname) {
  if (strareaname != NULL) {
    
  } else {
    
  }
  strareaname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strareaname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Area.strAreaName)
}

// uint32 uiLevel = 3;
inline void Area::clear_uilevel() {
  uilevel_ = 0u;
}
inline ::google::protobuf::uint32 Area::uilevel() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.uiLevel)
  return uilevel_;
}
inline void Area::set_uilevel(::google::protobuf::uint32 value) {
  
  uilevel_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.uiLevel)
}

// string strParentAreaID = 4;
inline void Area::clear_strparentareaid() {
  strparentareaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Area::strparentareaid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.strParentAreaID)
  return strparentareaid_.GetNoArena();
}
inline void Area::set_strparentareaid(const ::std::string& value) {
  
  strparentareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.strParentAreaID)
}
#if LANG_CXX11
inline void Area::set_strparentareaid(::std::string&& value) {
  
  strparentareaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Area.strParentAreaID)
}
#endif
inline void Area::set_strparentareaid(const char* value) {
  
  strparentareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Area.strParentAreaID)
}
inline void Area::set_strparentareaid(const char* value, size_t size) {
  
  strparentareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Area.strParentAreaID)
}
inline ::std::string* Area::mutable_strparentareaid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Area.strParentAreaID)
  return strparentareaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Area::release_strparentareaid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Area.strParentAreaID)
  
  return strparentareaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Area::set_allocated_strparentareaid(::std::string* strparentareaid) {
  if (strparentareaid != NULL) {
    
  } else {
    
  }
  strparentareaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strparentareaid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Area.strParentAreaID)
}

// uint32 uiState = 5;
inline void Area::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 Area::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.uiState)
  return uistate_;
}
inline void Area::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.uiState)
}

// string strCreateDate = 6;
inline void Area::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Area::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void Area::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.strCreateDate)
}
#if LANG_CXX11
inline void Area::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Area.strCreateDate)
}
#endif
inline void Area::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Area.strCreateDate)
}
inline void Area::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Area.strCreateDate)
}
inline ::std::string* Area::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Area.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Area::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Area.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Area::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Area.strCreateDate)
}

// string strExtend = 7;
inline void Area::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Area::strextend() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Area.strExtend)
  return strextend_.GetNoArena();
}
inline void Area::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Area.strExtend)
}
#if LANG_CXX11
inline void Area::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Area.strExtend)
}
#endif
inline void Area::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Area.strExtend)
}
inline void Area::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Area.strExtend)
}
inline ::std::string* Area::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Area.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Area::release_strextend() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Area.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Area::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Area.strExtend)
}

// -------------------------------------------------------------------

// Group

// string strGroupID = 1;
inline void Group::clear_strgroupid() {
  strgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::strgroupid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Group.strGroupID)
  return strgroupid_.GetNoArena();
}
inline void Group::set_strgroupid(const ::std::string& value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Group.strGroupID)
}
#if LANG_CXX11
inline void Group::set_strgroupid(::std::string&& value) {
  
  strgroupid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Group.strGroupID)
}
#endif
inline void Group::set_strgroupid(const char* value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Group.strGroupID)
}
inline void Group::set_strgroupid(const char* value, size_t size) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Group.strGroupID)
}
inline ::std::string* Group::mutable_strgroupid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Group.strGroupID)
  return strgroupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_strgroupid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Group.strGroupID)
  
  return strgroupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_strgroupid(::std::string* strgroupid) {
  if (strgroupid != NULL) {
    
  } else {
    
  }
  strgroupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Group.strGroupID)
}

// string strGroupName = 2;
inline void Group::clear_strgroupname() {
  strgroupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::strgroupname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Group.strGroupName)
  return strgroupname_.GetNoArena();
}
inline void Group::set_strgroupname(const ::std::string& value) {
  
  strgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Group.strGroupName)
}
#if LANG_CXX11
inline void Group::set_strgroupname(::std::string&& value) {
  
  strgroupname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Group.strGroupName)
}
#endif
inline void Group::set_strgroupname(const char* value) {
  
  strgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Group.strGroupName)
}
inline void Group::set_strgroupname(const char* value, size_t size) {
  
  strgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Group.strGroupName)
}
inline ::std::string* Group::mutable_strgroupname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Group.strGroupName)
  return strgroupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_strgroupname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Group.strGroupName)
  
  return strgroupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_strgroupname(::std::string* strgroupname) {
  if (strgroupname != NULL) {
    
  } else {
    
  }
  strgroupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Group.strGroupName)
}

// string strCreateDate = 3;
inline void Group::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Group.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void Group::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Group.strCreateDate)
}
#if LANG_CXX11
inline void Group::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Group.strCreateDate)
}
#endif
inline void Group::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Group.strCreateDate)
}
inline void Group::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Group.strCreateDate)
}
inline ::std::string* Group::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Group.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Group.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Group.strCreateDate)
}

// string strExtend = 4;
inline void Group::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::strextend() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Group.strExtend)
  return strextend_.GetNoArena();
}
inline void Group::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Group.strExtend)
}
#if LANG_CXX11
inline void Group::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Group.strExtend)
}
#endif
inline void Group::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Group.strExtend)
}
inline void Group::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Group.strExtend)
}
inline ::std::string* Group::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Group.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_strextend() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Group.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Group.strExtend)
}

// uint32 uiState = 5;
inline void Group::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 Group::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Group.uiState)
  return uistate_;
}
inline void Group::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Group.uiState)
}

// -------------------------------------------------------------------

// Entrance

// string strEntranceID = 1;
inline void Entrance::clear_strentranceid() {
  strentranceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entrance::strentranceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
  return strentranceid_.GetNoArena();
}
inline void Entrance::set_strentranceid(const ::std::string& value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
}
#if LANG_CXX11
inline void Entrance::set_strentranceid(::std::string&& value) {
  
  strentranceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
}
#endif
inline void Entrance::set_strentranceid(const char* value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
}
inline void Entrance::set_strentranceid(const char* value, size_t size) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
}
inline ::std::string* Entrance::mutable_strentranceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
  return strentranceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entrance::release_strentranceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
  
  return strentranceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entrance::set_allocated_strentranceid(::std::string* strentranceid) {
  if (strentranceid != NULL) {
    
  } else {
    
  }
  strentranceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentranceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Entrance.strEntranceID)
}

// string strEntranceName = 2;
inline void Entrance::clear_strentrancename() {
  strentrancename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entrance::strentrancename() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
  return strentrancename_.GetNoArena();
}
inline void Entrance::set_strentrancename(const ::std::string& value) {
  
  strentrancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
}
#if LANG_CXX11
inline void Entrance::set_strentrancename(::std::string&& value) {
  
  strentrancename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
}
#endif
inline void Entrance::set_strentrancename(const char* value) {
  
  strentrancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
}
inline void Entrance::set_strentrancename(const char* value, size_t size) {
  
  strentrancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
}
inline ::std::string* Entrance::mutable_strentrancename() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
  return strentrancename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entrance::release_strentrancename() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
  
  return strentrancename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entrance::set_allocated_strentrancename(::std::string* strentrancename) {
  if (strentrancename != NULL) {
    
  } else {
    
  }
  strentrancename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentrancename);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Entrance.strEntranceName)
}

// repeated string strDeviceID = 3;
inline int Entrance::strdeviceid_size() const {
  return strdeviceid_.size();
}
inline void Entrance::clear_strdeviceid() {
  strdeviceid_.Clear();
}
inline const ::std::string& Entrance::strdeviceid(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
  return strdeviceid_.Get(index);
}
inline ::std::string* Entrance::mutable_strdeviceid(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
  return strdeviceid_.Mutable(index);
}
inline void Entrance::set_strdeviceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
  strdeviceid_.Mutable(index)->assign(value);
}
inline void Entrance::set_strdeviceid(int index, const char* value) {
  strdeviceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
}
inline void Entrance::set_strdeviceid(int index, const char* value, size_t size) {
  strdeviceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
}
inline ::std::string* Entrance::add_strdeviceid() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
  return strdeviceid_.Add();
}
inline void Entrance::add_strdeviceid(const ::std::string& value) {
  strdeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
}
inline void Entrance::add_strdeviceid(const char* value) {
  strdeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
}
inline void Entrance::add_strdeviceid(const char* value, size_t size) {
  strdeviceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Entrance::strdeviceid() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
  return strdeviceid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Entrance::mutable_strdeviceid() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.Entrance.strDeviceID)
  return &strdeviceid_;
}

// string strPicture = 4;
inline void Entrance::clear_strpicture() {
  strpicture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entrance::strpicture() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Entrance.strPicture)
  return strpicture_.GetNoArena();
}
inline void Entrance::set_strpicture(const ::std::string& value) {
  
  strpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Entrance.strPicture)
}
#if LANG_CXX11
inline void Entrance::set_strpicture(::std::string&& value) {
  
  strpicture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Entrance.strPicture)
}
#endif
inline void Entrance::set_strpicture(const char* value) {
  
  strpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Entrance.strPicture)
}
inline void Entrance::set_strpicture(const char* value, size_t size) {
  
  strpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Entrance.strPicture)
}
inline ::std::string* Entrance::mutable_strpicture() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Entrance.strPicture)
  return strpicture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entrance::release_strpicture() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Entrance.strPicture)
  
  return strpicture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entrance::set_allocated_strpicture(::std::string* strpicture) {
  if (strpicture != NULL) {
    
  } else {
    
  }
  strpicture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpicture);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Entrance.strPicture)
}

// -------------------------------------------------------------------

// Store

// string strStoreID = 1;
inline void Store::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Store::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void Store::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strStoreID)
}
#if LANG_CXX11
inline void Store::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Store.strStoreID)
}
#endif
inline void Store::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strStoreID)
}
inline void Store::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strStoreID)
}
inline ::std::string* Store::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.strStoreID)
}

// string strStoreName = 2;
inline void Store::clear_strstorename() {
  strstorename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Store::strstorename() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strStoreName)
  return strstorename_.GetNoArena();
}
inline void Store::set_strstorename(const ::std::string& value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strStoreName)
}
#if LANG_CXX11
inline void Store::set_strstorename(::std::string&& value) {
  
  strstorename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Store.strStoreName)
}
#endif
inline void Store::set_strstorename(const char* value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strStoreName)
}
inline void Store::set_strstorename(const char* value, size_t size) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strStoreName)
}
inline ::std::string* Store::mutable_strstorename() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strStoreName)
  return strstorename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_strstorename() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.strStoreName)
  
  return strstorename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_strstorename(::std::string* strstorename) {
  if (strstorename != NULL) {
    
  } else {
    
  }
  strstorename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorename);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.strStoreName)
}

// string strGoodsCategory = 3;
inline void Store::clear_strgoodscategory() {
  strgoodscategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Store::strgoodscategory() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
  return strgoodscategory_.GetNoArena();
}
inline void Store::set_strgoodscategory(const ::std::string& value) {
  
  strgoodscategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
}
#if LANG_CXX11
inline void Store::set_strgoodscategory(::std::string&& value) {
  
  strgoodscategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
}
#endif
inline void Store::set_strgoodscategory(const char* value) {
  
  strgoodscategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
}
inline void Store::set_strgoodscategory(const char* value, size_t size) {
  
  strgoodscategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
}
inline ::std::string* Store::mutable_strgoodscategory() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
  return strgoodscategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_strgoodscategory() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
  
  return strgoodscategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_strgoodscategory(::std::string* strgoodscategory) {
  if (strgoodscategory != NULL) {
    
  } else {
    
  }
  strgoodscategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgoodscategory);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.strGoodsCategory)
}

// string strAddress = 4;
inline void Store::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Store::straddress() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strAddress)
  return straddress_.GetNoArena();
}
inline void Store::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strAddress)
}
#if LANG_CXX11
inline void Store::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Store.strAddress)
}
#endif
inline void Store::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strAddress)
}
inline void Store::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strAddress)
}
inline ::std::string* Store::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_straddress() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.strAddress)
}

// repeated .CustomerFlow.Interactive.Message.Entrance entrance = 5;
inline int Store::entrance_size() const {
  return entrance_.size();
}
inline void Store::clear_entrance() {
  entrance_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Entrance& Store::entrance(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.entrance)
  return entrance_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Entrance* Store::mutable_entrance(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.entrance)
  return entrance_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Entrance* Store::add_entrance() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.Store.entrance)
  return entrance_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >*
Store::mutable_entrance() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.Store.entrance)
  return &entrance_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >&
Store::entrance() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.Store.entrance)
  return entrance_;
}

// .CustomerFlow.Interactive.Message.Area area = 6;
inline bool Store::has_area() const {
  return this != internal_default_instance() && area_ != NULL;
}
inline void Store::clear_area() {
  if (GetArenaNoVirtual() == NULL && area_ != NULL) delete area_;
  area_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Area& Store::area() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.area)
  return area_ != NULL ? *area_
                         : *::CustomerFlow::Interactive::Message::Area::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Area* Store::mutable_area() {
  
  if (area_ == NULL) {
    area_ = new ::CustomerFlow::Interactive::Message::Area;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.area)
  return area_;
}
inline ::CustomerFlow::Interactive::Message::Area* Store::release_area() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.area)
  
  ::CustomerFlow::Interactive::Message::Area* temp = area_;
  area_ = NULL;
  return temp;
}
inline void Store::set_allocated_area(::CustomerFlow::Interactive::Message::Area* area) {
  delete area_;
  area_ = area;
  if (area) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.area)
}

// string strCreateDate = 7;
inline void Store::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Store::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void Store::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strCreateDate)
}
#if LANG_CXX11
inline void Store::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Store.strCreateDate)
}
#endif
inline void Store::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strCreateDate)
}
inline void Store::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strCreateDate)
}
inline ::std::string* Store::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.strCreateDate)
}

// string strExtend = 8;
inline void Store::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Store::strextend() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strExtend)
  return strextend_.GetNoArena();
}
inline void Store::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strExtend)
}
#if LANG_CXX11
inline void Store::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Store.strExtend)
}
#endif
inline void Store::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strExtend)
}
inline void Store::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strExtend)
}
inline ::std::string* Store::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_strextend() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Store.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Store.strExtend)
}

// uint32 uiState = 9;
inline void Store::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 Store::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.uiState)
  return uistate_;
}
inline void Store::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.uiState)
}

// uint32 uiOpenState = 10;
inline void Store::clear_uiopenstate() {
  uiopenstate_ = 0u;
}
inline ::google::protobuf::uint32 Store::uiopenstate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.uiOpenState)
  return uiopenstate_;
}
inline void Store::set_uiopenstate(::google::protobuf::uint32 value) {
  
  uiopenstate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.uiOpenState)
}

// repeated string strTelephone = 11;
inline int Store::strtelephone_size() const {
  return strtelephone_.size();
}
inline void Store::clear_strtelephone() {
  strtelephone_.Clear();
}
inline const ::std::string& Store::strtelephone(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Store.strTelephone)
  return strtelephone_.Get(index);
}
inline ::std::string* Store::mutable_strtelephone(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Store.strTelephone)
  return strtelephone_.Mutable(index);
}
inline void Store::set_strtelephone(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Store.strTelephone)
  strtelephone_.Mutable(index)->assign(value);
}
inline void Store::set_strtelephone(int index, const char* value) {
  strtelephone_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Store.strTelephone)
}
inline void Store::set_strtelephone(int index, const char* value, size_t size) {
  strtelephone_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Store.strTelephone)
}
inline ::std::string* Store::add_strtelephone() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.Store.strTelephone)
  return strtelephone_.Add();
}
inline void Store::add_strtelephone(const ::std::string& value) {
  strtelephone_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.Store.strTelephone)
}
inline void Store::add_strtelephone(const char* value) {
  strtelephone_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.Store.strTelephone)
}
inline void Store::add_strtelephone(const char* value, size_t size) {
  strtelephone_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.Store.strTelephone)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Store::strtelephone() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.Store.strTelephone)
  return strtelephone_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Store::mutable_strtelephone() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.Store.strTelephone)
  return &strtelephone_;
}

// -------------------------------------------------------------------

// UserGroupAssociation

// string strUserID = 1;
inline void UserGroupAssociation::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserGroupAssociation::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
  return struserid_.GetNoArena();
}
inline void UserGroupAssociation::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
}
#if LANG_CXX11
inline void UserGroupAssociation::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
}
#endif
inline void UserGroupAssociation::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
}
inline void UserGroupAssociation::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
}
inline ::std::string* UserGroupAssociation::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGroupAssociation::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGroupAssociation::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserID)
}

// string strGroupID = 2;
inline void UserGroupAssociation::clear_strgroupid() {
  strgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserGroupAssociation::strgroupid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
  return strgroupid_.GetNoArena();
}
inline void UserGroupAssociation::set_strgroupid(const ::std::string& value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
}
#if LANG_CXX11
inline void UserGroupAssociation::set_strgroupid(::std::string&& value) {
  
  strgroupid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
}
#endif
inline void UserGroupAssociation::set_strgroupid(const char* value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
}
inline void UserGroupAssociation::set_strgroupid(const char* value, size_t size) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
}
inline ::std::string* UserGroupAssociation::mutable_strgroupid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
  return strgroupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGroupAssociation::release_strgroupid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
  
  return strgroupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGroupAssociation::set_allocated_strgroupid(::std::string* strgroupid) {
  if (strgroupid != NULL) {
    
  } else {
    
  }
  strgroupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserGroupAssociation.strGroupID)
}

// string strUserRole = 3;
inline void UserGroupAssociation::clear_struserrole() {
  struserrole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserGroupAssociation::struserrole() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
  return struserrole_.GetNoArena();
}
inline void UserGroupAssociation::set_struserrole(const ::std::string& value) {
  
  struserrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
}
#if LANG_CXX11
inline void UserGroupAssociation::set_struserrole(::std::string&& value) {
  
  struserrole_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
}
#endif
inline void UserGroupAssociation::set_struserrole(const char* value) {
  
  struserrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
}
inline void UserGroupAssociation::set_struserrole(const char* value, size_t size) {
  
  struserrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
}
inline ::std::string* UserGroupAssociation::mutable_struserrole() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
  return struserrole_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGroupAssociation::release_struserrole() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
  
  return struserrole_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGroupAssociation::set_allocated_struserrole(::std::string* struserrole) {
  if (struserrole != NULL) {
    
  } else {
    
  }
  struserrole_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserrole);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserGroupAssociation.strUserRole)
}

// -------------------------------------------------------------------

// UserStoreAssociation

// string strUserID = 1;
inline void UserStoreAssociation::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserStoreAssociation::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
  return struserid_.GetNoArena();
}
inline void UserStoreAssociation::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
}
#if LANG_CXX11
inline void UserStoreAssociation::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
}
#endif
inline void UserStoreAssociation::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
}
inline void UserStoreAssociation::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
}
inline ::std::string* UserStoreAssociation::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserStoreAssociation::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserStoreAssociation::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserID)
}

// string strStoreID = 2;
inline void UserStoreAssociation::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserStoreAssociation::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void UserStoreAssociation::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
}
#if LANG_CXX11
inline void UserStoreAssociation::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
}
#endif
inline void UserStoreAssociation::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
}
inline void UserStoreAssociation::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
}
inline ::std::string* UserStoreAssociation::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserStoreAssociation::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserStoreAssociation::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserStoreAssociation.strStoreID)
}

// string strUserRole = 3;
inline void UserStoreAssociation::clear_struserrole() {
  struserrole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserStoreAssociation::struserrole() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
  return struserrole_.GetNoArena();
}
inline void UserStoreAssociation::set_struserrole(const ::std::string& value) {
  
  struserrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
}
#if LANG_CXX11
inline void UserStoreAssociation::set_struserrole(::std::string&& value) {
  
  struserrole_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
}
#endif
inline void UserStoreAssociation::set_struserrole(const char* value) {
  
  struserrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
}
inline void UserStoreAssociation::set_struserrole(const char* value, size_t size) {
  
  struserrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
}
inline ::std::string* UserStoreAssociation::mutable_struserrole() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
  return struserrole_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserStoreAssociation::release_struserrole() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
  
  return struserrole_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserStoreAssociation::set_allocated_struserrole(::std::string* struserrole) {
  if (struserrole != NULL) {
    
  } else {
    
  }
  struserrole_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserrole);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserStoreAssociation.strUserRole)
}

// -------------------------------------------------------------------

// Event

// string strEventID = 1;
inline void Event::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::streventid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strEventID)
  return streventid_.GetNoArena();
}
inline void Event::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strEventID)
}
#if LANG_CXX11
inline void Event::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strEventID)
}
#endif
inline void Event::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strEventID)
}
inline void Event::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strEventID)
}
inline ::std::string* Event::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_streventid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strEventID)
}

// string strSource = 2;
inline void Event::clear_strsource() {
  strsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strsource() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strSource)
  return strsource_.GetNoArena();
}
inline void Event::set_strsource(const ::std::string& value) {
  
  strsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strSource)
}
#if LANG_CXX11
inline void Event::set_strsource(::std::string&& value) {
  
  strsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strSource)
}
#endif
inline void Event::set_strsource(const char* value) {
  
  strsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strSource)
}
inline void Event::set_strsource(const char* value, size_t size) {
  
  strsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strSource)
}
inline ::std::string* Event::mutable_strsource() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strSource)
  return strsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strsource() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strSource)
  
  return strsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strsource(::std::string* strsource) {
  if (strsource != NULL) {
    
  } else {
    
  }
  strsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsource);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strSource)
}

// string strSubmitDate = 3;
inline void Event::clear_strsubmitdate() {
  strsubmitdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strsubmitdate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strSubmitDate)
  return strsubmitdate_.GetNoArena();
}
inline void Event::set_strsubmitdate(const ::std::string& value) {
  
  strsubmitdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strSubmitDate)
}
#if LANG_CXX11
inline void Event::set_strsubmitdate(::std::string&& value) {
  
  strsubmitdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strSubmitDate)
}
#endif
inline void Event::set_strsubmitdate(const char* value) {
  
  strsubmitdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strSubmitDate)
}
inline void Event::set_strsubmitdate(const char* value, size_t size) {
  
  strsubmitdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strSubmitDate)
}
inline ::std::string* Event::mutable_strsubmitdate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strSubmitDate)
  return strsubmitdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strsubmitdate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strSubmitDate)
  
  return strsubmitdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strsubmitdate(::std::string* strsubmitdate) {
  if (strsubmitdate != NULL) {
    
  } else {
    
  }
  strsubmitdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsubmitdate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strSubmitDate)
}

// string strExpireDate = 4;
inline void Event::clear_strexpiredate() {
  strexpiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strexpiredate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strExpireDate)
  return strexpiredate_.GetNoArena();
}
inline void Event::set_strexpiredate(const ::std::string& value) {
  
  strexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strExpireDate)
}
#if LANG_CXX11
inline void Event::set_strexpiredate(::std::string&& value) {
  
  strexpiredate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strExpireDate)
}
#endif
inline void Event::set_strexpiredate(const char* value) {
  
  strexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strExpireDate)
}
inline void Event::set_strexpiredate(const char* value, size_t size) {
  
  strexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strExpireDate)
}
inline ::std::string* Event::mutable_strexpiredate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strExpireDate)
  return strexpiredate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strexpiredate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strExpireDate)
  
  return strexpiredate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strexpiredate(::std::string* strexpiredate) {
  if (strexpiredate != NULL) {
    
  } else {
    
  }
  strexpiredate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strexpiredate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strExpireDate)
}

// string strUserID = 5;
inline void Event::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strUserID)
  return struserid_.GetNoArena();
}
inline void Event::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strUserID)
}
#if LANG_CXX11
inline void Event::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strUserID)
}
#endif
inline void Event::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strUserID)
}
inline void Event::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strUserID)
}
inline ::std::string* Event::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strUserID)
}

// string strDeviceID = 6;
inline void Event::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void Event::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strDeviceID)
}
#if LANG_CXX11
inline void Event::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strDeviceID)
}
#endif
inline void Event::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strDeviceID)
}
inline void Event::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strDeviceID)
}
inline ::std::string* Event::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strDeviceID)
}

// string strProcessState = 7;
inline void Event::clear_strprocessstate() {
  strprocessstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strprocessstate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strProcessState)
  return strprocessstate_.GetNoArena();
}
inline void Event::set_strprocessstate(const ::std::string& value) {
  
  strprocessstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strProcessState)
}
#if LANG_CXX11
inline void Event::set_strprocessstate(::std::string&& value) {
  
  strprocessstate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strProcessState)
}
#endif
inline void Event::set_strprocessstate(const char* value) {
  
  strprocessstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strProcessState)
}
inline void Event::set_strprocessstate(const char* value, size_t size) {
  
  strprocessstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strProcessState)
}
inline ::std::string* Event::mutable_strprocessstate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strProcessState)
  return strprocessstate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strprocessstate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strProcessState)
  
  return strprocessstate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strprocessstate(::std::string* strprocessstate) {
  if (strprocessstate != NULL) {
    
  } else {
    
  }
  strprocessstate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strprocessstate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strProcessState)
}

// string strRemark = 8;
inline void Event::clear_strremark() {
  strremark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strremark() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strRemark)
  return strremark_.GetNoArena();
}
inline void Event::set_strremark(const ::std::string& value) {
  
  strremark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strRemark)
}
#if LANG_CXX11
inline void Event::set_strremark(::std::string&& value) {
  
  strremark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strRemark)
}
#endif
inline void Event::set_strremark(const char* value) {
  
  strremark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strRemark)
}
inline void Event::set_strremark(const char* value, size_t size) {
  
  strremark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strRemark)
}
inline ::std::string* Event::mutable_strremark() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strRemark)
  return strremark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strremark() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strRemark)
  
  return strremark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strremark(::std::string* strremark) {
  if (strremark != NULL) {
    
  } else {
    
  }
  strremark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strremark);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strRemark)
}

// repeated uint32 uiType = 9;
inline int Event::uitype_size() const {
  return uitype_.size();
}
inline void Event::clear_uitype() {
  uitype_.Clear();
}
inline ::google::protobuf::uint32 Event::uitype(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.uiType)
  return uitype_.Get(index);
}
inline void Event::set_uitype(int index, ::google::protobuf::uint32 value) {
  uitype_.Set(index, value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.uiType)
}
inline void Event::add_uitype(::google::protobuf::uint32 value) {
  uitype_.Add(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.Event.uiType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Event::uitype() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.Event.uiType)
  return uitype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Event::mutable_uitype() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.Event.uiType)
  return &uitype_;
}

// repeated string strHandler = 10;
inline int Event::strhandler_size() const {
  return strhandler_.size();
}
inline void Event::clear_strhandler() {
  strhandler_.Clear();
}
inline const ::std::string& Event::strhandler(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strHandler)
  return strhandler_.Get(index);
}
inline ::std::string* Event::mutable_strhandler(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strHandler)
  return strhandler_.Mutable(index);
}
inline void Event::set_strhandler(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strHandler)
  strhandler_.Mutable(index)->assign(value);
}
inline void Event::set_strhandler(int index, const char* value) {
  strhandler_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strHandler)
}
inline void Event::set_strhandler(int index, const char* value, size_t size) {
  strhandler_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strHandler)
}
inline ::std::string* Event::add_strhandler() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.Event.strHandler)
  return strhandler_.Add();
}
inline void Event::add_strhandler(const ::std::string& value) {
  strhandler_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.Event.strHandler)
}
inline void Event::add_strhandler(const char* value) {
  strhandler_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.Event.strHandler)
}
inline void Event::add_strhandler(const char* value, size_t size) {
  strhandler_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.Event.strHandler)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Event::strhandler() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.Event.strHandler)
  return strhandler_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Event::mutable_strhandler() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.Event.strHandler)
  return &strhandler_;
}

// uint32 uiViewState = 11;
inline void Event::clear_uiviewstate() {
  uiviewstate_ = 0u;
}
inline ::google::protobuf::uint32 Event::uiviewstate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.uiViewState)
  return uiviewstate_;
}
inline void Event::set_uiviewstate(::google::protobuf::uint32 value) {
  
  uiviewstate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.uiViewState)
}

// string strCreateDate = 12;
inline void Event::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void Event::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strCreateDate)
}
#if LANG_CXX11
inline void Event::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strCreateDate)
}
#endif
inline void Event::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strCreateDate)
}
inline void Event::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strCreateDate)
}
inline ::std::string* Event::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strCreateDate)
}

// string strExtend = 13;
inline void Event::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strextend() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strExtend)
  return strextend_.GetNoArena();
}
inline void Event::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strExtend)
}
#if LANG_CXX11
inline void Event::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strExtend)
}
#endif
inline void Event::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strExtend)
}
inline void Event::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strExtend)
}
inline ::std::string* Event::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strextend() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strExtend)
}

// uint32 uiState = 14;
inline void Event::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 Event::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.uiState)
  return uistate_;
}
inline void Event::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.uiState)
}

// string strStoreID = 15;
inline void Event::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void Event::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strStoreID)
}
#if LANG_CXX11
inline void Event::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strStoreID)
}
#endif
inline void Event::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strStoreID)
}
inline void Event::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strStoreID)
}
inline ::std::string* Event::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strStoreID)
}

// string strStoreName = 16;
inline void Event::clear_strstorename() {
  strstorename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::strstorename() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Event.strStoreName)
  return strstorename_.GetNoArena();
}
inline void Event::set_strstorename(const ::std::string& value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Event.strStoreName)
}
#if LANG_CXX11
inline void Event::set_strstorename(::std::string&& value) {
  
  strstorename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Event.strStoreName)
}
#endif
inline void Event::set_strstorename(const char* value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Event.strStoreName)
}
inline void Event::set_strstorename(const char* value, size_t size) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Event.strStoreName)
}
inline ::std::string* Event::mutable_strstorename() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Event.strStoreName)
  return strstorename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_strstorename() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Event.strStoreName)
  
  return strstorename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_strstorename(::std::string* strstorename) {
  if (strstorename != NULL) {
    
  } else {
    
  }
  strstorename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorename);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Event.strStoreName)
}

// -------------------------------------------------------------------

// SmartGuardStore

// string strPlanID = 1;
inline void SmartGuardStore::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
  return strplanid_.GetNoArena();
}
inline void SmartGuardStore::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
}
#endif
inline void SmartGuardStore::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
}
inline void SmartGuardStore::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
}
inline ::std::string* SmartGuardStore::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanID)
}

// string strStoreID = 2;
inline void SmartGuardStore::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void SmartGuardStore::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
}
#endif
inline void SmartGuardStore::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
}
inline void SmartGuardStore::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
}
inline ::std::string* SmartGuardStore::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreID)
}

// string strStoreName = 3;
inline void SmartGuardStore::clear_strstorename() {
  strstorename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strstorename() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
  return strstorename_.GetNoArena();
}
inline void SmartGuardStore::set_strstorename(const ::std::string& value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strstorename(::std::string&& value) {
  
  strstorename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
}
#endif
inline void SmartGuardStore::set_strstorename(const char* value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
}
inline void SmartGuardStore::set_strstorename(const char* value, size_t size) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
}
inline ::std::string* SmartGuardStore::mutable_strstorename() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
  return strstorename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strstorename() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
  
  return strstorename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strstorename(::std::string* strstorename) {
  if (strstorename != NULL) {
    
  } else {
    
  }
  strstorename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorename);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strStoreName)
}

// string strPlanName = 4;
inline void SmartGuardStore::clear_strplanname() {
  strplanname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strplanname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
  return strplanname_.GetNoArena();
}
inline void SmartGuardStore::set_strplanname(const ::std::string& value) {
  
  strplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strplanname(::std::string&& value) {
  
  strplanname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
}
#endif
inline void SmartGuardStore::set_strplanname(const char* value) {
  
  strplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
}
inline void SmartGuardStore::set_strplanname(const char* value, size_t size) {
  
  strplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
}
inline ::std::string* SmartGuardStore::mutable_strplanname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
  return strplanname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strplanname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
  
  return strplanname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strplanname(::std::string* strplanname) {
  if (strplanname != NULL) {
    
  } else {
    
  }
  strplanname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strPlanName)
}

// repeated string strEntranceID = 5;
inline int SmartGuardStore::strentranceid_size() const {
  return strentranceid_.size();
}
inline void SmartGuardStore::clear_strentranceid() {
  strentranceid_.Clear();
}
inline const ::std::string& SmartGuardStore::strentranceid(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
  return strentranceid_.Get(index);
}
inline ::std::string* SmartGuardStore::mutable_strentranceid(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
  return strentranceid_.Mutable(index);
}
inline void SmartGuardStore::set_strentranceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
  strentranceid_.Mutable(index)->assign(value);
}
inline void SmartGuardStore::set_strentranceid(int index, const char* value) {
  strentranceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
}
inline void SmartGuardStore::set_strentranceid(int index, const char* value, size_t size) {
  strentranceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
}
inline ::std::string* SmartGuardStore::add_strentranceid() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
  return strentranceid_.Add();
}
inline void SmartGuardStore::add_strentranceid(const ::std::string& value) {
  strentranceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
}
inline void SmartGuardStore::add_strentranceid(const char* value) {
  strentranceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
}
inline void SmartGuardStore::add_strentranceid(const char* value, size_t size) {
  strentranceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SmartGuardStore::strentranceid() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
  return strentranceid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SmartGuardStore::mutable_strentranceid() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.SmartGuardStore.strEntranceID)
  return &strentranceid_;
}

// string strEnable = 6;
inline void SmartGuardStore::clear_strenable() {
  strenable_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strenable() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
  return strenable_.GetNoArena();
}
inline void SmartGuardStore::set_strenable(const ::std::string& value) {
  
  strenable_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strenable(::std::string&& value) {
  
  strenable_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
}
#endif
inline void SmartGuardStore::set_strenable(const char* value) {
  
  strenable_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
}
inline void SmartGuardStore::set_strenable(const char* value, size_t size) {
  
  strenable_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
}
inline ::std::string* SmartGuardStore::mutable_strenable() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
  return strenable_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strenable() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
  
  return strenable_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strenable(::std::string* strenable) {
  if (strenable != NULL) {
    
  } else {
    
  }
  strenable_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenable);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strEnable)
}

// string strBeginTime = 7;
inline void SmartGuardStore::clear_strbegintime() {
  strbegintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strbegintime() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
  return strbegintime_.GetNoArena();
}
inline void SmartGuardStore::set_strbegintime(const ::std::string& value) {
  
  strbegintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strbegintime(::std::string&& value) {
  
  strbegintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
}
#endif
inline void SmartGuardStore::set_strbegintime(const char* value) {
  
  strbegintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
}
inline void SmartGuardStore::set_strbegintime(const char* value, size_t size) {
  
  strbegintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
}
inline ::std::string* SmartGuardStore::mutable_strbegintime() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
  return strbegintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strbegintime() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
  
  return strbegintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strbegintime(::std::string* strbegintime) {
  if (strbegintime != NULL) {
    
  } else {
    
  }
  strbegintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegintime);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime)
}

// string strEndTime = 8;
inline void SmartGuardStore::clear_strendtime() {
  strendtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strendtime() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
  return strendtime_.GetNoArena();
}
inline void SmartGuardStore::set_strendtime(const ::std::string& value) {
  
  strendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strendtime(::std::string&& value) {
  
  strendtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
}
#endif
inline void SmartGuardStore::set_strendtime(const char* value) {
  
  strendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
}
inline void SmartGuardStore::set_strendtime(const char* value, size_t size) {
  
  strendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
}
inline ::std::string* SmartGuardStore::mutable_strendtime() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
  return strendtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strendtime() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
  
  return strendtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strendtime(::std::string* strendtime) {
  if (strendtime != NULL) {
    
  } else {
    
  }
  strendtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strendtime);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime)
}

// string strBeginTime2 = 9;
inline void SmartGuardStore::clear_strbegintime2() {
  strbegintime2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strbegintime2() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
  return strbegintime2_.GetNoArena();
}
inline void SmartGuardStore::set_strbegintime2(const ::std::string& value) {
  
  strbegintime2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strbegintime2(::std::string&& value) {
  
  strbegintime2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
}
#endif
inline void SmartGuardStore::set_strbegintime2(const char* value) {
  
  strbegintime2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
}
inline void SmartGuardStore::set_strbegintime2(const char* value, size_t size) {
  
  strbegintime2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
}
inline ::std::string* SmartGuardStore::mutable_strbegintime2() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
  return strbegintime2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strbegintime2() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
  
  return strbegintime2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strbegintime2(::std::string* strbegintime2) {
  if (strbegintime2 != NULL) {
    
  } else {
    
  }
  strbegintime2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegintime2);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strBeginTime2)
}

// string strEndTime2 = 10;
inline void SmartGuardStore::clear_strendtime2() {
  strendtime2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strendtime2() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
  return strendtime2_.GetNoArena();
}
inline void SmartGuardStore::set_strendtime2(const ::std::string& value) {
  
  strendtime2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strendtime2(::std::string&& value) {
  
  strendtime2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
}
#endif
inline void SmartGuardStore::set_strendtime2(const char* value) {
  
  strendtime2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
}
inline void SmartGuardStore::set_strendtime2(const char* value, size_t size) {
  
  strendtime2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
}
inline ::std::string* SmartGuardStore::mutable_strendtime2() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
  return strendtime2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strendtime2() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
  
  return strendtime2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strendtime2(::std::string* strendtime2) {
  if (strendtime2 != NULL) {
    
  } else {
    
  }
  strendtime2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strendtime2);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strEndTime2)
}

// uint32 uiState = 11;
inline void SmartGuardStore::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 SmartGuardStore::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.uiState)
  return uistate_;
}
inline void SmartGuardStore::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.uiState)
}

// string strCreateDate = 12;
inline void SmartGuardStore::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SmartGuardStore::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void SmartGuardStore::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
}
#if LANG_CXX11
inline void SmartGuardStore::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
}
#endif
inline void SmartGuardStore::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
}
inline void SmartGuardStore::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
}
inline ::std::string* SmartGuardStore::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SmartGuardStore::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SmartGuardStore::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SmartGuardStore.strCreateDate)
}

// -------------------------------------------------------------------

// PatrolStoreEntrance

// string strStoreID = 1;
inline void PatrolStoreEntrance::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PatrolStoreEntrance::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void PatrolStoreEntrance::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
}
#if LANG_CXX11
inline void PatrolStoreEntrance::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
}
#endif
inline void PatrolStoreEntrance::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
}
inline void PatrolStoreEntrance::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
}
inline ::std::string* PatrolStoreEntrance::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PatrolStoreEntrance::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PatrolStoreEntrance::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreID)
}

// string strStoreName = 2;
inline void PatrolStoreEntrance::clear_strstorename() {
  strstorename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PatrolStoreEntrance::strstorename() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
  return strstorename_.GetNoArena();
}
inline void PatrolStoreEntrance::set_strstorename(const ::std::string& value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
}
#if LANG_CXX11
inline void PatrolStoreEntrance::set_strstorename(::std::string&& value) {
  
  strstorename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
}
#endif
inline void PatrolStoreEntrance::set_strstorename(const char* value) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
}
inline void PatrolStoreEntrance::set_strstorename(const char* value, size_t size) {
  
  strstorename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
}
inline ::std::string* PatrolStoreEntrance::mutable_strstorename() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
  return strstorename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PatrolStoreEntrance::release_strstorename() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
  
  return strstorename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PatrolStoreEntrance::set_allocated_strstorename(::std::string* strstorename) {
  if (strstorename != NULL) {
    
  } else {
    
  }
  strstorename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorename);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.PatrolStoreEntrance.strStoreName)
}

// repeated .CustomerFlow.Interactive.Message.Entrance entrance = 3;
inline int PatrolStoreEntrance::entrance_size() const {
  return entrance_.size();
}
inline void PatrolStoreEntrance::clear_entrance() {
  entrance_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Entrance& PatrolStoreEntrance::entrance(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.PatrolStoreEntrance.entrance)
  return entrance_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Entrance* PatrolStoreEntrance::mutable_entrance(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.PatrolStoreEntrance.entrance)
  return entrance_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Entrance* PatrolStoreEntrance::add_entrance() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.PatrolStoreEntrance.entrance)
  return entrance_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >*
PatrolStoreEntrance::mutable_entrance() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.PatrolStoreEntrance.entrance)
  return &entrance_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Entrance >&
PatrolStoreEntrance::entrance() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.PatrolStoreEntrance.entrance)
  return entrance_;
}

// -------------------------------------------------------------------

// RegularPatrol

// string strPlanID = 1;
inline void RegularPatrol::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegularPatrol::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
  return strplanid_.GetNoArena();
}
inline void RegularPatrol::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
}
#if LANG_CXX11
inline void RegularPatrol::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
}
#endif
inline void RegularPatrol::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
}
inline void RegularPatrol::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
}
inline ::std::string* RegularPatrol::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegularPatrol::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegularPatrol::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RegularPatrol.strPlanID)
}

// string strPlanName = 2;
inline void RegularPatrol::clear_strplanname() {
  strplanname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegularPatrol::strplanname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
  return strplanname_.GetNoArena();
}
inline void RegularPatrol::set_strplanname(const ::std::string& value) {
  
  strplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
}
#if LANG_CXX11
inline void RegularPatrol::set_strplanname(::std::string&& value) {
  
  strplanname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
}
#endif
inline void RegularPatrol::set_strplanname(const char* value) {
  
  strplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
}
inline void RegularPatrol::set_strplanname(const char* value, size_t size) {
  
  strplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
}
inline ::std::string* RegularPatrol::mutable_strplanname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
  return strplanname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegularPatrol::release_strplanname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
  
  return strplanname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegularPatrol::set_allocated_strplanname(::std::string* strplanname) {
  if (strplanname != NULL) {
    
  } else {
    
  }
  strplanname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RegularPatrol.strPlanName)
}

// string strEnable = 3;
inline void RegularPatrol::clear_strenable() {
  strenable_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegularPatrol::strenable() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
  return strenable_.GetNoArena();
}
inline void RegularPatrol::set_strenable(const ::std::string& value) {
  
  strenable_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
}
#if LANG_CXX11
inline void RegularPatrol::set_strenable(::std::string&& value) {
  
  strenable_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
}
#endif
inline void RegularPatrol::set_strenable(const char* value) {
  
  strenable_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
}
inline void RegularPatrol::set_strenable(const char* value, size_t size) {
  
  strenable_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
}
inline ::std::string* RegularPatrol::mutable_strenable() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
  return strenable_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegularPatrol::release_strenable() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
  
  return strenable_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegularPatrol::set_allocated_strenable(::std::string* strenable) {
  if (strenable != NULL) {
    
  } else {
    
  }
  strenable_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenable);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RegularPatrol.strEnable)
}

// repeated .CustomerFlow.Interactive.Message.PatrolStoreEntrance storeEntrance = 4;
inline int RegularPatrol::storeentrance_size() const {
  return storeentrance_.size();
}
inline void RegularPatrol::clear_storeentrance() {
  storeentrance_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::PatrolStoreEntrance& RegularPatrol::storeentrance(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.storeEntrance)
  return storeentrance_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::PatrolStoreEntrance* RegularPatrol::mutable_storeentrance(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.storeEntrance)
  return storeentrance_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::PatrolStoreEntrance* RegularPatrol::add_storeentrance() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RegularPatrol.storeEntrance)
  return storeentrance_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::PatrolStoreEntrance >*
RegularPatrol::mutable_storeentrance() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RegularPatrol.storeEntrance)
  return &storeentrance_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::PatrolStoreEntrance >&
RegularPatrol::storeentrance() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RegularPatrol.storeEntrance)
  return storeentrance_;
}

// repeated string strPatrolTime = 5;
inline int RegularPatrol::strpatroltime_size() const {
  return strpatroltime_.size();
}
inline void RegularPatrol::clear_strpatroltime() {
  strpatroltime_.Clear();
}
inline const ::std::string& RegularPatrol::strpatroltime(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
  return strpatroltime_.Get(index);
}
inline ::std::string* RegularPatrol::mutable_strpatroltime(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
  return strpatroltime_.Mutable(index);
}
inline void RegularPatrol::set_strpatroltime(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
  strpatroltime_.Mutable(index)->assign(value);
}
inline void RegularPatrol::set_strpatroltime(int index, const char* value) {
  strpatroltime_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
}
inline void RegularPatrol::set_strpatroltime(int index, const char* value, size_t size) {
  strpatroltime_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
}
inline ::std::string* RegularPatrol::add_strpatroltime() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
  return strpatroltime_.Add();
}
inline void RegularPatrol::add_strpatroltime(const ::std::string& value) {
  strpatroltime_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
}
inline void RegularPatrol::add_strpatroltime(const char* value) {
  strpatroltime_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
}
inline void RegularPatrol::add_strpatroltime(const char* value, size_t size) {
  strpatroltime_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegularPatrol::strpatroltime() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
  return strpatroltime_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RegularPatrol::mutable_strpatroltime() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RegularPatrol.strPatrolTime)
  return &strpatroltime_;
}

// repeated string strHandler = 6;
inline int RegularPatrol::strhandler_size() const {
  return strhandler_.size();
}
inline void RegularPatrol::clear_strhandler() {
  strhandler_.Clear();
}
inline const ::std::string& RegularPatrol::strhandler(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
  return strhandler_.Get(index);
}
inline ::std::string* RegularPatrol::mutable_strhandler(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
  return strhandler_.Mutable(index);
}
inline void RegularPatrol::set_strhandler(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
  strhandler_.Mutable(index)->assign(value);
}
inline void RegularPatrol::set_strhandler(int index, const char* value) {
  strhandler_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
}
inline void RegularPatrol::set_strhandler(int index, const char* value, size_t size) {
  strhandler_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
}
inline ::std::string* RegularPatrol::add_strhandler() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
  return strhandler_.Add();
}
inline void RegularPatrol::add_strhandler(const ::std::string& value) {
  strhandler_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
}
inline void RegularPatrol::add_strhandler(const char* value) {
  strhandler_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
}
inline void RegularPatrol::add_strhandler(const char* value, size_t size) {
  strhandler_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegularPatrol::strhandler() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
  return strhandler_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RegularPatrol::mutable_strhandler() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RegularPatrol.strHandler)
  return &strhandler_;
}

// uint32 uiState = 7;
inline void RegularPatrol::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 RegularPatrol::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.uiState)
  return uistate_;
}
inline void RegularPatrol::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.uiState)
}

// string strCreateDate = 8;
inline void RegularPatrol::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegularPatrol::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void RegularPatrol::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
}
#if LANG_CXX11
inline void RegularPatrol::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
}
#endif
inline void RegularPatrol::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
}
inline void RegularPatrol::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
}
inline ::std::string* RegularPatrol::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegularPatrol::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegularPatrol::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RegularPatrol.strCreateDate)
}

// string strExtend = 9;
inline void RegularPatrol::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegularPatrol::strextend() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
  return strextend_.GetNoArena();
}
inline void RegularPatrol::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
}
#if LANG_CXX11
inline void RegularPatrol::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
}
#endif
inline void RegularPatrol::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
}
inline void RegularPatrol::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
}
inline ::std::string* RegularPatrol::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegularPatrol::release_strextend() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegularPatrol::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RegularPatrol.strExtend)
}

// string strUpdateDate = 10;
inline void RegularPatrol::clear_strupdatedate() {
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegularPatrol::strupdatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
  return strupdatedate_.GetNoArena();
}
inline void RegularPatrol::set_strupdatedate(const ::std::string& value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
}
#if LANG_CXX11
inline void RegularPatrol::set_strupdatedate(::std::string&& value) {
  
  strupdatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
}
#endif
inline void RegularPatrol::set_strupdatedate(const char* value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
}
inline void RegularPatrol::set_strupdatedate(const char* value, size_t size) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
}
inline ::std::string* RegularPatrol::mutable_strupdatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
  return strupdatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegularPatrol::release_strupdatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
  
  return strupdatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegularPatrol::set_allocated_strupdatedate(::std::string* strupdatedate) {
  if (strupdatedate != NULL) {
    
  } else {
    
  }
  strupdatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RegularPatrol.strUpdateDate)
}

// -------------------------------------------------------------------

// UserBrief

// string strUserID = 1;
inline void UserBrief::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBrief::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBrief.strUserID)
  return struserid_.GetNoArena();
}
inline void UserBrief::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBrief.strUserID)
}
#if LANG_CXX11
inline void UserBrief::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBrief.strUserID)
}
#endif
inline void UserBrief::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBrief.strUserID)
}
inline void UserBrief::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBrief.strUserID)
}
inline ::std::string* UserBrief::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBrief.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBrief::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBrief.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBrief::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBrief.strUserID)
}

// string strUserName = 2;
inline void UserBrief::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBrief::strusername() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBrief.strUserName)
  return strusername_.GetNoArena();
}
inline void UserBrief::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBrief.strUserName)
}
#if LANG_CXX11
inline void UserBrief::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBrief.strUserName)
}
#endif
inline void UserBrief::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBrief.strUserName)
}
inline void UserBrief::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBrief.strUserName)
}
inline ::std::string* UserBrief::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBrief.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBrief::release_strusername() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBrief.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBrief::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBrief.strUserName)
}

// string strAliasName = 3;
inline void UserBrief::clear_straliasname() {
  straliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBrief::straliasname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
  return straliasname_.GetNoArena();
}
inline void UserBrief::set_straliasname(const ::std::string& value) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
}
#if LANG_CXX11
inline void UserBrief::set_straliasname(::std::string&& value) {
  
  straliasname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
}
#endif
inline void UserBrief::set_straliasname(const char* value) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
}
inline void UserBrief::set_straliasname(const char* value, size_t size) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
}
inline ::std::string* UserBrief::mutable_straliasname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
  return straliasname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBrief::release_straliasname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
  
  return straliasname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBrief::set_allocated_straliasname(::std::string* straliasname) {
  if (straliasname != NULL) {
    
  } else {
    
  }
  straliasname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straliasname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBrief.strAliasName)
}

// string strRole = 4;
inline void UserBrief::clear_strrole() {
  strrole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBrief::strrole() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBrief.strRole)
  return strrole_.GetNoArena();
}
inline void UserBrief::set_strrole(const ::std::string& value) {
  
  strrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBrief.strRole)
}
#if LANG_CXX11
inline void UserBrief::set_strrole(::std::string&& value) {
  
  strrole_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBrief.strRole)
}
#endif
inline void UserBrief::set_strrole(const char* value) {
  
  strrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBrief.strRole)
}
inline void UserBrief::set_strrole(const char* value, size_t size) {
  
  strrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBrief.strRole)
}
inline ::std::string* UserBrief::mutable_strrole() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBrief.strRole)
  return strrole_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBrief::release_strrole() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBrief.strRole)
  
  return strrole_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBrief::set_allocated_strrole(::std::string* strrole) {
  if (strrole != NULL) {
    
  } else {
    
  }
  strrole_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strrole);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBrief.strRole)
}

// -------------------------------------------------------------------

// VIPConsumeHistory

// string strConsumeID = 1;
inline void VIPConsumeHistory::clear_strconsumeid() {
  strconsumeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPConsumeHistory::strconsumeid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
  return strconsumeid_.GetNoArena();
}
inline void VIPConsumeHistory::set_strconsumeid(const ::std::string& value) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
}
#if LANG_CXX11
inline void VIPConsumeHistory::set_strconsumeid(::std::string&& value) {
  
  strconsumeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
}
#endif
inline void VIPConsumeHistory::set_strconsumeid(const char* value) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
}
inline void VIPConsumeHistory::set_strconsumeid(const char* value, size_t size) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
}
inline ::std::string* VIPConsumeHistory::mutable_strconsumeid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
  return strconsumeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPConsumeHistory::release_strconsumeid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
  
  return strconsumeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPConsumeHistory::set_allocated_strconsumeid(::std::string* strconsumeid) {
  if (strconsumeid != NULL) {
    
  } else {
    
  }
  strconsumeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconsumeid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeID)
}

// string strVIPID = 2;
inline void VIPConsumeHistory::clear_strvipid() {
  strvipid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPConsumeHistory::strvipid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
  return strvipid_.GetNoArena();
}
inline void VIPConsumeHistory::set_strvipid(const ::std::string& value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
}
#if LANG_CXX11
inline void VIPConsumeHistory::set_strvipid(::std::string&& value) {
  
  strvipid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
}
#endif
inline void VIPConsumeHistory::set_strvipid(const char* value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
}
inline void VIPConsumeHistory::set_strvipid(const char* value, size_t size) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
}
inline ::std::string* VIPConsumeHistory::mutable_strvipid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
  return strvipid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPConsumeHistory::release_strvipid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
  
  return strvipid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPConsumeHistory::set_allocated_strvipid(::std::string* strvipid) {
  if (strvipid != NULL) {
    
  } else {
    
  }
  strvipid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPConsumeHistory.strVIPID)
}

// string strGoodsName = 3;
inline void VIPConsumeHistory::clear_strgoodsname() {
  strgoodsname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPConsumeHistory::strgoodsname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
  return strgoodsname_.GetNoArena();
}
inline void VIPConsumeHistory::set_strgoodsname(const ::std::string& value) {
  
  strgoodsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
}
#if LANG_CXX11
inline void VIPConsumeHistory::set_strgoodsname(::std::string&& value) {
  
  strgoodsname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
}
#endif
inline void VIPConsumeHistory::set_strgoodsname(const char* value) {
  
  strgoodsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
}
inline void VIPConsumeHistory::set_strgoodsname(const char* value, size_t size) {
  
  strgoodsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
}
inline ::std::string* VIPConsumeHistory::mutable_strgoodsname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
  return strgoodsname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPConsumeHistory::release_strgoodsname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
  
  return strgoodsname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPConsumeHistory::set_allocated_strgoodsname(::std::string* strgoodsname) {
  if (strgoodsname != NULL) {
    
  } else {
    
  }
  strgoodsname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgoodsname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPConsumeHistory.strGoodsName)
}

// uint32 uiGoodsNumber = 4;
inline void VIPConsumeHistory::clear_uigoodsnumber() {
  uigoodsnumber_ = 0u;
}
inline ::google::protobuf::uint32 VIPConsumeHistory::uigoodsnumber() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.uiGoodsNumber)
  return uigoodsnumber_;
}
inline void VIPConsumeHistory::set_uigoodsnumber(::google::protobuf::uint32 value) {
  
  uigoodsnumber_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.uiGoodsNumber)
}

// string strSalesman = 5;
inline void VIPConsumeHistory::clear_strsalesman() {
  strsalesman_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPConsumeHistory::strsalesman() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
  return strsalesman_.GetNoArena();
}
inline void VIPConsumeHistory::set_strsalesman(const ::std::string& value) {
  
  strsalesman_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
}
#if LANG_CXX11
inline void VIPConsumeHistory::set_strsalesman(::std::string&& value) {
  
  strsalesman_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
}
#endif
inline void VIPConsumeHistory::set_strsalesman(const char* value) {
  
  strsalesman_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
}
inline void VIPConsumeHistory::set_strsalesman(const char* value, size_t size) {
  
  strsalesman_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
}
inline ::std::string* VIPConsumeHistory::mutable_strsalesman() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
  return strsalesman_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPConsumeHistory::release_strsalesman() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
  
  return strsalesman_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPConsumeHistory::set_allocated_strsalesman(::std::string* strsalesman) {
  if (strsalesman != NULL) {
    
  } else {
    
  }
  strsalesman_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsalesman);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPConsumeHistory.strSalesman)
}

// double dConsumeAmount = 6;
inline void VIPConsumeHistory::clear_dconsumeamount() {
  dconsumeamount_ = 0;
}
inline double VIPConsumeHistory::dconsumeamount() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.dConsumeAmount)
  return dconsumeamount_;
}
inline void VIPConsumeHistory::set_dconsumeamount(double value) {
  
  dconsumeamount_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.dConsumeAmount)
}

// string strConsumeDate = 7;
inline void VIPConsumeHistory::clear_strconsumedate() {
  strconsumedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPConsumeHistory::strconsumedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
  return strconsumedate_.GetNoArena();
}
inline void VIPConsumeHistory::set_strconsumedate(const ::std::string& value) {
  
  strconsumedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
}
#if LANG_CXX11
inline void VIPConsumeHistory::set_strconsumedate(::std::string&& value) {
  
  strconsumedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
}
#endif
inline void VIPConsumeHistory::set_strconsumedate(const char* value) {
  
  strconsumedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
}
inline void VIPConsumeHistory::set_strconsumedate(const char* value, size_t size) {
  
  strconsumedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
}
inline ::std::string* VIPConsumeHistory::mutable_strconsumedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
  return strconsumedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPConsumeHistory::release_strconsumedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
  
  return strconsumedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPConsumeHistory::set_allocated_strconsumedate(::std::string* strconsumedate) {
  if (strconsumedate != NULL) {
    
  } else {
    
  }
  strconsumedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconsumedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPConsumeHistory.strConsumeDate)
}

// -------------------------------------------------------------------

// VIPCustomer

// string strVIPID = 1;
inline void VIPCustomer::clear_strvipid() {
  strvipid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPCustomer::strvipid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
  return strvipid_.GetNoArena();
}
inline void VIPCustomer::set_strvipid(const ::std::string& value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
}
#if LANG_CXX11
inline void VIPCustomer::set_strvipid(::std::string&& value) {
  
  strvipid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
}
#endif
inline void VIPCustomer::set_strvipid(const char* value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
}
inline void VIPCustomer::set_strvipid(const char* value, size_t size) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
}
inline ::std::string* VIPCustomer::mutable_strvipid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
  return strvipid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPCustomer::release_strvipid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
  
  return strvipid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPCustomer::set_allocated_strvipid(::std::string* strvipid) {
  if (strvipid != NULL) {
    
  } else {
    
  }
  strvipid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPCustomer.strVIPID)
}

// string strProfilePicture = 2;
inline void VIPCustomer::clear_strprofilepicture() {
  strprofilepicture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPCustomer::strprofilepicture() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
  return strprofilepicture_.GetNoArena();
}
inline void VIPCustomer::set_strprofilepicture(const ::std::string& value) {
  
  strprofilepicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
}
#if LANG_CXX11
inline void VIPCustomer::set_strprofilepicture(::std::string&& value) {
  
  strprofilepicture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
}
#endif
inline void VIPCustomer::set_strprofilepicture(const char* value) {
  
  strprofilepicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
}
inline void VIPCustomer::set_strprofilepicture(const char* value, size_t size) {
  
  strprofilepicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
}
inline ::std::string* VIPCustomer::mutable_strprofilepicture() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
  return strprofilepicture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPCustomer::release_strprofilepicture() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
  
  return strprofilepicture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPCustomer::set_allocated_strprofilepicture(::std::string* strprofilepicture) {
  if (strprofilepicture != NULL) {
    
  } else {
    
  }
  strprofilepicture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strprofilepicture);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPCustomer.strProfilePicture)
}

// string strVIPName = 3;
inline void VIPCustomer::clear_strvipname() {
  strvipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPCustomer::strvipname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
  return strvipname_.GetNoArena();
}
inline void VIPCustomer::set_strvipname(const ::std::string& value) {
  
  strvipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
}
#if LANG_CXX11
inline void VIPCustomer::set_strvipname(::std::string&& value) {
  
  strvipname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
}
#endif
inline void VIPCustomer::set_strvipname(const char* value) {
  
  strvipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
}
inline void VIPCustomer::set_strvipname(const char* value, size_t size) {
  
  strvipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
}
inline ::std::string* VIPCustomer::mutable_strvipname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
  return strvipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPCustomer::release_strvipname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
  
  return strvipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPCustomer::set_allocated_strvipname(::std::string* strvipname) {
  if (strvipname != NULL) {
    
  } else {
    
  }
  strvipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPCustomer.strVIPName)
}

// string strCellphone = 4;
inline void VIPCustomer::clear_strcellphone() {
  strcellphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPCustomer::strcellphone() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
  return strcellphone_.GetNoArena();
}
inline void VIPCustomer::set_strcellphone(const ::std::string& value) {
  
  strcellphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
}
#if LANG_CXX11
inline void VIPCustomer::set_strcellphone(::std::string&& value) {
  
  strcellphone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
}
#endif
inline void VIPCustomer::set_strcellphone(const char* value) {
  
  strcellphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
}
inline void VIPCustomer::set_strcellphone(const char* value, size_t size) {
  
  strcellphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
}
inline ::std::string* VIPCustomer::mutable_strcellphone() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
  return strcellphone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPCustomer::release_strcellphone() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
  
  return strcellphone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPCustomer::set_allocated_strcellphone(::std::string* strcellphone) {
  if (strcellphone != NULL) {
    
  } else {
    
  }
  strcellphone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcellphone);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPCustomer.strCellphone)
}

// string strVisitDate = 5;
inline void VIPCustomer::clear_strvisitdate() {
  strvisitdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPCustomer::strvisitdate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
  return strvisitdate_.GetNoArena();
}
inline void VIPCustomer::set_strvisitdate(const ::std::string& value) {
  
  strvisitdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
}
#if LANG_CXX11
inline void VIPCustomer::set_strvisitdate(::std::string&& value) {
  
  strvisitdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
}
#endif
inline void VIPCustomer::set_strvisitdate(const char* value) {
  
  strvisitdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
}
inline void VIPCustomer::set_strvisitdate(const char* value, size_t size) {
  
  strvisitdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
}
inline ::std::string* VIPCustomer::mutable_strvisitdate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
  return strvisitdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPCustomer::release_strvisitdate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
  
  return strvisitdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPCustomer::set_allocated_strvisitdate(::std::string* strvisitdate) {
  if (strvisitdate != NULL) {
    
  } else {
    
  }
  strvisitdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvisitdate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPCustomer.strVisitDate)
}

// uint32 uiVisitTimes = 6;
inline void VIPCustomer::clear_uivisittimes() {
  uivisittimes_ = 0u;
}
inline ::google::protobuf::uint32 VIPCustomer::uivisittimes() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.uiVisitTimes)
  return uivisittimes_;
}
inline void VIPCustomer::set_uivisittimes(::google::protobuf::uint32 value) {
  
  uivisittimes_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.uiVisitTimes)
}

// string strRegisterDate = 7;
inline void VIPCustomer::clear_strregisterdate() {
  strregisterdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VIPCustomer::strregisterdate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
  return strregisterdate_.GetNoArena();
}
inline void VIPCustomer::set_strregisterdate(const ::std::string& value) {
  
  strregisterdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
}
#if LANG_CXX11
inline void VIPCustomer::set_strregisterdate(::std::string&& value) {
  
  strregisterdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
}
#endif
inline void VIPCustomer::set_strregisterdate(const char* value) {
  
  strregisterdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
}
inline void VIPCustomer::set_strregisterdate(const char* value, size_t size) {
  
  strregisterdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
}
inline ::std::string* VIPCustomer::mutable_strregisterdate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
  return strregisterdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VIPCustomer::release_strregisterdate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
  
  return strregisterdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VIPCustomer::set_allocated_strregisterdate(::std::string* strregisterdate) {
  if (strregisterdate != NULL) {
    
  } else {
    
  }
  strregisterdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strregisterdate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.VIPCustomer.strRegisterDate)
}

// repeated .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 8;
inline int VIPCustomer::consumehistory_size() const {
  return consumehistory_.size();
}
inline void VIPCustomer::clear_consumehistory() {
  consumehistory_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& VIPCustomer::consumehistory(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.consumeHistory)
  return consumehistory_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* VIPCustomer::mutable_consumehistory(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.VIPCustomer.consumeHistory)
  return consumehistory_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* VIPCustomer::add_consumehistory() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.VIPCustomer.consumeHistory)
  return consumehistory_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >*
VIPCustomer::mutable_consumehistory() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.VIPCustomer.consumeHistory)
  return &consumehistory_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >&
VIPCustomer::consumehistory() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.VIPCustomer.consumeHistory)
  return consumehistory_;
}

// uint32 uiState = 9;
inline void VIPCustomer::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 VIPCustomer::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.VIPCustomer.uiState)
  return uistate_;
}
inline void VIPCustomer::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.VIPCustomer.uiState)
}

// -------------------------------------------------------------------

// EvaluationItem

// string strItemID = 1;
inline void EvaluationItem::clear_stritemid() {
  stritemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvaluationItem::stritemid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
  return stritemid_.GetNoArena();
}
inline void EvaluationItem::set_stritemid(const ::std::string& value) {
  
  stritemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
}
#if LANG_CXX11
inline void EvaluationItem::set_stritemid(::std::string&& value) {
  
  stritemid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
}
#endif
inline void EvaluationItem::set_stritemid(const char* value) {
  
  stritemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
}
inline void EvaluationItem::set_stritemid(const char* value, size_t size) {
  
  stritemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
}
inline ::std::string* EvaluationItem::mutable_stritemid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
  return stritemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationItem::release_stritemid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
  
  return stritemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationItem::set_allocated_stritemid(::std::string* stritemid) {
  if (stritemid != NULL) {
    
  } else {
    
  }
  stritemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stritemid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.EvaluationItem.strItemID)
}

// string strItemName = 2;
inline void EvaluationItem::clear_stritemname() {
  stritemname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvaluationItem::stritemname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
  return stritemname_.GetNoArena();
}
inline void EvaluationItem::set_stritemname(const ::std::string& value) {
  
  stritemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
}
#if LANG_CXX11
inline void EvaluationItem::set_stritemname(::std::string&& value) {
  
  stritemname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
}
#endif
inline void EvaluationItem::set_stritemname(const char* value) {
  
  stritemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
}
inline void EvaluationItem::set_stritemname(const char* value, size_t size) {
  
  stritemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
}
inline ::std::string* EvaluationItem::mutable_stritemname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
  return stritemname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationItem::release_stritemname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
  
  return stritemname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationItem::set_allocated_stritemname(::std::string* stritemname) {
  if (stritemname != NULL) {
    
  } else {
    
  }
  stritemname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stritemname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.EvaluationItem.strItemName)
}

// string strDescription = 3;
inline void EvaluationItem::clear_strdescription() {
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvaluationItem::strdescription() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
  return strdescription_.GetNoArena();
}
inline void EvaluationItem::set_strdescription(const ::std::string& value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
}
#if LANG_CXX11
inline void EvaluationItem::set_strdescription(::std::string&& value) {
  
  strdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
}
#endif
inline void EvaluationItem::set_strdescription(const char* value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
}
inline void EvaluationItem::set_strdescription(const char* value, size_t size) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
}
inline ::std::string* EvaluationItem::mutable_strdescription() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
  return strdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationItem::release_strdescription() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
  
  return strdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationItem::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription != NULL) {
    
  } else {
    
  }
  strdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdescription);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.EvaluationItem.strDescription)
}

// double dTotalPoint = 4;
inline void EvaluationItem::clear_dtotalpoint() {
  dtotalpoint_ = 0;
}
inline double EvaluationItem::dtotalpoint() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItem.dTotalPoint)
  return dtotalpoint_;
}
inline void EvaluationItem::set_dtotalpoint(double value) {
  
  dtotalpoint_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItem.dTotalPoint)
}

// -------------------------------------------------------------------

// EvaluationItemScore

// .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 1;
inline bool EvaluationItemScore::has_evaluationitem() const {
  return this != internal_default_instance() && evaluationitem_ != NULL;
}
inline void EvaluationItemScore::clear_evaluationitem() {
  if (GetArenaNoVirtual() == NULL && evaluationitem_ != NULL) delete evaluationitem_;
  evaluationitem_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::EvaluationItem& EvaluationItemScore::evaluationitem() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItemScore.evaluationItem)
  return evaluationitem_ != NULL ? *evaluationitem_
                         : *::CustomerFlow::Interactive::Message::EvaluationItem::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* EvaluationItemScore::mutable_evaluationitem() {
  
  if (evaluationitem_ == NULL) {
    evaluationitem_ = new ::CustomerFlow::Interactive::Message::EvaluationItem;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EvaluationItemScore.evaluationItem)
  return evaluationitem_;
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* EvaluationItemScore::release_evaluationitem() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.EvaluationItemScore.evaluationItem)
  
  ::CustomerFlow::Interactive::Message::EvaluationItem* temp = evaluationitem_;
  evaluationitem_ = NULL;
  return temp;
}
inline void EvaluationItemScore::set_allocated_evaluationitem(::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem) {
  delete evaluationitem_;
  evaluationitem_ = evaluationitem;
  if (evaluationitem) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.EvaluationItemScore.evaluationItem)
}

// double dScore = 2;
inline void EvaluationItemScore::clear_dscore() {
  dscore_ = 0;
}
inline double EvaluationItemScore::dscore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItemScore.dScore)
  return dscore_;
}
inline void EvaluationItemScore::set_dscore(double value) {
  
  dscore_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItemScore.dScore)
}

// string strDescription = 3;
inline void EvaluationItemScore::clear_strdescription() {
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvaluationItemScore::strdescription() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
  return strdescription_.GetNoArena();
}
inline void EvaluationItemScore::set_strdescription(const ::std::string& value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
}
#if LANG_CXX11
inline void EvaluationItemScore::set_strdescription(::std::string&& value) {
  
  strdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
}
#endif
inline void EvaluationItemScore::set_strdescription(const char* value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
}
inline void EvaluationItemScore::set_strdescription(const char* value, size_t size) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
}
inline ::std::string* EvaluationItemScore::mutable_strdescription() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
  return strdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationItemScore::release_strdescription() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
  
  return strdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationItemScore::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription != NULL) {
    
  } else {
    
  }
  strdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdescription);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.EvaluationItemScore.strDescription)
}

// repeated string strPicture = 4;
inline int EvaluationItemScore::strpicture_size() const {
  return strpicture_.size();
}
inline void EvaluationItemScore::clear_strpicture() {
  strpicture_.Clear();
}
inline const ::std::string& EvaluationItemScore::strpicture(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
  return strpicture_.Get(index);
}
inline ::std::string* EvaluationItemScore::mutable_strpicture(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
  return strpicture_.Mutable(index);
}
inline void EvaluationItemScore::set_strpicture(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
  strpicture_.Mutable(index)->assign(value);
}
inline void EvaluationItemScore::set_strpicture(int index, const char* value) {
  strpicture_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
}
inline void EvaluationItemScore::set_strpicture(int index, const char* value, size_t size) {
  strpicture_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
}
inline ::std::string* EvaluationItemScore::add_strpicture() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
  return strpicture_.Add();
}
inline void EvaluationItemScore::add_strpicture(const ::std::string& value) {
  strpicture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
}
inline void EvaluationItemScore::add_strpicture(const char* value) {
  strpicture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
}
inline void EvaluationItemScore::add_strpicture(const char* value, size_t size) {
  strpicture_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EvaluationItemScore::strpicture() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
  return strpicture_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EvaluationItemScore::mutable_strpicture() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.EvaluationItemScore.strPicture)
  return &strpicture_;
}

// -------------------------------------------------------------------

// StoreEvaluation

// string strEvaluationID = 1;
inline void StoreEvaluation::clear_strevaluationid() {
  strevaluationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoreEvaluation::strevaluationid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
  return strevaluationid_.GetNoArena();
}
inline void StoreEvaluation::set_strevaluationid(const ::std::string& value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
}
#if LANG_CXX11
inline void StoreEvaluation::set_strevaluationid(::std::string&& value) {
  
  strevaluationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
}
#endif
inline void StoreEvaluation::set_strevaluationid(const char* value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
}
inline void StoreEvaluation::set_strevaluationid(const char* value, size_t size) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
}
inline ::std::string* StoreEvaluation::mutable_strevaluationid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
  return strevaluationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreEvaluation::release_strevaluationid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
  
  return strevaluationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreEvaluation::set_allocated_strevaluationid(::std::string* strevaluationid) {
  if (strevaluationid != NULL) {
    
  } else {
    
  }
  strevaluationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strevaluationid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.StoreEvaluation.strEvaluationID)
}

// string strStoreID = 2;
inline void StoreEvaluation::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoreEvaluation::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void StoreEvaluation::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
}
#if LANG_CXX11
inline void StoreEvaluation::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
}
#endif
inline void StoreEvaluation::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
}
inline void StoreEvaluation::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
}
inline ::std::string* StoreEvaluation::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreEvaluation::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreEvaluation::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.StoreEvaluation.strStoreID)
}

// string strUserIDCreate = 3;
inline void StoreEvaluation::clear_struseridcreate() {
  struseridcreate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoreEvaluation::struseridcreate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
  return struseridcreate_.GetNoArena();
}
inline void StoreEvaluation::set_struseridcreate(const ::std::string& value) {
  
  struseridcreate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
}
#if LANG_CXX11
inline void StoreEvaluation::set_struseridcreate(::std::string&& value) {
  
  struseridcreate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
}
#endif
inline void StoreEvaluation::set_struseridcreate(const char* value) {
  
  struseridcreate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
}
inline void StoreEvaluation::set_struseridcreate(const char* value, size_t size) {
  
  struseridcreate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
}
inline ::std::string* StoreEvaluation::mutable_struseridcreate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
  return struseridcreate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreEvaluation::release_struseridcreate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
  
  return struseridcreate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreEvaluation::set_allocated_struseridcreate(::std::string* struseridcreate) {
  if (struseridcreate != NULL) {
    
  } else {
    
  }
  struseridcreate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseridcreate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCreate)
}

// string strUserIDCheck = 4;
inline void StoreEvaluation::clear_struseridcheck() {
  struseridcheck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoreEvaluation::struseridcheck() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
  return struseridcheck_.GetNoArena();
}
inline void StoreEvaluation::set_struseridcheck(const ::std::string& value) {
  
  struseridcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
}
#if LANG_CXX11
inline void StoreEvaluation::set_struseridcheck(::std::string&& value) {
  
  struseridcheck_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
}
#endif
inline void StoreEvaluation::set_struseridcheck(const char* value) {
  
  struseridcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
}
inline void StoreEvaluation::set_struseridcheck(const char* value, size_t size) {
  
  struseridcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
}
inline ::std::string* StoreEvaluation::mutable_struseridcheck() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
  return struseridcheck_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreEvaluation::release_struseridcheck() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
  
  return struseridcheck_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreEvaluation::set_allocated_struseridcheck(::std::string* struseridcheck) {
  if (struseridcheck != NULL) {
    
  } else {
    
  }
  struseridcheck_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseridcheck);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.StoreEvaluation.strUserIDCheck)
}

// double dTotalScore = 5;
inline void StoreEvaluation::clear_dtotalscore() {
  dtotalscore_ = 0;
}
inline double StoreEvaluation::dtotalscore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.dTotalScore)
  return dtotalscore_;
}
inline void StoreEvaluation::set_dtotalscore(double value) {
  
  dtotalscore_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.dTotalScore)
}

// uint32 uiCheckStatus = 6;
inline void StoreEvaluation::clear_uicheckstatus() {
  uicheckstatus_ = 0u;
}
inline ::google::protobuf::uint32 StoreEvaluation::uicheckstatus() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.uiCheckStatus)
  return uicheckstatus_;
}
inline void StoreEvaluation::set_uicheckstatus(::google::protobuf::uint32 value) {
  
  uicheckstatus_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.uiCheckStatus)
}

// repeated .CustomerFlow.Interactive.Message.EvaluationItemScore itemScore = 7;
inline int StoreEvaluation::itemscore_size() const {
  return itemscore_.size();
}
inline void StoreEvaluation::clear_itemscore() {
  itemscore_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::EvaluationItemScore& StoreEvaluation::itemscore(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.itemScore)
  return itemscore_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::EvaluationItemScore* StoreEvaluation::mutable_itemscore(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.itemScore)
  return itemscore_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::EvaluationItemScore* StoreEvaluation::add_itemscore() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.StoreEvaluation.itemScore)
  return itemscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItemScore >*
StoreEvaluation::mutable_itemscore() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.StoreEvaluation.itemScore)
  return &itemscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItemScore >&
StoreEvaluation::itemscore() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.StoreEvaluation.itemScore)
  return itemscore_;
}

// repeated string picture = 8;
inline int StoreEvaluation::picture_size() const {
  return picture_.size();
}
inline void StoreEvaluation::clear_picture() {
  picture_.Clear();
}
inline const ::std::string& StoreEvaluation::picture(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
  return picture_.Get(index);
}
inline ::std::string* StoreEvaluation::mutable_picture(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
  return picture_.Mutable(index);
}
inline void StoreEvaluation::set_picture(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
  picture_.Mutable(index)->assign(value);
}
inline void StoreEvaluation::set_picture(int index, const char* value) {
  picture_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
}
inline void StoreEvaluation::set_picture(int index, const char* value, size_t size) {
  picture_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
}
inline ::std::string* StoreEvaluation::add_picture() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
  return picture_.Add();
}
inline void StoreEvaluation::add_picture(const ::std::string& value) {
  picture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
}
inline void StoreEvaluation::add_picture(const char* value) {
  picture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
}
inline void StoreEvaluation::add_picture(const char* value, size_t size) {
  picture_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StoreEvaluation::picture() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
  return picture_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StoreEvaluation::mutable_picture() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.StoreEvaluation.picture)
  return &picture_;
}

// double dTotalPoint = 9;
inline void StoreEvaluation::clear_dtotalpoint() {
  dtotalpoint_ = 0;
}
inline double StoreEvaluation::dtotalpoint() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.dTotalPoint)
  return dtotalpoint_;
}
inline void StoreEvaluation::set_dtotalpoint(double value) {
  
  dtotalpoint_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.dTotalPoint)
}

// string strCreateDate = 10;
inline void StoreEvaluation::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoreEvaluation::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void StoreEvaluation::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
}
#if LANG_CXX11
inline void StoreEvaluation::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
}
#endif
inline void StoreEvaluation::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
}
inline void StoreEvaluation::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
}
inline ::std::string* StoreEvaluation::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreEvaluation::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreEvaluation::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.StoreEvaluation.strCreateDate)
}

// -------------------------------------------------------------------

// EntrancePicture

// string strEntranceID = 1;
inline void EntrancePicture::clear_strentranceid() {
  strentranceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EntrancePicture::strentranceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
  return strentranceid_.GetNoArena();
}
inline void EntrancePicture::set_strentranceid(const ::std::string& value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
}
#if LANG_CXX11
inline void EntrancePicture::set_strentranceid(::std::string&& value) {
  
  strentranceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
}
#endif
inline void EntrancePicture::set_strentranceid(const char* value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
}
inline void EntrancePicture::set_strentranceid(const char* value, size_t size) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
}
inline ::std::string* EntrancePicture::mutable_strentranceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
  return strentranceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EntrancePicture::release_strentranceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
  
  return strentranceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EntrancePicture::set_allocated_strentranceid(::std::string* strentranceid) {
  if (strentranceid != NULL) {
    
  } else {
    
  }
  strentranceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentranceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.EntrancePicture.strEntranceID)
}

// repeated string strPatrolPicture = 2;
inline int EntrancePicture::strpatrolpicture_size() const {
  return strpatrolpicture_.size();
}
inline void EntrancePicture::clear_strpatrolpicture() {
  strpatrolpicture_.Clear();
}
inline const ::std::string& EntrancePicture::strpatrolpicture(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
  return strpatrolpicture_.Get(index);
}
inline ::std::string* EntrancePicture::mutable_strpatrolpicture(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
  return strpatrolpicture_.Mutable(index);
}
inline void EntrancePicture::set_strpatrolpicture(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
  strpatrolpicture_.Mutable(index)->assign(value);
}
inline void EntrancePicture::set_strpatrolpicture(int index, const char* value) {
  strpatrolpicture_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
}
inline void EntrancePicture::set_strpatrolpicture(int index, const char* value, size_t size) {
  strpatrolpicture_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
}
inline ::std::string* EntrancePicture::add_strpatrolpicture() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
  return strpatrolpicture_.Add();
}
inline void EntrancePicture::add_strpatrolpicture(const ::std::string& value) {
  strpatrolpicture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
}
inline void EntrancePicture::add_strpatrolpicture(const char* value) {
  strpatrolpicture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
}
inline void EntrancePicture::add_strpatrolpicture(const char* value, size_t size) {
  strpatrolpicture_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EntrancePicture::strpatrolpicture() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
  return strpatrolpicture_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EntrancePicture::mutable_strpatrolpicture() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.EntrancePicture.strPatrolPicture)
  return &strpatrolpicture_;
}

// -------------------------------------------------------------------

// RemotePatrolStore

// string strPatrolID = 1;
inline void RemotePatrolStore::clear_strpatrolid() {
  strpatrolid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strpatrolid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
  return strpatrolid_.GetNoArena();
}
inline void RemotePatrolStore::set_strpatrolid(const ::std::string& value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strpatrolid(::std::string&& value) {
  
  strpatrolid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
}
#endif
inline void RemotePatrolStore::set_strpatrolid(const char* value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
}
inline void RemotePatrolStore::set_strpatrolid(const char* value, size_t size) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
}
inline ::std::string* RemotePatrolStore::mutable_strpatrolid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
  return strpatrolid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strpatrolid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
  
  return strpatrolid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strpatrolid(::std::string* strpatrolid) {
  if (strpatrolid != NULL) {
    
  } else {
    
  }
  strpatrolid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpatrolid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolID)
}

// string strUserID = 2;
inline void RemotePatrolStore::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
  return struserid_.GetNoArena();
}
inline void RemotePatrolStore::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
}
#endif
inline void RemotePatrolStore::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
}
inline void RemotePatrolStore::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
}
inline ::std::string* RemotePatrolStore::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strUserID)
}

// string strDeviceID = 3;
inline void RemotePatrolStore::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void RemotePatrolStore::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
}
#endif
inline void RemotePatrolStore::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
}
inline void RemotePatrolStore::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
}
inline ::std::string* RemotePatrolStore::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strDeviceID)
}

// repeated string strEntranceID = 4;
inline int RemotePatrolStore::strentranceid_size() const {
  return strentranceid_.size();
}
inline void RemotePatrolStore::clear_strentranceid() {
  strentranceid_.Clear();
}
inline const ::std::string& RemotePatrolStore::strentranceid(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
  return strentranceid_.Get(index);
}
inline ::std::string* RemotePatrolStore::mutable_strentranceid(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
  return strentranceid_.Mutable(index);
}
inline void RemotePatrolStore::set_strentranceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
  strentranceid_.Mutable(index)->assign(value);
}
inline void RemotePatrolStore::set_strentranceid(int index, const char* value) {
  strentranceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
}
inline void RemotePatrolStore::set_strentranceid(int index, const char* value, size_t size) {
  strentranceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
}
inline ::std::string* RemotePatrolStore::add_strentranceid() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
  return strentranceid_.Add();
}
inline void RemotePatrolStore::add_strentranceid(const ::std::string& value) {
  strentranceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
}
inline void RemotePatrolStore::add_strentranceid(const char* value) {
  strentranceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
}
inline void RemotePatrolStore::add_strentranceid(const char* value, size_t size) {
  strentranceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemotePatrolStore::strentranceid() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
  return strentranceid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RemotePatrolStore::mutable_strentranceid() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RemotePatrolStore.strEntranceID)
  return &strentranceid_;
}

// string strStoreID = 5;
inline void RemotePatrolStore::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void RemotePatrolStore::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
}
#endif
inline void RemotePatrolStore::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
}
inline void RemotePatrolStore::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
}
inline ::std::string* RemotePatrolStore::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strStoreID)
}

// string strPlanID = 6;
inline void RemotePatrolStore::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
  return strplanid_.GetNoArena();
}
inline void RemotePatrolStore::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
}
#endif
inline void RemotePatrolStore::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
}
inline void RemotePatrolStore::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
}
inline ::std::string* RemotePatrolStore::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strPlanID)
}

// string strPatrolDate = 7;
inline void RemotePatrolStore::clear_strpatroldate() {
  strpatroldate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strpatroldate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
  return strpatroldate_.GetNoArena();
}
inline void RemotePatrolStore::set_strpatroldate(const ::std::string& value) {
  
  strpatroldate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strpatroldate(::std::string&& value) {
  
  strpatroldate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
}
#endif
inline void RemotePatrolStore::set_strpatroldate(const char* value) {
  
  strpatroldate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
}
inline void RemotePatrolStore::set_strpatroldate(const char* value, size_t size) {
  
  strpatroldate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
}
inline ::std::string* RemotePatrolStore::mutable_strpatroldate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
  return strpatroldate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strpatroldate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
  
  return strpatroldate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strpatroldate(::std::string* strpatroldate) {
  if (strpatroldate != NULL) {
    
  } else {
    
  }
  strpatroldate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpatroldate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolDate)
}

// repeated .CustomerFlow.Interactive.Message.EntrancePicture patrolPicture = 8;
inline int RemotePatrolStore::patrolpicture_size() const {
  return patrolpicture_.size();
}
inline void RemotePatrolStore::clear_patrolpicture() {
  patrolpicture_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::EntrancePicture& RemotePatrolStore::patrolpicture(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.patrolPicture)
  return patrolpicture_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::EntrancePicture* RemotePatrolStore::mutable_patrolpicture(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.patrolPicture)
  return patrolpicture_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::EntrancePicture* RemotePatrolStore::add_patrolpicture() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RemotePatrolStore.patrolPicture)
  return patrolpicture_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EntrancePicture >*
RemotePatrolStore::mutable_patrolpicture() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RemotePatrolStore.patrolPicture)
  return &patrolpicture_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EntrancePicture >&
RemotePatrolStore::patrolpicture() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RemotePatrolStore.patrolPicture)
  return patrolpicture_;
}

// repeated string strPatrolPicture = 9;
inline int RemotePatrolStore::strpatrolpicture_size() const {
  return strpatrolpicture_.size();
}
inline void RemotePatrolStore::clear_strpatrolpicture() {
  strpatrolpicture_.Clear();
}
inline const ::std::string& RemotePatrolStore::strpatrolpicture(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
  return strpatrolpicture_.Get(index);
}
inline ::std::string* RemotePatrolStore::mutable_strpatrolpicture(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
  return strpatrolpicture_.Mutable(index);
}
inline void RemotePatrolStore::set_strpatrolpicture(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
  strpatrolpicture_.Mutable(index)->assign(value);
}
inline void RemotePatrolStore::set_strpatrolpicture(int index, const char* value) {
  strpatrolpicture_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
}
inline void RemotePatrolStore::set_strpatrolpicture(int index, const char* value, size_t size) {
  strpatrolpicture_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
}
inline ::std::string* RemotePatrolStore::add_strpatrolpicture() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
  return strpatrolpicture_.Add();
}
inline void RemotePatrolStore::add_strpatrolpicture(const ::std::string& value) {
  strpatrolpicture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
}
inline void RemotePatrolStore::add_strpatrolpicture(const char* value) {
  strpatrolpicture_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
}
inline void RemotePatrolStore::add_strpatrolpicture(const char* value, size_t size) {
  strpatrolpicture_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemotePatrolStore::strpatrolpicture() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
  return strpatrolpicture_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RemotePatrolStore::mutable_strpatrolpicture() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RemotePatrolStore.strPatrolPicture)
  return &strpatrolpicture_;
}

// uint32 uiPatrolResult = 10;
inline void RemotePatrolStore::clear_uipatrolresult() {
  uipatrolresult_ = 0u;
}
inline ::google::protobuf::uint32 RemotePatrolStore::uipatrolresult() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.uiPatrolResult)
  return uipatrolresult_;
}
inline void RemotePatrolStore::set_uipatrolresult(::google::protobuf::uint32 value) {
  
  uipatrolresult_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.uiPatrolResult)
}

// string strDescription = 11;
inline void RemotePatrolStore::clear_strdescription() {
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strdescription() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
  return strdescription_.GetNoArena();
}
inline void RemotePatrolStore::set_strdescription(const ::std::string& value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strdescription(::std::string&& value) {
  
  strdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
}
#endif
inline void RemotePatrolStore::set_strdescription(const char* value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
}
inline void RemotePatrolStore::set_strdescription(const char* value, size_t size) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
}
inline ::std::string* RemotePatrolStore::mutable_strdescription() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
  return strdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strdescription() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
  
  return strdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription != NULL) {
    
  } else {
    
  }
  strdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdescription);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strDescription)
}

// string strCreateDate = 12;
inline void RemotePatrolStore::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemotePatrolStore::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void RemotePatrolStore::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
}
#if LANG_CXX11
inline void RemotePatrolStore::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
}
#endif
inline void RemotePatrolStore::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
}
inline void RemotePatrolStore::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
}
inline ::std::string* RemotePatrolStore::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemotePatrolStore::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemotePatrolStore::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemotePatrolStore.strCreateDate)
}

// -------------------------------------------------------------------

// Sensor

// string strSensorID = 1;
inline void Sensor::clear_strsensorid() {
  strsensorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strsensorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strSensorID)
  return strsensorid_.GetNoArena();
}
inline void Sensor::set_strsensorid(const ::std::string& value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strSensorID)
}
#if LANG_CXX11
inline void Sensor::set_strsensorid(::std::string&& value) {
  
  strsensorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strSensorID)
}
#endif
inline void Sensor::set_strsensorid(const char* value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strSensorID)
}
inline void Sensor::set_strsensorid(const char* value, size_t size) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strSensorID)
}
inline ::std::string* Sensor::mutable_strsensorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strSensorID)
  return strsensorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strsensorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strSensorID)
  
  return strsensorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strsensorid(::std::string* strsensorid) {
  if (strsensorid != NULL) {
    
  } else {
    
  }
  strsensorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strSensorID)
}

// string strSensorName = 2;
inline void Sensor::clear_strsensorname() {
  strsensorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strsensorname() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strSensorName)
  return strsensorname_.GetNoArena();
}
inline void Sensor::set_strsensorname(const ::std::string& value) {
  
  strsensorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strSensorName)
}
#if LANG_CXX11
inline void Sensor::set_strsensorname(::std::string&& value) {
  
  strsensorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strSensorName)
}
#endif
inline void Sensor::set_strsensorname(const char* value) {
  
  strsensorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strSensorName)
}
inline void Sensor::set_strsensorname(const char* value, size_t size) {
  
  strsensorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strSensorName)
}
inline ::std::string* Sensor::mutable_strsensorname() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strSensorName)
  return strsensorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strsensorname() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strSensorName)
  
  return strsensorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strsensorname(::std::string* strsensorname) {
  if (strsensorname != NULL) {
    
  } else {
    
  }
  strsensorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorname);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strSensorName)
}

// string strSensorType = 3;
inline void Sensor::clear_strsensortype() {
  strsensortype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strsensortype() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strSensorType)
  return strsensortype_.GetNoArena();
}
inline void Sensor::set_strsensortype(const ::std::string& value) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strSensorType)
}
#if LANG_CXX11
inline void Sensor::set_strsensortype(::std::string&& value) {
  
  strsensortype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strSensorType)
}
#endif
inline void Sensor::set_strsensortype(const char* value) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strSensorType)
}
inline void Sensor::set_strsensortype(const char* value, size_t size) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strSensorType)
}
inline ::std::string* Sensor::mutable_strsensortype() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strSensorType)
  return strsensortype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strsensortype() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strSensorType)
  
  return strsensortype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strsensortype(::std::string* strsensortype) {
  if (strsensortype != NULL) {
    
  } else {
    
  }
  strsensortype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensortype);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strSensorType)
}

// string strSensorAlarmThreshold = 4;
inline void Sensor::clear_strsensoralarmthreshold() {
  strsensoralarmthreshold_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strsensoralarmthreshold() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
  return strsensoralarmthreshold_.GetNoArena();
}
inline void Sensor::set_strsensoralarmthreshold(const ::std::string& value) {
  
  strsensoralarmthreshold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
}
#if LANG_CXX11
inline void Sensor::set_strsensoralarmthreshold(::std::string&& value) {
  
  strsensoralarmthreshold_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
}
#endif
inline void Sensor::set_strsensoralarmthreshold(const char* value) {
  
  strsensoralarmthreshold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
}
inline void Sensor::set_strsensoralarmthreshold(const char* value, size_t size) {
  
  strsensoralarmthreshold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
}
inline ::std::string* Sensor::mutable_strsensoralarmthreshold() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
  return strsensoralarmthreshold_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strsensoralarmthreshold() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
  
  return strsensoralarmthreshold_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strsensoralarmthreshold(::std::string* strsensoralarmthreshold) {
  if (strsensoralarmthreshold != NULL) {
    
  } else {
    
  }
  strsensoralarmthreshold_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensoralarmthreshold);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strSensorAlarmThreshold)
}

// string strStoreID = 5;
inline void Sensor::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void Sensor::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strStoreID)
}
#if LANG_CXX11
inline void Sensor::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strStoreID)
}
#endif
inline void Sensor::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strStoreID)
}
inline void Sensor::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strStoreID)
}
inline ::std::string* Sensor::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strStoreID)
}

// string strDeviceID = 6;
inline void Sensor::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void Sensor::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
}
#if LANG_CXX11
inline void Sensor::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
}
#endif
inline void Sensor::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
}
inline void Sensor::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
}
inline ::std::string* Sensor::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strDeviceID)
}

// string strValue = 7;
inline void Sensor::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strValue)
  return strvalue_.GetNoArena();
}
inline void Sensor::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strValue)
}
#if LANG_CXX11
inline void Sensor::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strValue)
}
#endif
inline void Sensor::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strValue)
}
inline void Sensor::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strValue)
}
inline ::std::string* Sensor::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strValue)
}

// uint32 uiState = 8;
inline void Sensor::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 Sensor::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.uiState)
  return uistate_;
}
inline void Sensor::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.uiState)
}

// string strCreateDate = 9;
inline void Sensor::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void Sensor::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
}
#if LANG_CXX11
inline void Sensor::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
}
#endif
inline void Sensor::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
}
inline void Sensor::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
}
inline ::std::string* Sensor::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strCreateDate)
}

// string strSensorKey = 10;
inline void Sensor::clear_strsensorkey() {
  strsensorkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strsensorkey() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
  return strsensorkey_.GetNoArena();
}
inline void Sensor::set_strsensorkey(const ::std::string& value) {
  
  strsensorkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
}
#if LANG_CXX11
inline void Sensor::set_strsensorkey(::std::string&& value) {
  
  strsensorkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
}
#endif
inline void Sensor::set_strsensorkey(const char* value) {
  
  strsensorkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
}
inline void Sensor::set_strsensorkey(const char* value, size_t size) {
  
  strsensorkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
}
inline ::std::string* Sensor::mutable_strsensorkey() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
  return strsensorkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strsensorkey() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
  
  return strsensorkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strsensorkey(::std::string* strsensorkey) {
  if (strsensorkey != NULL) {
    
  } else {
    
  }
  strsensorkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorkey);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strSensorKey)
}

// string strLocation = 11;
inline void Sensor::clear_strlocation() {
  strlocation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Sensor::strlocation() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Sensor.strLocation)
  return strlocation_.GetNoArena();
}
inline void Sensor::set_strlocation(const ::std::string& value) {
  
  strlocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Sensor.strLocation)
}
#if LANG_CXX11
inline void Sensor::set_strlocation(::std::string&& value) {
  
  strlocation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Sensor.strLocation)
}
#endif
inline void Sensor::set_strlocation(const char* value) {
  
  strlocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Sensor.strLocation)
}
inline void Sensor::set_strlocation(const char* value, size_t size) {
  
  strlocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Sensor.strLocation)
}
inline ::std::string* Sensor::mutable_strlocation() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Sensor.strLocation)
  return strlocation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sensor::release_strlocation() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Sensor.strLocation)
  
  return strlocation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sensor::set_allocated_strlocation(::std::string* strlocation) {
  if (strlocation != NULL) {
    
  } else {
    
  }
  strlocation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlocation);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Sensor.strLocation)
}

// -------------------------------------------------------------------

// RawCustomerFlow

// uint32 uiEnterNumber = 1;
inline void RawCustomerFlow::clear_uienternumber() {
  uienternumber_ = 0u;
}
inline ::google::protobuf::uint32 RawCustomerFlow::uienternumber() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RawCustomerFlow.uiEnterNumber)
  return uienternumber_;
}
inline void RawCustomerFlow::set_uienternumber(::google::protobuf::uint32 value) {
  
  uienternumber_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RawCustomerFlow.uiEnterNumber)
}

// uint32 uiLeaveNumber = 2;
inline void RawCustomerFlow::clear_uileavenumber() {
  uileavenumber_ = 0u;
}
inline ::google::protobuf::uint32 RawCustomerFlow::uileavenumber() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RawCustomerFlow.uiLeaveNumber)
  return uileavenumber_;
}
inline void RawCustomerFlow::set_uileavenumber(::google::protobuf::uint32 value) {
  
  uileavenumber_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RawCustomerFlow.uiLeaveNumber)
}

// uint32 uiStayNumber = 3;
inline void RawCustomerFlow::clear_uistaynumber() {
  uistaynumber_ = 0u;
}
inline ::google::protobuf::uint32 RawCustomerFlow::uistaynumber() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RawCustomerFlow.uiStayNumber)
  return uistaynumber_;
}
inline void RawCustomerFlow::set_uistaynumber(::google::protobuf::uint32 value) {
  
  uistaynumber_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RawCustomerFlow.uiStayNumber)
}

// string strDataTime = 4;
inline void RawCustomerFlow::clear_strdatatime() {
  strdatatime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RawCustomerFlow::strdatatime() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
  return strdatatime_.GetNoArena();
}
inline void RawCustomerFlow::set_strdatatime(const ::std::string& value) {
  
  strdatatime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
}
#if LANG_CXX11
inline void RawCustomerFlow::set_strdatatime(::std::string&& value) {
  
  strdatatime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
}
#endif
inline void RawCustomerFlow::set_strdatatime(const char* value) {
  
  strdatatime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
}
inline void RawCustomerFlow::set_strdatatime(const char* value, size_t size) {
  
  strdatatime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
}
inline ::std::string* RawCustomerFlow::mutable_strdatatime() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
  return strdatatime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RawCustomerFlow::release_strdatatime() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
  
  return strdatatime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RawCustomerFlow::set_allocated_strdatatime(::std::string* strdatatime) {
  if (strdatatime != NULL) {
    
  } else {
    
  }
  strdatatime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdatatime);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RawCustomerFlow.strDataTime)
}

// -------------------------------------------------------------------

// CustomerFlowPreHandleReq

// string strValue = 1;
inline void CustomerFlowPreHandleReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomerFlowPreHandleReq::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
  return strvalue_.GetNoArena();
}
inline void CustomerFlowPreHandleReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
}
#if LANG_CXX11
inline void CustomerFlowPreHandleReq::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
}
#endif
inline void CustomerFlowPreHandleReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
}
inline void CustomerFlowPreHandleReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
}
inline ::std::string* CustomerFlowPreHandleReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomerFlowPreHandleReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomerFlowPreHandleReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq.strValue)
}

// -------------------------------------------------------------------

// CustomerFlowPreHandleRsp

// string strValue = 1;
inline void CustomerFlowPreHandleRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomerFlowPreHandleRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void CustomerFlowPreHandleRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
}
#if LANG_CXX11
inline void CustomerFlowPreHandleRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
}
#endif
inline void CustomerFlowPreHandleRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
}
inline void CustomerFlowPreHandleRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
}
inline ::std::string* CustomerFlowPreHandleRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomerFlowPreHandleRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomerFlowPreHandleRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp.strValue)
}

// -------------------------------------------------------------------

// ShakehandReq

// string strID = 1;
inline void ShakehandReq::clear_strid() {
  strid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandReq::strid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ShakehandReq.strID)
  return strid_.GetNoArena();
}
inline void ShakehandReq::set_strid(const ::std::string& value) {
  
  strid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ShakehandReq.strID)
}
#if LANG_CXX11
inline void ShakehandReq::set_strid(::std::string&& value) {
  
  strid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ShakehandReq.strID)
}
#endif
inline void ShakehandReq::set_strid(const char* value) {
  
  strid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ShakehandReq.strID)
}
inline void ShakehandReq::set_strid(const char* value, size_t size) {
  
  strid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ShakehandReq.strID)
}
inline ::std::string* ShakehandReq::mutable_strid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ShakehandReq.strID)
  return strid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandReq::release_strid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ShakehandReq.strID)
  
  return strid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq::set_allocated_strid(::std::string* strid) {
  if (strid != NULL) {
    
  } else {
    
  }
  strid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ShakehandReq.strID)
}

// -------------------------------------------------------------------

// ShakehandRsp

// string strValue = 1;
inline void ShakehandRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ShakehandRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
}
#if LANG_CXX11
inline void ShakehandRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
}
#endif
inline void ShakehandRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
}
inline void ShakehandRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
}
inline ::std::string* ShakehandRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ShakehandRsp.strValue)
}

// -------------------------------------------------------------------

// AddAreaReq

// string strUserID = 1;
inline void AddAreaReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddAreaReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddAreaReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
}
#if LANG_CXX11
inline void AddAreaReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
}
#endif
inline void AddAreaReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
}
inline void AddAreaReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
}
inline ::std::string* AddAreaReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddAreaReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddAreaReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddAreaReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Area areaInfo = 2;
inline bool AddAreaReq::has_areainfo() const {
  return this != internal_default_instance() && areainfo_ != NULL;
}
inline void AddAreaReq::clear_areainfo() {
  if (GetArenaNoVirtual() == NULL && areainfo_ != NULL) delete areainfo_;
  areainfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Area& AddAreaReq::areainfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddAreaReq.areaInfo)
  return areainfo_ != NULL ? *areainfo_
                         : *::CustomerFlow::Interactive::Message::Area::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Area* AddAreaReq::mutable_areainfo() {
  
  if (areainfo_ == NULL) {
    areainfo_ = new ::CustomerFlow::Interactive::Message::Area;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddAreaReq.areaInfo)
  return areainfo_;
}
inline ::CustomerFlow::Interactive::Message::Area* AddAreaReq::release_areainfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddAreaReq.areaInfo)
  
  ::CustomerFlow::Interactive::Message::Area* temp = areainfo_;
  areainfo_ = NULL;
  return temp;
}
inline void AddAreaReq::set_allocated_areainfo(::CustomerFlow::Interactive::Message::Area* areainfo) {
  delete areainfo_;
  areainfo_ = areainfo;
  if (areainfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddAreaReq.areaInfo)
}

// -------------------------------------------------------------------

// AddAreaRsp

// string strAreaID = 1;
inline void AddAreaRsp::clear_strareaid() {
  strareaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddAreaRsp::strareaid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
  return strareaid_.GetNoArena();
}
inline void AddAreaRsp::set_strareaid(const ::std::string& value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
}
#if LANG_CXX11
inline void AddAreaRsp::set_strareaid(::std::string&& value) {
  
  strareaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
}
#endif
inline void AddAreaRsp::set_strareaid(const char* value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
}
inline void AddAreaRsp::set_strareaid(const char* value, size_t size) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
}
inline ::std::string* AddAreaRsp::mutable_strareaid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
  return strareaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddAreaRsp::release_strareaid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
  
  return strareaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddAreaRsp::set_allocated_strareaid(::std::string* strareaid) {
  if (strareaid != NULL) {
    
  } else {
    
  }
  strareaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strareaid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddAreaRsp.strAreaID)
}

// -------------------------------------------------------------------

// DeleteAreaReq

// string strUserID = 1;
inline void DeleteAreaReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAreaReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteAreaReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
}
#if LANG_CXX11
inline void DeleteAreaReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
}
#endif
inline void DeleteAreaReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
}
inline void DeleteAreaReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
}
inline ::std::string* DeleteAreaReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAreaReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAreaReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteAreaReq.strUserID)
}

// string strAreaID = 2;
inline void DeleteAreaReq::clear_strareaid() {
  strareaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAreaReq::strareaid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
  return strareaid_.GetNoArena();
}
inline void DeleteAreaReq::set_strareaid(const ::std::string& value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
}
#if LANG_CXX11
inline void DeleteAreaReq::set_strareaid(::std::string&& value) {
  
  strareaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
}
#endif
inline void DeleteAreaReq::set_strareaid(const char* value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
}
inline void DeleteAreaReq::set_strareaid(const char* value, size_t size) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
}
inline ::std::string* DeleteAreaReq::mutable_strareaid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
  return strareaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAreaReq::release_strareaid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
  
  return strareaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAreaReq::set_allocated_strareaid(::std::string* strareaid) {
  if (strareaid != NULL) {
    
  } else {
    
  }
  strareaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strareaid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteAreaReq.strAreaID)
}

// -------------------------------------------------------------------

// DeleteAreaRsp

// string strValue = 1;
inline void DeleteAreaRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAreaRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteAreaRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
}
#if LANG_CXX11
inline void DeleteAreaRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
}
#endif
inline void DeleteAreaRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
}
inline void DeleteAreaRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
}
inline ::std::string* DeleteAreaRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAreaRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAreaRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteAreaRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyAreaReq

// string strUserID = 1;
inline void ModifyAreaReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyAreaReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyAreaReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
}
#if LANG_CXX11
inline void ModifyAreaReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
}
#endif
inline void ModifyAreaReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
}
inline void ModifyAreaReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
}
inline ::std::string* ModifyAreaReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyAreaReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyAreaReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyAreaReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Area areaInfo = 2;
inline bool ModifyAreaReq::has_areainfo() const {
  return this != internal_default_instance() && areainfo_ != NULL;
}
inline void ModifyAreaReq::clear_areainfo() {
  if (GetArenaNoVirtual() == NULL && areainfo_ != NULL) delete areainfo_;
  areainfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Area& ModifyAreaReq::areainfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyAreaReq.areaInfo)
  return areainfo_ != NULL ? *areainfo_
                         : *::CustomerFlow::Interactive::Message::Area::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Area* ModifyAreaReq::mutable_areainfo() {
  
  if (areainfo_ == NULL) {
    areainfo_ = new ::CustomerFlow::Interactive::Message::Area;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyAreaReq.areaInfo)
  return areainfo_;
}
inline ::CustomerFlow::Interactive::Message::Area* ModifyAreaReq::release_areainfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyAreaReq.areaInfo)
  
  ::CustomerFlow::Interactive::Message::Area* temp = areainfo_;
  areainfo_ = NULL;
  return temp;
}
inline void ModifyAreaReq::set_allocated_areainfo(::CustomerFlow::Interactive::Message::Area* areainfo) {
  delete areainfo_;
  areainfo_ = areainfo;
  if (areainfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyAreaReq.areaInfo)
}

// -------------------------------------------------------------------

// ModifyAreaRsp

// string strValue = 1;
inline void ModifyAreaRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyAreaRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyAreaRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
}
#if LANG_CXX11
inline void ModifyAreaRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
}
#endif
inline void ModifyAreaRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
}
inline void ModifyAreaRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
}
inline ::std::string* ModifyAreaRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyAreaRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyAreaRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyAreaRsp.strValue)
}

// -------------------------------------------------------------------

// QueryAreaInfoReq

// string strUserID = 1;
inline void QueryAreaInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAreaInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAreaInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryAreaInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
}
#endif
inline void QueryAreaInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
}
inline void QueryAreaInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
}
inline ::std::string* QueryAreaInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAreaInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAreaInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strUserID)
}

// string strAreaID = 2;
inline void QueryAreaInfoReq::clear_strareaid() {
  strareaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAreaInfoReq::strareaid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
  return strareaid_.GetNoArena();
}
inline void QueryAreaInfoReq::set_strareaid(const ::std::string& value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
}
#if LANG_CXX11
inline void QueryAreaInfoReq::set_strareaid(::std::string&& value) {
  
  strareaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
}
#endif
inline void QueryAreaInfoReq::set_strareaid(const char* value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
}
inline void QueryAreaInfoReq::set_strareaid(const char* value, size_t size) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
}
inline ::std::string* QueryAreaInfoReq::mutable_strareaid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
  return strareaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAreaInfoReq::release_strareaid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
  
  return strareaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAreaInfoReq::set_allocated_strareaid(::std::string* strareaid) {
  if (strareaid != NULL) {
    
  } else {
    
  }
  strareaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strareaid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAreaInfoReq.strAreaID)
}

// -------------------------------------------------------------------

// QueryAreaInfoRsp

// .CustomerFlow.Interactive.Message.Area areaInfo = 1;
inline bool QueryAreaInfoRsp::has_areainfo() const {
  return this != internal_default_instance() && areainfo_ != NULL;
}
inline void QueryAreaInfoRsp::clear_areainfo() {
  if (GetArenaNoVirtual() == NULL && areainfo_ != NULL) delete areainfo_;
  areainfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Area& QueryAreaInfoRsp::areainfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAreaInfoRsp.areaInfo)
  return areainfo_ != NULL ? *areainfo_
                         : *::CustomerFlow::Interactive::Message::Area::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Area* QueryAreaInfoRsp::mutable_areainfo() {
  
  if (areainfo_ == NULL) {
    areainfo_ = new ::CustomerFlow::Interactive::Message::Area;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAreaInfoRsp.areaInfo)
  return areainfo_;
}
inline ::CustomerFlow::Interactive::Message::Area* QueryAreaInfoRsp::release_areainfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAreaInfoRsp.areaInfo)
  
  ::CustomerFlow::Interactive::Message::Area* temp = areainfo_;
  areainfo_ = NULL;
  return temp;
}
inline void QueryAreaInfoRsp::set_allocated_areainfo(::CustomerFlow::Interactive::Message::Area* areainfo) {
  delete areainfo_;
  areainfo_ = areainfo;
  if (areainfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAreaInfoRsp.areaInfo)
}

// -------------------------------------------------------------------

// QueryAllAreaReq

// string strUserID = 1;
inline void QueryAllAreaReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllAreaReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllAreaReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllAreaReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
}
#endif
inline void QueryAllAreaReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
}
inline void QueryAllAreaReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
}
inline ::std::string* QueryAllAreaReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllAreaReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllAreaReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllAreaReq.strUserID)
}

// -------------------------------------------------------------------

// QueryAllAreaRsp

// repeated .CustomerFlow.Interactive.Message.Area areaInfo = 1;
inline int QueryAllAreaRsp::areainfo_size() const {
  return areainfo_.size();
}
inline void QueryAllAreaRsp::clear_areainfo() {
  areainfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Area& QueryAllAreaRsp::areainfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllAreaRsp.areaInfo)
  return areainfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Area* QueryAllAreaRsp::mutable_areainfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllAreaRsp.areaInfo)
  return areainfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Area* QueryAllAreaRsp::add_areainfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllAreaRsp.areaInfo)
  return areainfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >*
QueryAllAreaRsp::mutable_areainfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllAreaRsp.areaInfo)
  return &areainfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >&
QueryAllAreaRsp::areainfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllAreaRsp.areaInfo)
  return areainfo_;
}

// -------------------------------------------------------------------

// BindPushClientIDReq

// string strUserID = 1;
inline void BindPushClientIDReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindPushClientIDReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
  return struserid_.GetNoArena();
}
inline void BindPushClientIDReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
}
#if LANG_CXX11
inline void BindPushClientIDReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
}
#endif
inline void BindPushClientIDReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
}
inline void BindPushClientIDReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
}
inline ::std::string* BindPushClientIDReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindPushClientIDReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindPushClientIDReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.BindPushClientIDReq.strUserID)
}

// string strClientID = 2;
inline void BindPushClientIDReq::clear_strclientid() {
  strclientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindPushClientIDReq::strclientid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
  return strclientid_.GetNoArena();
}
inline void BindPushClientIDReq::set_strclientid(const ::std::string& value) {
  
  strclientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
}
#if LANG_CXX11
inline void BindPushClientIDReq::set_strclientid(::std::string&& value) {
  
  strclientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
}
#endif
inline void BindPushClientIDReq::set_strclientid(const char* value) {
  
  strclientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
}
inline void BindPushClientIDReq::set_strclientid(const char* value, size_t size) {
  
  strclientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
}
inline ::std::string* BindPushClientIDReq::mutable_strclientid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
  return strclientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindPushClientIDReq::release_strclientid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
  
  return strclientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindPushClientIDReq::set_allocated_strclientid(::std::string* strclientid) {
  if (strclientid != NULL) {
    
  } else {
    
  }
  strclientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclientid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.BindPushClientIDReq.strClientID)
}

// -------------------------------------------------------------------

// BindPushClientIDRsp

// string strValue = 1;
inline void BindPushClientIDRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindPushClientIDRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void BindPushClientIDRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
}
#if LANG_CXX11
inline void BindPushClientIDRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
}
#endif
inline void BindPushClientIDRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
}
inline void BindPushClientIDRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
}
inline ::std::string* BindPushClientIDRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindPushClientIDRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindPushClientIDRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.BindPushClientIDRsp.strValue)
}

// -------------------------------------------------------------------

// UnbindPushClientIDReq

// string strUserID = 1;
inline void UnbindPushClientIDReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnbindPushClientIDReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
  return struserid_.GetNoArena();
}
inline void UnbindPushClientIDReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
}
#if LANG_CXX11
inline void UnbindPushClientIDReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
}
#endif
inline void UnbindPushClientIDReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
}
inline void UnbindPushClientIDReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
}
inline ::std::string* UnbindPushClientIDReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnbindPushClientIDReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnbindPushClientIDReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strUserID)
}

// string strClientID = 2;
inline void UnbindPushClientIDReq::clear_strclientid() {
  strclientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnbindPushClientIDReq::strclientid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
  return strclientid_.GetNoArena();
}
inline void UnbindPushClientIDReq::set_strclientid(const ::std::string& value) {
  
  strclientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
}
#if LANG_CXX11
inline void UnbindPushClientIDReq::set_strclientid(::std::string&& value) {
  
  strclientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
}
#endif
inline void UnbindPushClientIDReq::set_strclientid(const char* value) {
  
  strclientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
}
inline void UnbindPushClientIDReq::set_strclientid(const char* value, size_t size) {
  
  strclientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
}
inline ::std::string* UnbindPushClientIDReq::mutable_strclientid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
  return strclientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnbindPushClientIDReq::release_strclientid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
  
  return strclientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnbindPushClientIDReq::set_allocated_strclientid(::std::string* strclientid) {
  if (strclientid != NULL) {
    
  } else {
    
  }
  strclientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclientid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UnbindPushClientIDReq.strClientID)
}

// -------------------------------------------------------------------

// UnbindPushClientIDRsp

// string strValue = 1;
inline void UnbindPushClientIDRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnbindPushClientIDRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void UnbindPushClientIDRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
}
#if LANG_CXX11
inline void UnbindPushClientIDRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
}
#endif
inline void UnbindPushClientIDRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
}
inline void UnbindPushClientIDRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
}
inline ::std::string* UnbindPushClientIDRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnbindPushClientIDRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnbindPushClientIDRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UnbindPushClientIDRsp.strValue)
}

// -------------------------------------------------------------------

// AddGroupReq

// string strUserID = 1;
inline void AddGroupReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddGroupReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddGroupReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
}
#if LANG_CXX11
inline void AddGroupReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
}
#endif
inline void AddGroupReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
}
inline void AddGroupReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
}
inline ::std::string* AddGroupReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddGroupReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddGroupReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddGroupReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Group groupInfo = 2;
inline bool AddGroupReq::has_groupinfo() const {
  return this != internal_default_instance() && groupinfo_ != NULL;
}
inline void AddGroupReq::clear_groupinfo() {
  if (GetArenaNoVirtual() == NULL && groupinfo_ != NULL) delete groupinfo_;
  groupinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Group& AddGroupReq::groupinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddGroupReq.groupInfo)
  return groupinfo_ != NULL ? *groupinfo_
                         : *::CustomerFlow::Interactive::Message::Group::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Group* AddGroupReq::mutable_groupinfo() {
  
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::CustomerFlow::Interactive::Message::Group;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddGroupReq.groupInfo)
  return groupinfo_;
}
inline ::CustomerFlow::Interactive::Message::Group* AddGroupReq::release_groupinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddGroupReq.groupInfo)
  
  ::CustomerFlow::Interactive::Message::Group* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void AddGroupReq::set_allocated_groupinfo(::CustomerFlow::Interactive::Message::Group* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddGroupReq.groupInfo)
}

// -------------------------------------------------------------------

// AddGroupRsp

// string strGroupID = 1;
inline void AddGroupRsp::clear_strgroupid() {
  strgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddGroupRsp::strgroupid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
  return strgroupid_.GetNoArena();
}
inline void AddGroupRsp::set_strgroupid(const ::std::string& value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
}
#if LANG_CXX11
inline void AddGroupRsp::set_strgroupid(::std::string&& value) {
  
  strgroupid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
}
#endif
inline void AddGroupRsp::set_strgroupid(const char* value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
}
inline void AddGroupRsp::set_strgroupid(const char* value, size_t size) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
}
inline ::std::string* AddGroupRsp::mutable_strgroupid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
  return strgroupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddGroupRsp::release_strgroupid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
  
  return strgroupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddGroupRsp::set_allocated_strgroupid(::std::string* strgroupid) {
  if (strgroupid != NULL) {
    
  } else {
    
  }
  strgroupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddGroupRsp.strGroupID)
}

// -------------------------------------------------------------------

// DeleteGroupReq

// string strUserID = 1;
inline void DeleteGroupReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteGroupReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteGroupReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
}
#if LANG_CXX11
inline void DeleteGroupReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
}
#endif
inline void DeleteGroupReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
}
inline void DeleteGroupReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
}
inline ::std::string* DeleteGroupReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteGroupReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteGroupReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteGroupReq.strUserID)
}

// string strGroupID = 2;
inline void DeleteGroupReq::clear_strgroupid() {
  strgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteGroupReq::strgroupid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
  return strgroupid_.GetNoArena();
}
inline void DeleteGroupReq::set_strgroupid(const ::std::string& value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
}
#if LANG_CXX11
inline void DeleteGroupReq::set_strgroupid(::std::string&& value) {
  
  strgroupid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
}
#endif
inline void DeleteGroupReq::set_strgroupid(const char* value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
}
inline void DeleteGroupReq::set_strgroupid(const char* value, size_t size) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
}
inline ::std::string* DeleteGroupReq::mutable_strgroupid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
  return strgroupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteGroupReq::release_strgroupid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
  
  return strgroupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteGroupReq::set_allocated_strgroupid(::std::string* strgroupid) {
  if (strgroupid != NULL) {
    
  } else {
    
  }
  strgroupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteGroupReq.strGroupID)
}

// -------------------------------------------------------------------

// DeleteGroupRsp

// string strValue = 1;
inline void DeleteGroupRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteGroupRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteGroupRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
}
#if LANG_CXX11
inline void DeleteGroupRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
}
#endif
inline void DeleteGroupRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
}
inline void DeleteGroupRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
}
inline ::std::string* DeleteGroupRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteGroupRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteGroupRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteGroupRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyGroupReq

// string strUserID = 1;
inline void ModifyGroupReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyGroupReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyGroupReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
}
#if LANG_CXX11
inline void ModifyGroupReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
}
#endif
inline void ModifyGroupReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
}
inline void ModifyGroupReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
}
inline ::std::string* ModifyGroupReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyGroupReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyGroupReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyGroupReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Group groupInfo = 2;
inline bool ModifyGroupReq::has_groupinfo() const {
  return this != internal_default_instance() && groupinfo_ != NULL;
}
inline void ModifyGroupReq::clear_groupinfo() {
  if (GetArenaNoVirtual() == NULL && groupinfo_ != NULL) delete groupinfo_;
  groupinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Group& ModifyGroupReq::groupinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyGroupReq.groupInfo)
  return groupinfo_ != NULL ? *groupinfo_
                         : *::CustomerFlow::Interactive::Message::Group::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Group* ModifyGroupReq::mutable_groupinfo() {
  
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::CustomerFlow::Interactive::Message::Group;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyGroupReq.groupInfo)
  return groupinfo_;
}
inline ::CustomerFlow::Interactive::Message::Group* ModifyGroupReq::release_groupinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyGroupReq.groupInfo)
  
  ::CustomerFlow::Interactive::Message::Group* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void ModifyGroupReq::set_allocated_groupinfo(::CustomerFlow::Interactive::Message::Group* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyGroupReq.groupInfo)
}

// -------------------------------------------------------------------

// ModifyGroupRsp

// string strValue = 1;
inline void ModifyGroupRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyGroupRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyGroupRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
}
#if LANG_CXX11
inline void ModifyGroupRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
}
#endif
inline void ModifyGroupRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
}
inline void ModifyGroupRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
}
inline ::std::string* ModifyGroupRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyGroupRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyGroupRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyGroupRsp.strValue)
}

// -------------------------------------------------------------------

// QueryGroupInfoReq

// string strUserID = 1;
inline void QueryGroupInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryGroupInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryGroupInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryGroupInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
}
#endif
inline void QueryGroupInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
}
inline void QueryGroupInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
}
inline ::std::string* QueryGroupInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryGroupInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryGroupInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strUserID)
}

// string strGroupID = 2;
inline void QueryGroupInfoReq::clear_strgroupid() {
  strgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryGroupInfoReq::strgroupid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
  return strgroupid_.GetNoArena();
}
inline void QueryGroupInfoReq::set_strgroupid(const ::std::string& value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
}
#if LANG_CXX11
inline void QueryGroupInfoReq::set_strgroupid(::std::string&& value) {
  
  strgroupid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
}
#endif
inline void QueryGroupInfoReq::set_strgroupid(const char* value) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
}
inline void QueryGroupInfoReq::set_strgroupid(const char* value, size_t size) {
  
  strgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
}
inline ::std::string* QueryGroupInfoReq::mutable_strgroupid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
  return strgroupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryGroupInfoReq::release_strgroupid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
  
  return strgroupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryGroupInfoReq::set_allocated_strgroupid(::std::string* strgroupid) {
  if (strgroupid != NULL) {
    
  } else {
    
  }
  strgroupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryGroupInfoReq.strGroupID)
}

// -------------------------------------------------------------------

// QueryGroupInfoRsp

// .CustomerFlow.Interactive.Message.Group groupInfo = 1;
inline bool QueryGroupInfoRsp::has_groupinfo() const {
  return this != internal_default_instance() && groupinfo_ != NULL;
}
inline void QueryGroupInfoRsp::clear_groupinfo() {
  if (GetArenaNoVirtual() == NULL && groupinfo_ != NULL) delete groupinfo_;
  groupinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Group& QueryGroupInfoRsp::groupinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryGroupInfoRsp.groupInfo)
  return groupinfo_ != NULL ? *groupinfo_
                         : *::CustomerFlow::Interactive::Message::Group::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Group* QueryGroupInfoRsp::mutable_groupinfo() {
  
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::CustomerFlow::Interactive::Message::Group;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryGroupInfoRsp.groupInfo)
  return groupinfo_;
}
inline ::CustomerFlow::Interactive::Message::Group* QueryGroupInfoRsp::release_groupinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryGroupInfoRsp.groupInfo)
  
  ::CustomerFlow::Interactive::Message::Group* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void QueryGroupInfoRsp::set_allocated_groupinfo(::CustomerFlow::Interactive::Message::Group* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryGroupInfoRsp.groupInfo)
}

// -------------------------------------------------------------------

// QueryAllGroupReq

// string strUserID = 1;
inline void QueryAllGroupReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllGroupReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllGroupReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllGroupReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
}
#endif
inline void QueryAllGroupReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
}
inline void QueryAllGroupReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
}
inline ::std::string* QueryAllGroupReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllGroupReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllGroupReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllGroupReq.strUserID)
}

// -------------------------------------------------------------------

// QueryAllGroupRsp

// repeated .CustomerFlow.Interactive.Message.Group groupInfo = 1;
inline int QueryAllGroupRsp::groupinfo_size() const {
  return groupinfo_.size();
}
inline void QueryAllGroupRsp::clear_groupinfo() {
  groupinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Group& QueryAllGroupRsp::groupinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllGroupRsp.groupInfo)
  return groupinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Group* QueryAllGroupRsp::mutable_groupinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllGroupRsp.groupInfo)
  return groupinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Group* QueryAllGroupRsp::add_groupinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllGroupRsp.groupInfo)
  return groupinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Group >*
QueryAllGroupRsp::mutable_groupinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllGroupRsp.groupInfo)
  return &groupinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Group >&
QueryAllGroupRsp::groupinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllGroupRsp.groupInfo)
  return groupinfo_;
}

// -------------------------------------------------------------------

// AddStoreReq

// string strUserID = 1;
inline void AddStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
}
#if LANG_CXX11
inline void AddStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
}
#endif
inline void AddStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
}
inline void AddStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
}
inline ::std::string* AddStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Store storeInfo = 2;
inline bool AddStoreReq::has_storeinfo() const {
  return this != internal_default_instance() && storeinfo_ != NULL;
}
inline void AddStoreReq::clear_storeinfo() {
  if (GetArenaNoVirtual() == NULL && storeinfo_ != NULL) delete storeinfo_;
  storeinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Store& AddStoreReq::storeinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreReq.storeInfo)
  return storeinfo_ != NULL ? *storeinfo_
                         : *::CustomerFlow::Interactive::Message::Store::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Store* AddStoreReq::mutable_storeinfo() {
  
  if (storeinfo_ == NULL) {
    storeinfo_ = new ::CustomerFlow::Interactive::Message::Store;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreReq.storeInfo)
  return storeinfo_;
}
inline ::CustomerFlow::Interactive::Message::Store* AddStoreReq::release_storeinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreReq.storeInfo)
  
  ::CustomerFlow::Interactive::Message::Store* temp = storeinfo_;
  storeinfo_ = NULL;
  return temp;
}
inline void AddStoreReq::set_allocated_storeinfo(::CustomerFlow::Interactive::Message::Store* storeinfo) {
  delete storeinfo_;
  storeinfo_ = storeinfo;
  if (storeinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreReq.storeInfo)
}

// -------------------------------------------------------------------

// AddStoreRsp

// string strStoreID = 1;
inline void AddStoreRsp::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddStoreRsp::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void AddStoreRsp::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
}
#if LANG_CXX11
inline void AddStoreRsp::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
}
#endif
inline void AddStoreRsp::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
}
inline void AddStoreRsp::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
}
inline ::std::string* AddStoreRsp::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddStoreRsp::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddStoreRsp::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreRsp.strStoreID)
}

// -------------------------------------------------------------------

// DeleteStoreReq

// string strUserID = 1;
inline void DeleteStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
}
#if LANG_CXX11
inline void DeleteStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
}
#endif
inline void DeleteStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
}
inline void DeleteStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
}
inline ::std::string* DeleteStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreReq.strUserID)
}

// string strStoreID = 2;
inline void DeleteStoreReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void DeleteStoreReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
}
#if LANG_CXX11
inline void DeleteStoreReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
}
#endif
inline void DeleteStoreReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
}
inline void DeleteStoreReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
}
inline ::std::string* DeleteStoreReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreReq.strStoreID)
}

// -------------------------------------------------------------------

// DeleteStoreRsp

// string strValue = 1;
inline void DeleteStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
}
#if LANG_CXX11
inline void DeleteStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
}
#endif
inline void DeleteStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
}
inline void DeleteStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
}
inline ::std::string* DeleteStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyStoreReq

// string strUserID = 1;
inline void ModifyStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
}
#if LANG_CXX11
inline void ModifyStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
}
#endif
inline void ModifyStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
}
inline void ModifyStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
}
inline ::std::string* ModifyStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Store storeInfo = 2;
inline bool ModifyStoreReq::has_storeinfo() const {
  return this != internal_default_instance() && storeinfo_ != NULL;
}
inline void ModifyStoreReq::clear_storeinfo() {
  if (GetArenaNoVirtual() == NULL && storeinfo_ != NULL) delete storeinfo_;
  storeinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Store& ModifyStoreReq::storeinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreReq.storeInfo)
  return storeinfo_ != NULL ? *storeinfo_
                         : *::CustomerFlow::Interactive::Message::Store::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Store* ModifyStoreReq::mutable_storeinfo() {
  
  if (storeinfo_ == NULL) {
    storeinfo_ = new ::CustomerFlow::Interactive::Message::Store;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreReq.storeInfo)
  return storeinfo_;
}
inline ::CustomerFlow::Interactive::Message::Store* ModifyStoreReq::release_storeinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreReq.storeInfo)
  
  ::CustomerFlow::Interactive::Message::Store* temp = storeinfo_;
  storeinfo_ = NULL;
  return temp;
}
inline void ModifyStoreReq::set_allocated_storeinfo(::CustomerFlow::Interactive::Message::Store* storeinfo) {
  delete storeinfo_;
  storeinfo_ = storeinfo;
  if (storeinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreReq.storeInfo)
}

// -------------------------------------------------------------------

// ModifyStoreRsp

// string strValue = 1;
inline void ModifyStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
}
#if LANG_CXX11
inline void ModifyStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
}
#endif
inline void ModifyStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
}
inline void ModifyStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
}
inline ::std::string* ModifyStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreRsp.strValue)
}

// -------------------------------------------------------------------

// QueryStoreInfoReq

// string strUserID = 1;
inline void QueryStoreInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryStoreInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryStoreInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
}
#endif
inline void QueryStoreInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
}
inline void QueryStoreInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
}
inline ::std::string* QueryStoreInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strUserID)
}

// string strStoreID = 2;
inline void QueryStoreInfoReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreInfoReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryStoreInfoReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
}
#if LANG_CXX11
inline void QueryStoreInfoReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
}
#endif
inline void QueryStoreInfoReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
}
inline void QueryStoreInfoReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
}
inline ::std::string* QueryStoreInfoReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreInfoReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreInfoReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreInfoReq.strStoreID)
}

// -------------------------------------------------------------------

// QueryStoreInfoRsp

// .CustomerFlow.Interactive.Message.Store storeInfo = 1;
inline bool QueryStoreInfoRsp::has_storeinfo() const {
  return this != internal_default_instance() && storeinfo_ != NULL;
}
inline void QueryStoreInfoRsp::clear_storeinfo() {
  if (GetArenaNoVirtual() == NULL && storeinfo_ != NULL) delete storeinfo_;
  storeinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Store& QueryStoreInfoRsp::storeinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.storeInfo)
  return storeinfo_ != NULL ? *storeinfo_
                         : *::CustomerFlow::Interactive::Message::Store::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Store* QueryStoreInfoRsp::mutable_storeinfo() {
  
  if (storeinfo_ == NULL) {
    storeinfo_ = new ::CustomerFlow::Interactive::Message::Store;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.storeInfo)
  return storeinfo_;
}
inline ::CustomerFlow::Interactive::Message::Store* QueryStoreInfoRsp::release_storeinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.storeInfo)
  
  ::CustomerFlow::Interactive::Message::Store* temp = storeinfo_;
  storeinfo_ = NULL;
  return temp;
}
inline void QueryStoreInfoRsp::set_allocated_storeinfo(::CustomerFlow::Interactive::Message::Store* storeinfo) {
  delete storeinfo_;
  storeinfo_ = storeinfo;
  if (storeinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.storeInfo)
}

// repeated .CustomerFlow.Interactive.Message.Area area = 2;
inline int QueryStoreInfoRsp::area_size() const {
  return area_.size();
}
inline void QueryStoreInfoRsp::clear_area() {
  area_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Area& QueryStoreInfoRsp::area(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.area)
  return area_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Area* QueryStoreInfoRsp::mutable_area(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.area)
  return area_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Area* QueryStoreInfoRsp::add_area() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.area)
  return area_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >*
QueryStoreInfoRsp::mutable_area() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.area)
  return &area_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Area >&
QueryStoreInfoRsp::area() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryStoreInfoRsp.area)
  return area_;
}

// -------------------------------------------------------------------

// QueryAllStoreReq

// string strUserID = 1;
inline void QueryAllStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
}
#endif
inline void QueryAllStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
}
inline void QueryAllStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
}
inline ::std::string* QueryAllStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreReq.strUserID)
}

// string strAreaID = 2;
inline void QueryAllStoreReq::clear_strareaid() {
  strareaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreReq::strareaid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
  return strareaid_.GetNoArena();
}
inline void QueryAllStoreReq::set_strareaid(const ::std::string& value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
}
#if LANG_CXX11
inline void QueryAllStoreReq::set_strareaid(::std::string&& value) {
  
  strareaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
}
#endif
inline void QueryAllStoreReq::set_strareaid(const char* value) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
}
inline void QueryAllStoreReq::set_strareaid(const char* value, size_t size) {
  
  strareaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
}
inline ::std::string* QueryAllStoreReq::mutable_strareaid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
  return strareaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreReq::release_strareaid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
  
  return strareaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreReq::set_allocated_strareaid(::std::string* strareaid) {
  if (strareaid != NULL) {
    
  } else {
    
  }
  strareaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strareaid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreReq.strAreaID)
}

// uint32 uiOpenState = 3;
inline void QueryAllStoreReq::clear_uiopenstate() {
  uiopenstate_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllStoreReq::uiopenstate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreReq.uiOpenState)
  return uiopenstate_;
}
inline void QueryAllStoreReq::set_uiopenstate(::google::protobuf::uint32 value) {
  
  uiopenstate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreReq.uiOpenState)
}

// uint32 uiBeginIndex = 4;
inline void QueryAllStoreReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllStoreReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllStoreReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// QueryAllStoreRsp

// repeated .CustomerFlow.Interactive.Message.Store storeInfo = 1;
inline int QueryAllStoreRsp::storeinfo_size() const {
  return storeinfo_.size();
}
inline void QueryAllStoreRsp::clear_storeinfo() {
  storeinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Store& QueryAllStoreRsp::storeinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreRsp.storeInfo)
  return storeinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Store* QueryAllStoreRsp::mutable_storeinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreRsp.storeInfo)
  return storeinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Store* QueryAllStoreRsp::add_storeinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllStoreRsp.storeInfo)
  return storeinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Store >*
QueryAllStoreRsp::mutable_storeinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllStoreRsp.storeInfo)
  return &storeinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Store >&
QueryAllStoreRsp::storeinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllStoreRsp.storeInfo)
  return storeinfo_;
}

// -------------------------------------------------------------------

// AddEntranceReq

// string strUserID = 1;
inline void AddEntranceReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddEntranceReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
}
#if LANG_CXX11
inline void AddEntranceReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
}
#endif
inline void AddEntranceReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
}
inline void AddEntranceReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
}
inline ::std::string* AddEntranceReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceReq.strUserID)
}

// string strStoreID = 2;
inline void AddEntranceReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void AddEntranceReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
}
#if LANG_CXX11
inline void AddEntranceReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
}
#endif
inline void AddEntranceReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
}
inline void AddEntranceReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
}
inline ::std::string* AddEntranceReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceReq.strStoreID)
}

// .CustomerFlow.Interactive.Message.Entrance entranceInfo = 3;
inline bool AddEntranceReq::has_entranceinfo() const {
  return this != internal_default_instance() && entranceinfo_ != NULL;
}
inline void AddEntranceReq::clear_entranceinfo() {
  if (GetArenaNoVirtual() == NULL && entranceinfo_ != NULL) delete entranceinfo_;
  entranceinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Entrance& AddEntranceReq::entranceinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceReq.entranceInfo)
  return entranceinfo_ != NULL ? *entranceinfo_
                         : *::CustomerFlow::Interactive::Message::Entrance::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Entrance* AddEntranceReq::mutable_entranceinfo() {
  
  if (entranceinfo_ == NULL) {
    entranceinfo_ = new ::CustomerFlow::Interactive::Message::Entrance;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceReq.entranceInfo)
  return entranceinfo_;
}
inline ::CustomerFlow::Interactive::Message::Entrance* AddEntranceReq::release_entranceinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceReq.entranceInfo)
  
  ::CustomerFlow::Interactive::Message::Entrance* temp = entranceinfo_;
  entranceinfo_ = NULL;
  return temp;
}
inline void AddEntranceReq::set_allocated_entranceinfo(::CustomerFlow::Interactive::Message::Entrance* entranceinfo) {
  delete entranceinfo_;
  entranceinfo_ = entranceinfo;
  if (entranceinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceReq.entranceInfo)
}

// -------------------------------------------------------------------

// AddEntranceRsp

// string strEntranceID = 1;
inline void AddEntranceRsp::clear_strentranceid() {
  strentranceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceRsp::strentranceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
  return strentranceid_.GetNoArena();
}
inline void AddEntranceRsp::set_strentranceid(const ::std::string& value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
}
#if LANG_CXX11
inline void AddEntranceRsp::set_strentranceid(::std::string&& value) {
  
  strentranceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
}
#endif
inline void AddEntranceRsp::set_strentranceid(const char* value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
}
inline void AddEntranceRsp::set_strentranceid(const char* value, size_t size) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
}
inline ::std::string* AddEntranceRsp::mutable_strentranceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
  return strentranceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceRsp::release_strentranceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
  
  return strentranceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceRsp::set_allocated_strentranceid(::std::string* strentranceid) {
  if (strentranceid != NULL) {
    
  } else {
    
  }
  strentranceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentranceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceRsp.strEntranceID)
}

// -------------------------------------------------------------------

// DeleteEntranceReq

// string strUserID = 1;
inline void DeleteEntranceReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteEntranceReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
}
#if LANG_CXX11
inline void DeleteEntranceReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
}
#endif
inline void DeleteEntranceReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
}
inline void DeleteEntranceReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
}
inline ::std::string* DeleteEntranceReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceReq.strUserID)
}

// string strStoreID = 2;
inline void DeleteEntranceReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void DeleteEntranceReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
}
#if LANG_CXX11
inline void DeleteEntranceReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
}
#endif
inline void DeleteEntranceReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
}
inline void DeleteEntranceReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
}
inline ::std::string* DeleteEntranceReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceReq.strStoreID)
}

// string strEntranceID = 3;
inline void DeleteEntranceReq::clear_strentranceid() {
  strentranceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceReq::strentranceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
  return strentranceid_.GetNoArena();
}
inline void DeleteEntranceReq::set_strentranceid(const ::std::string& value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
}
#if LANG_CXX11
inline void DeleteEntranceReq::set_strentranceid(::std::string&& value) {
  
  strentranceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
}
#endif
inline void DeleteEntranceReq::set_strentranceid(const char* value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
}
inline void DeleteEntranceReq::set_strentranceid(const char* value, size_t size) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
}
inline ::std::string* DeleteEntranceReq::mutable_strentranceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
  return strentranceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceReq::release_strentranceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
  
  return strentranceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceReq::set_allocated_strentranceid(::std::string* strentranceid) {
  if (strentranceid != NULL) {
    
  } else {
    
  }
  strentranceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentranceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceReq.strEntranceID)
}

// -------------------------------------------------------------------

// DeleteEntranceRsp

// string strValue = 1;
inline void DeleteEntranceRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteEntranceRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
}
#if LANG_CXX11
inline void DeleteEntranceRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
}
#endif
inline void DeleteEntranceRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
}
inline void DeleteEntranceRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
}
inline ::std::string* DeleteEntranceRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyEntranceReq

// string strUserID = 1;
inline void ModifyEntranceReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEntranceReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyEntranceReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
}
#if LANG_CXX11
inline void ModifyEntranceReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
}
#endif
inline void ModifyEntranceReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
}
inline void ModifyEntranceReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
}
inline ::std::string* ModifyEntranceReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEntranceReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEntranceReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEntranceReq.strUserID)
}

// string strStoreID = 2;
inline void ModifyEntranceReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEntranceReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void ModifyEntranceReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
}
#if LANG_CXX11
inline void ModifyEntranceReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
}
#endif
inline void ModifyEntranceReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
}
inline void ModifyEntranceReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
}
inline ::std::string* ModifyEntranceReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEntranceReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEntranceReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEntranceReq.strStoreID)
}

// .CustomerFlow.Interactive.Message.Entrance entranceInfo = 3;
inline bool ModifyEntranceReq::has_entranceinfo() const {
  return this != internal_default_instance() && entranceinfo_ != NULL;
}
inline void ModifyEntranceReq::clear_entranceinfo() {
  if (GetArenaNoVirtual() == NULL && entranceinfo_ != NULL) delete entranceinfo_;
  entranceinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Entrance& ModifyEntranceReq::entranceinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEntranceReq.entranceInfo)
  return entranceinfo_ != NULL ? *entranceinfo_
                         : *::CustomerFlow::Interactive::Message::Entrance::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Entrance* ModifyEntranceReq::mutable_entranceinfo() {
  
  if (entranceinfo_ == NULL) {
    entranceinfo_ = new ::CustomerFlow::Interactive::Message::Entrance;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.entranceInfo)
  return entranceinfo_;
}
inline ::CustomerFlow::Interactive::Message::Entrance* ModifyEntranceReq::release_entranceinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEntranceReq.entranceInfo)
  
  ::CustomerFlow::Interactive::Message::Entrance* temp = entranceinfo_;
  entranceinfo_ = NULL;
  return temp;
}
inline void ModifyEntranceReq::set_allocated_entranceinfo(::CustomerFlow::Interactive::Message::Entrance* entranceinfo) {
  delete entranceinfo_;
  entranceinfo_ = entranceinfo;
  if (entranceinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEntranceReq.entranceInfo)
}

// repeated string strAddedDeviceID = 4;
inline int ModifyEntranceReq::straddeddeviceid_size() const {
  return straddeddeviceid_.size();
}
inline void ModifyEntranceReq::clear_straddeddeviceid() {
  straddeddeviceid_.Clear();
}
inline const ::std::string& ModifyEntranceReq::straddeddeviceid(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
  return straddeddeviceid_.Get(index);
}
inline ::std::string* ModifyEntranceReq::mutable_straddeddeviceid(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
  return straddeddeviceid_.Mutable(index);
}
inline void ModifyEntranceReq::set_straddeddeviceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
  straddeddeviceid_.Mutable(index)->assign(value);
}
inline void ModifyEntranceReq::set_straddeddeviceid(int index, const char* value) {
  straddeddeviceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
}
inline void ModifyEntranceReq::set_straddeddeviceid(int index, const char* value, size_t size) {
  straddeddeviceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
}
inline ::std::string* ModifyEntranceReq::add_straddeddeviceid() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
  return straddeddeviceid_.Add();
}
inline void ModifyEntranceReq::add_straddeddeviceid(const ::std::string& value) {
  straddeddeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
}
inline void ModifyEntranceReq::add_straddeddeviceid(const char* value) {
  straddeddeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
}
inline void ModifyEntranceReq::add_straddeddeviceid(const char* value, size_t size) {
  straddeddeviceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ModifyEntranceReq::straddeddeviceid() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
  return straddeddeviceid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ModifyEntranceReq::mutable_straddeddeviceid() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.ModifyEntranceReq.strAddedDeviceID)
  return &straddeddeviceid_;
}

// repeated string strDeletedDeviceID = 5;
inline int ModifyEntranceReq::strdeleteddeviceid_size() const {
  return strdeleteddeviceid_.size();
}
inline void ModifyEntranceReq::clear_strdeleteddeviceid() {
  strdeleteddeviceid_.Clear();
}
inline const ::std::string& ModifyEntranceReq::strdeleteddeviceid(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
  return strdeleteddeviceid_.Get(index);
}
inline ::std::string* ModifyEntranceReq::mutable_strdeleteddeviceid(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
  return strdeleteddeviceid_.Mutable(index);
}
inline void ModifyEntranceReq::set_strdeleteddeviceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
  strdeleteddeviceid_.Mutable(index)->assign(value);
}
inline void ModifyEntranceReq::set_strdeleteddeviceid(int index, const char* value) {
  strdeleteddeviceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
}
inline void ModifyEntranceReq::set_strdeleteddeviceid(int index, const char* value, size_t size) {
  strdeleteddeviceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
}
inline ::std::string* ModifyEntranceReq::add_strdeleteddeviceid() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
  return strdeleteddeviceid_.Add();
}
inline void ModifyEntranceReq::add_strdeleteddeviceid(const ::std::string& value) {
  strdeleteddeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
}
inline void ModifyEntranceReq::add_strdeleteddeviceid(const char* value) {
  strdeleteddeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
}
inline void ModifyEntranceReq::add_strdeleteddeviceid(const char* value, size_t size) {
  strdeleteddeviceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ModifyEntranceReq::strdeleteddeviceid() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
  return strdeleteddeviceid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ModifyEntranceReq::mutable_strdeleteddeviceid() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.ModifyEntranceReq.strDeletedDeviceID)
  return &strdeleteddeviceid_;
}

// -------------------------------------------------------------------

// ModifyEntranceRsp

// string strValue = 1;
inline void ModifyEntranceRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEntranceRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyEntranceRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
}
#if LANG_CXX11
inline void ModifyEntranceRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
}
#endif
inline void ModifyEntranceRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
}
inline void ModifyEntranceRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
}
inline ::std::string* ModifyEntranceRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEntranceRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEntranceRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEntranceRsp.strValue)
}

// -------------------------------------------------------------------

// AddEntranceDeviceReq

// string strUserID = 1;
inline void AddEntranceDeviceReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceDeviceReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddEntranceDeviceReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
}
#if LANG_CXX11
inline void AddEntranceDeviceReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
}
#endif
inline void AddEntranceDeviceReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
}
inline void AddEntranceDeviceReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
}
inline ::std::string* AddEntranceDeviceReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceDeviceReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceDeviceReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strUserID)
}

// string strStoreID = 2;
inline void AddEntranceDeviceReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceDeviceReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void AddEntranceDeviceReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
}
#if LANG_CXX11
inline void AddEntranceDeviceReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
}
#endif
inline void AddEntranceDeviceReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
}
inline void AddEntranceDeviceReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
}
inline ::std::string* AddEntranceDeviceReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceDeviceReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceDeviceReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strStoreID)
}

// string strEntranceID = 3;
inline void AddEntranceDeviceReq::clear_strentranceid() {
  strentranceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceDeviceReq::strentranceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
  return strentranceid_.GetNoArena();
}
inline void AddEntranceDeviceReq::set_strentranceid(const ::std::string& value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
}
#if LANG_CXX11
inline void AddEntranceDeviceReq::set_strentranceid(::std::string&& value) {
  
  strentranceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
}
#endif
inline void AddEntranceDeviceReq::set_strentranceid(const char* value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
}
inline void AddEntranceDeviceReq::set_strentranceid(const char* value, size_t size) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
}
inline ::std::string* AddEntranceDeviceReq::mutable_strentranceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
  return strentranceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceDeviceReq::release_strentranceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
  
  return strentranceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceDeviceReq::set_allocated_strentranceid(::std::string* strentranceid) {
  if (strentranceid != NULL) {
    
  } else {
    
  }
  strentranceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentranceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strEntranceID)
}

// string strDeviceID = 4;
inline void AddEntranceDeviceReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceDeviceReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void AddEntranceDeviceReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
}
#if LANG_CXX11
inline void AddEntranceDeviceReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
}
#endif
inline void AddEntranceDeviceReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
}
inline void AddEntranceDeviceReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
}
inline ::std::string* AddEntranceDeviceReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceDeviceReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceDeviceReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceDeviceReq.strDeviceID)
}

// -------------------------------------------------------------------

// AddEntranceDeviceRsp

// string strValue = 1;
inline void AddEntranceDeviceRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEntranceDeviceRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void AddEntranceDeviceRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
}
#if LANG_CXX11
inline void AddEntranceDeviceRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
}
#endif
inline void AddEntranceDeviceRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
}
inline void AddEntranceDeviceRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
}
inline ::std::string* AddEntranceDeviceRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEntranceDeviceRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEntranceDeviceRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEntranceDeviceRsp.strValue)
}

// -------------------------------------------------------------------

// DeleteEntranceDeviceReq

// string strUserID = 1;
inline void DeleteEntranceDeviceReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceDeviceReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteEntranceDeviceReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
}
#if LANG_CXX11
inline void DeleteEntranceDeviceReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
}
#endif
inline void DeleteEntranceDeviceReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
}
inline void DeleteEntranceDeviceReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
}
inline ::std::string* DeleteEntranceDeviceReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceDeviceReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceDeviceReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strUserID)
}

// string strStoreID = 2;
inline void DeleteEntranceDeviceReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceDeviceReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void DeleteEntranceDeviceReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
}
#if LANG_CXX11
inline void DeleteEntranceDeviceReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
}
#endif
inline void DeleteEntranceDeviceReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
}
inline void DeleteEntranceDeviceReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
}
inline ::std::string* DeleteEntranceDeviceReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceDeviceReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceDeviceReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strStoreID)
}

// string strEntranceID = 3;
inline void DeleteEntranceDeviceReq::clear_strentranceid() {
  strentranceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceDeviceReq::strentranceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
  return strentranceid_.GetNoArena();
}
inline void DeleteEntranceDeviceReq::set_strentranceid(const ::std::string& value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
}
#if LANG_CXX11
inline void DeleteEntranceDeviceReq::set_strentranceid(::std::string&& value) {
  
  strentranceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
}
#endif
inline void DeleteEntranceDeviceReq::set_strentranceid(const char* value) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
}
inline void DeleteEntranceDeviceReq::set_strentranceid(const char* value, size_t size) {
  
  strentranceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
}
inline ::std::string* DeleteEntranceDeviceReq::mutable_strentranceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
  return strentranceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceDeviceReq::release_strentranceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
  
  return strentranceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceDeviceReq::set_allocated_strentranceid(::std::string* strentranceid) {
  if (strentranceid != NULL) {
    
  } else {
    
  }
  strentranceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strentranceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strEntranceID)
}

// string strDeviceID = 4;
inline void DeleteEntranceDeviceReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceDeviceReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void DeleteEntranceDeviceReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
}
#if LANG_CXX11
inline void DeleteEntranceDeviceReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
}
#endif
inline void DeleteEntranceDeviceReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
}
inline void DeleteEntranceDeviceReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
}
inline ::std::string* DeleteEntranceDeviceReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceDeviceReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceDeviceReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq.strDeviceID)
}

// -------------------------------------------------------------------

// DeleteEntranceDeviceRsp

// string strValue = 1;
inline void DeleteEntranceDeviceRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEntranceDeviceRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteEntranceDeviceRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
}
#if LANG_CXX11
inline void DeleteEntranceDeviceRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
}
#endif
inline void DeleteEntranceDeviceRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
}
inline void DeleteEntranceDeviceRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
}
inline ::std::string* DeleteEntranceDeviceRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEntranceDeviceRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEntranceDeviceRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp.strValue)
}

// -------------------------------------------------------------------

// AddEventReq

// .CustomerFlow.Interactive.Message.Event eventInfo = 1;
inline bool AddEventReq::has_eventinfo() const {
  return this != internal_default_instance() && eventinfo_ != NULL;
}
inline void AddEventReq::clear_eventinfo() {
  if (GetArenaNoVirtual() == NULL && eventinfo_ != NULL) delete eventinfo_;
  eventinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Event& AddEventReq::eventinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEventReq.eventInfo)
  return eventinfo_ != NULL ? *eventinfo_
                         : *::CustomerFlow::Interactive::Message::Event::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Event* AddEventReq::mutable_eventinfo() {
  
  if (eventinfo_ == NULL) {
    eventinfo_ = new ::CustomerFlow::Interactive::Message::Event;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEventReq.eventInfo)
  return eventinfo_;
}
inline ::CustomerFlow::Interactive::Message::Event* AddEventReq::release_eventinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEventReq.eventInfo)
  
  ::CustomerFlow::Interactive::Message::Event* temp = eventinfo_;
  eventinfo_ = NULL;
  return temp;
}
inline void AddEventReq::set_allocated_eventinfo(::CustomerFlow::Interactive::Message::Event* eventinfo) {
  delete eventinfo_;
  eventinfo_ = eventinfo;
  if (eventinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEventReq.eventInfo)
}

// -------------------------------------------------------------------

// AddEventRsp

// string strEventID = 1;
inline void AddEventRsp::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEventRsp::streventid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
  return streventid_.GetNoArena();
}
inline void AddEventRsp::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
}
#if LANG_CXX11
inline void AddEventRsp::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
}
#endif
inline void AddEventRsp::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
}
inline void AddEventRsp::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
}
inline ::std::string* AddEventRsp::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEventRsp::release_streventid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEventRsp::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEventRsp.strEventID)
}

// -------------------------------------------------------------------

// DeleteEventReq

// string strUserID = 1;
inline void DeleteEventReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEventReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteEventReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
}
#if LANG_CXX11
inline void DeleteEventReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
}
#endif
inline void DeleteEventReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
}
inline void DeleteEventReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
}
inline ::std::string* DeleteEventReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEventReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEventReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEventReq.strUserID)
}

// string strEventID = 2;
inline void DeleteEventReq::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEventReq::streventid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
  return streventid_.GetNoArena();
}
inline void DeleteEventReq::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
}
#if LANG_CXX11
inline void DeleteEventReq::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
}
#endif
inline void DeleteEventReq::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
}
inline void DeleteEventReq::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
}
inline ::std::string* DeleteEventReq::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEventReq::release_streventid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEventReq::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEventReq.strEventID)
}

// -------------------------------------------------------------------

// DeleteEventRsp

// string strValue = 1;
inline void DeleteEventRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEventRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteEventRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
}
#if LANG_CXX11
inline void DeleteEventRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
}
#endif
inline void DeleteEventRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
}
inline void DeleteEventRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
}
inline ::std::string* DeleteEventRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEventRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEventRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEventRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyEventReq

// string strUserID = 1;
inline void ModifyEventReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEventReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyEventReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
}
#if LANG_CXX11
inline void ModifyEventReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
}
#endif
inline void ModifyEventReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
}
inline void ModifyEventReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
}
inline ::std::string* ModifyEventReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEventReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEventReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEventReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Event eventInfo = 2;
inline bool ModifyEventReq::has_eventinfo() const {
  return this != internal_default_instance() && eventinfo_ != NULL;
}
inline void ModifyEventReq::clear_eventinfo() {
  if (GetArenaNoVirtual() == NULL && eventinfo_ != NULL) delete eventinfo_;
  eventinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Event& ModifyEventReq::eventinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEventReq.eventInfo)
  return eventinfo_ != NULL ? *eventinfo_
                         : *::CustomerFlow::Interactive::Message::Event::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Event* ModifyEventReq::mutable_eventinfo() {
  
  if (eventinfo_ == NULL) {
    eventinfo_ = new ::CustomerFlow::Interactive::Message::Event;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEventReq.eventInfo)
  return eventinfo_;
}
inline ::CustomerFlow::Interactive::Message::Event* ModifyEventReq::release_eventinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEventReq.eventInfo)
  
  ::CustomerFlow::Interactive::Message::Event* temp = eventinfo_;
  eventinfo_ = NULL;
  return temp;
}
inline void ModifyEventReq::set_allocated_eventinfo(::CustomerFlow::Interactive::Message::Event* eventinfo) {
  delete eventinfo_;
  eventinfo_ = eventinfo;
  if (eventinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEventReq.eventInfo)
}

// -------------------------------------------------------------------

// ModifyEventRsp

// string strValue = 1;
inline void ModifyEventRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEventRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyEventRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
}
#if LANG_CXX11
inline void ModifyEventRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
}
#endif
inline void ModifyEventRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
}
inline void ModifyEventRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
}
inline ::std::string* ModifyEventRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEventRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEventRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEventRsp.strValue)
}

// -------------------------------------------------------------------

// QueryEventInfoReq

// string strUserID = 1;
inline void QueryEventInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryEventInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryEventInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryEventInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
}
#endif
inline void QueryEventInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
}
inline void QueryEventInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
}
inline ::std::string* QueryEventInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryEventInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryEventInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryEventInfoReq.strUserID)
}

// string strEventID = 2;
inline void QueryEventInfoReq::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryEventInfoReq::streventid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
  return streventid_.GetNoArena();
}
inline void QueryEventInfoReq::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
}
#if LANG_CXX11
inline void QueryEventInfoReq::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
}
#endif
inline void QueryEventInfoReq::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
}
inline void QueryEventInfoReq::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
}
inline ::std::string* QueryEventInfoReq::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryEventInfoReq::release_streventid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryEventInfoReq::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryEventInfoReq.strEventID)
}

// -------------------------------------------------------------------

// QueryEventInfoRsp

// .CustomerFlow.Interactive.Message.Event eventInfo = 1;
inline bool QueryEventInfoRsp::has_eventinfo() const {
  return this != internal_default_instance() && eventinfo_ != NULL;
}
inline void QueryEventInfoRsp::clear_eventinfo() {
  if (GetArenaNoVirtual() == NULL && eventinfo_ != NULL) delete eventinfo_;
  eventinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Event& QueryEventInfoRsp::eventinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryEventInfoRsp.eventInfo)
  return eventinfo_ != NULL ? *eventinfo_
                         : *::CustomerFlow::Interactive::Message::Event::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Event* QueryEventInfoRsp::mutable_eventinfo() {
  
  if (eventinfo_ == NULL) {
    eventinfo_ = new ::CustomerFlow::Interactive::Message::Event;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryEventInfoRsp.eventInfo)
  return eventinfo_;
}
inline ::CustomerFlow::Interactive::Message::Event* QueryEventInfoRsp::release_eventinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryEventInfoRsp.eventInfo)
  
  ::CustomerFlow::Interactive::Message::Event* temp = eventinfo_;
  eventinfo_ = NULL;
  return temp;
}
inline void QueryEventInfoRsp::set_allocated_eventinfo(::CustomerFlow::Interactive::Message::Event* eventinfo) {
  delete eventinfo_;
  eventinfo_ = eventinfo;
  if (eventinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryEventInfoRsp.eventInfo)
}

// -------------------------------------------------------------------

// QueryAllEventReq

// string strUserID = 1;
inline void QueryAllEventReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllEventReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllEventReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllEventReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
}
#endif
inline void QueryAllEventReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
}
inline void QueryAllEventReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
}
inline ::std::string* QueryAllEventReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllEventReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllEventReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllEventReq.strUserID)
}

// uint32 uiProcessState = 2;
inline void QueryAllEventReq::clear_uiprocessstate() {
  uiprocessstate_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllEventReq::uiprocessstate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.uiProcessState)
  return uiprocessstate_;
}
inline void QueryAllEventReq::set_uiprocessstate(::google::protobuf::uint32 value) {
  
  uiprocessstate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.uiProcessState)
}

// uint32 uiRelaton = 3;
inline void QueryAllEventReq::clear_uirelaton() {
  uirelaton_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllEventReq::uirelaton() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.uiRelaton)
  return uirelaton_;
}
inline void QueryAllEventReq::set_uirelaton(::google::protobuf::uint32 value) {
  
  uirelaton_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.uiRelaton)
}

// string strBeginDate = 4;
inline void QueryAllEventReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllEventReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QueryAllEventReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
}
#if LANG_CXX11
inline void QueryAllEventReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
}
#endif
inline void QueryAllEventReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
}
inline void QueryAllEventReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
}
inline ::std::string* QueryAllEventReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllEventReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllEventReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllEventReq.strBeginDate)
}

// string strEndDate = 5;
inline void QueryAllEventReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllEventReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QueryAllEventReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
}
#if LANG_CXX11
inline void QueryAllEventReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
}
#endif
inline void QueryAllEventReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
}
inline void QueryAllEventReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
}
inline ::std::string* QueryAllEventReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllEventReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllEventReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllEventReq.strEndDate)
}

// uint32 uiBeginIndex = 6;
inline void QueryAllEventReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllEventReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllEventReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.uiBeginIndex)
}

// uint32 uiEventType = 7;
inline void QueryAllEventReq::clear_uieventtype() {
  uieventtype_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllEventReq::uieventtype() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventReq.uiEventType)
  return uieventtype_;
}
inline void QueryAllEventReq::set_uieventtype(::google::protobuf::uint32 value) {
  
  uieventtype_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEventReq.uiEventType)
}

// -------------------------------------------------------------------

// QueryAllEventRsp

// repeated .CustomerFlow.Interactive.Message.Event eventInfo = 1;
inline int QueryAllEventRsp::eventinfo_size() const {
  return eventinfo_.size();
}
inline void QueryAllEventRsp::clear_eventinfo() {
  eventinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Event& QueryAllEventRsp::eventinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEventRsp.eventInfo)
  return eventinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Event* QueryAllEventRsp::mutable_eventinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllEventRsp.eventInfo)
  return eventinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Event* QueryAllEventRsp::add_eventinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllEventRsp.eventInfo)
  return eventinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Event >*
QueryAllEventRsp::mutable_eventinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllEventRsp.eventInfo)
  return &eventinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Event >&
QueryAllEventRsp::eventinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllEventRsp.eventInfo)
  return eventinfo_;
}

// -------------------------------------------------------------------

// AddSmartGuardStoreReq

// string strUserID = 1;
inline void AddSmartGuardStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddSmartGuardStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddSmartGuardStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
}
#if LANG_CXX11
inline void AddSmartGuardStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
}
#endif
inline void AddSmartGuardStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
}
inline void AddSmartGuardStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
}
inline ::std::string* AddSmartGuardStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddSmartGuardStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddSmartGuardStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.strUserID)
}

// .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 2;
inline bool AddSmartGuardStoreReq::has_smartguardstore() const {
  return this != internal_default_instance() && smartguardstore_ != NULL;
}
inline void AddSmartGuardStoreReq::clear_smartguardstore() {
  if (GetArenaNoVirtual() == NULL && smartguardstore_ != NULL) delete smartguardstore_;
  smartguardstore_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::SmartGuardStore& AddSmartGuardStoreReq::smartguardstore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.smartGuardStore)
  return smartguardstore_ != NULL ? *smartguardstore_
                         : *::CustomerFlow::Interactive::Message::SmartGuardStore::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* AddSmartGuardStoreReq::mutable_smartguardstore() {
  
  if (smartguardstore_ == NULL) {
    smartguardstore_ = new ::CustomerFlow::Interactive::Message::SmartGuardStore;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.smartGuardStore)
  return smartguardstore_;
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* AddSmartGuardStoreReq::release_smartguardstore() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.smartGuardStore)
  
  ::CustomerFlow::Interactive::Message::SmartGuardStore* temp = smartguardstore_;
  smartguardstore_ = NULL;
  return temp;
}
inline void AddSmartGuardStoreReq::set_allocated_smartguardstore(::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore) {
  delete smartguardstore_;
  smartguardstore_ = smartguardstore;
  if (smartguardstore) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddSmartGuardStoreReq.smartGuardStore)
}

// -------------------------------------------------------------------

// AddSmartGuardStoreRsp

// string strPlanID = 1;
inline void AddSmartGuardStoreRsp::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddSmartGuardStoreRsp::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
  return strplanid_.GetNoArena();
}
inline void AddSmartGuardStoreRsp::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
}
#if LANG_CXX11
inline void AddSmartGuardStoreRsp::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
}
#endif
inline void AddSmartGuardStoreRsp::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
}
inline void AddSmartGuardStoreRsp::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
}
inline ::std::string* AddSmartGuardStoreRsp::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddSmartGuardStoreRsp::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddSmartGuardStoreRsp::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp.strPlanID)
}

// -------------------------------------------------------------------

// DeleteSmartGuardStoreReq

// string strUserID = 1;
inline void DeleteSmartGuardStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteSmartGuardStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteSmartGuardStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
}
#if LANG_CXX11
inline void DeleteSmartGuardStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
}
#endif
inline void DeleteSmartGuardStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
}
inline void DeleteSmartGuardStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
}
inline ::std::string* DeleteSmartGuardStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteSmartGuardStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteSmartGuardStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strUserID)
}

// string strPlanID = 2;
inline void DeleteSmartGuardStoreReq::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteSmartGuardStoreReq::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
  return strplanid_.GetNoArena();
}
inline void DeleteSmartGuardStoreReq::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
}
#if LANG_CXX11
inline void DeleteSmartGuardStoreReq::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
}
#endif
inline void DeleteSmartGuardStoreReq::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
}
inline void DeleteSmartGuardStoreReq::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
}
inline ::std::string* DeleteSmartGuardStoreReq::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteSmartGuardStoreReq::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteSmartGuardStoreReq::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq.strPlanID)
}

// -------------------------------------------------------------------

// DeleteSmartGuardStoreRsp

// string strValue = 1;
inline void DeleteSmartGuardStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteSmartGuardStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteSmartGuardStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
}
#if LANG_CXX11
inline void DeleteSmartGuardStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
}
#endif
inline void DeleteSmartGuardStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
}
inline void DeleteSmartGuardStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
}
inline ::std::string* DeleteSmartGuardStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteSmartGuardStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteSmartGuardStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp.strValue)
}

// -------------------------------------------------------------------

// ModifySmartGuardStoreReq

// string strUserID = 1;
inline void ModifySmartGuardStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifySmartGuardStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifySmartGuardStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
}
#if LANG_CXX11
inline void ModifySmartGuardStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
}
#endif
inline void ModifySmartGuardStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
}
inline void ModifySmartGuardStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
}
inline ::std::string* ModifySmartGuardStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifySmartGuardStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifySmartGuardStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.strUserID)
}

// .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 2;
inline bool ModifySmartGuardStoreReq::has_smartguardstore() const {
  return this != internal_default_instance() && smartguardstore_ != NULL;
}
inline void ModifySmartGuardStoreReq::clear_smartguardstore() {
  if (GetArenaNoVirtual() == NULL && smartguardstore_ != NULL) delete smartguardstore_;
  smartguardstore_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::SmartGuardStore& ModifySmartGuardStoreReq::smartguardstore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.smartGuardStore)
  return smartguardstore_ != NULL ? *smartguardstore_
                         : *::CustomerFlow::Interactive::Message::SmartGuardStore::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* ModifySmartGuardStoreReq::mutable_smartguardstore() {
  
  if (smartguardstore_ == NULL) {
    smartguardstore_ = new ::CustomerFlow::Interactive::Message::SmartGuardStore;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.smartGuardStore)
  return smartguardstore_;
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* ModifySmartGuardStoreReq::release_smartguardstore() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.smartGuardStore)
  
  ::CustomerFlow::Interactive::Message::SmartGuardStore* temp = smartguardstore_;
  smartguardstore_ = NULL;
  return temp;
}
inline void ModifySmartGuardStoreReq::set_allocated_smartguardstore(::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore) {
  delete smartguardstore_;
  smartguardstore_ = smartguardstore;
  if (smartguardstore) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq.smartGuardStore)
}

// -------------------------------------------------------------------

// ModifySmartGuardStoreRsp

// string strValue = 1;
inline void ModifySmartGuardStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifySmartGuardStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifySmartGuardStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
}
#if LANG_CXX11
inline void ModifySmartGuardStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
}
#endif
inline void ModifySmartGuardStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
}
inline void ModifySmartGuardStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
}
inline ::std::string* ModifySmartGuardStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifySmartGuardStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifySmartGuardStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp.strValue)
}

// -------------------------------------------------------------------

// QuerySmartGuardStoreInfoReq

// string strUserID = 1;
inline void QuerySmartGuardStoreInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySmartGuardStoreInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QuerySmartGuardStoreInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
}
#if LANG_CXX11
inline void QuerySmartGuardStoreInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
}
#endif
inline void QuerySmartGuardStoreInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
}
inline void QuerySmartGuardStoreInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
}
inline ::std::string* QuerySmartGuardStoreInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySmartGuardStoreInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySmartGuardStoreInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strUserID)
}

// string strPlanID = 2;
inline void QuerySmartGuardStoreInfoReq::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySmartGuardStoreInfoReq::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
  return strplanid_.GetNoArena();
}
inline void QuerySmartGuardStoreInfoReq::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
}
#if LANG_CXX11
inline void QuerySmartGuardStoreInfoReq::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
}
#endif
inline void QuerySmartGuardStoreInfoReq::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
}
inline void QuerySmartGuardStoreInfoReq::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
}
inline ::std::string* QuerySmartGuardStoreInfoReq::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySmartGuardStoreInfoReq::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySmartGuardStoreInfoReq::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq.strPlanID)
}

// -------------------------------------------------------------------

// QuerySmartGuardStoreInfoRsp

// .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 1;
inline bool QuerySmartGuardStoreInfoRsp::has_smartguardstore() const {
  return this != internal_default_instance() && smartguardstore_ != NULL;
}
inline void QuerySmartGuardStoreInfoRsp::clear_smartguardstore() {
  if (GetArenaNoVirtual() == NULL && smartguardstore_ != NULL) delete smartguardstore_;
  smartguardstore_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::SmartGuardStore& QuerySmartGuardStoreInfoRsp::smartguardstore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp.smartGuardStore)
  return smartguardstore_ != NULL ? *smartguardstore_
                         : *::CustomerFlow::Interactive::Message::SmartGuardStore::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* QuerySmartGuardStoreInfoRsp::mutable_smartguardstore() {
  
  if (smartguardstore_ == NULL) {
    smartguardstore_ = new ::CustomerFlow::Interactive::Message::SmartGuardStore;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp.smartGuardStore)
  return smartguardstore_;
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* QuerySmartGuardStoreInfoRsp::release_smartguardstore() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp.smartGuardStore)
  
  ::CustomerFlow::Interactive::Message::SmartGuardStore* temp = smartguardstore_;
  smartguardstore_ = NULL;
  return temp;
}
inline void QuerySmartGuardStoreInfoRsp::set_allocated_smartguardstore(::CustomerFlow::Interactive::Message::SmartGuardStore* smartguardstore) {
  delete smartguardstore_;
  smartguardstore_ = smartguardstore;
  if (smartguardstore) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp.smartGuardStore)
}

// -------------------------------------------------------------------

// QueryAllSmartGuardStoreReq

// string strUserID = 1;
inline void QueryAllSmartGuardStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllSmartGuardStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllSmartGuardStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllSmartGuardStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
}
#endif
inline void QueryAllSmartGuardStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
}
inline void QueryAllSmartGuardStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
}
inline ::std::string* QueryAllSmartGuardStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllSmartGuardStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllSmartGuardStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strUserID)
}

// string strDeviceID = 2;
inline void QueryAllSmartGuardStoreReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllSmartGuardStoreReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void QueryAllSmartGuardStoreReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
}
#if LANG_CXX11
inline void QueryAllSmartGuardStoreReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
}
#endif
inline void QueryAllSmartGuardStoreReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
}
inline void QueryAllSmartGuardStoreReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
}
inline ::std::string* QueryAllSmartGuardStoreReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllSmartGuardStoreReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllSmartGuardStoreReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.strDeviceID)
}

// uint32 uiBeginIndex = 3;
inline void QueryAllSmartGuardStoreReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllSmartGuardStoreReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllSmartGuardStoreReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// QueryAllSmartGuardStoreRsp

// repeated .CustomerFlow.Interactive.Message.SmartGuardStore smartGuardStore = 1;
inline int QueryAllSmartGuardStoreRsp::smartguardstore_size() const {
  return smartguardstore_.size();
}
inline void QueryAllSmartGuardStoreRsp::clear_smartguardstore() {
  smartguardstore_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::SmartGuardStore& QueryAllSmartGuardStoreRsp::smartguardstore(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp.smartGuardStore)
  return smartguardstore_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* QueryAllSmartGuardStoreRsp::mutable_smartguardstore(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp.smartGuardStore)
  return smartguardstore_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::SmartGuardStore* QueryAllSmartGuardStoreRsp::add_smartguardstore() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp.smartGuardStore)
  return smartguardstore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SmartGuardStore >*
QueryAllSmartGuardStoreRsp::mutable_smartguardstore() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp.smartGuardStore)
  return &smartguardstore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SmartGuardStore >&
QueryAllSmartGuardStoreRsp::smartguardstore() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp.smartGuardStore)
  return smartguardstore_;
}

// -------------------------------------------------------------------

// AddRegularPatrolReq

// string strUserID = 1;
inline void AddRegularPatrolReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRegularPatrolReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddRegularPatrolReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
}
#if LANG_CXX11
inline void AddRegularPatrolReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
}
#endif
inline void AddRegularPatrolReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
}
inline void AddRegularPatrolReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
}
inline ::std::string* AddRegularPatrolReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRegularPatrolReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRegularPatrolReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRegularPatrolReq.strUserID)
}

// .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 2;
inline bool AddRegularPatrolReq::has_regularpatrol() const {
  return this != internal_default_instance() && regularpatrol_ != NULL;
}
inline void AddRegularPatrolReq::clear_regularpatrol() {
  if (GetArenaNoVirtual() == NULL && regularpatrol_ != NULL) delete regularpatrol_;
  regularpatrol_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RegularPatrol& AddRegularPatrolReq::regularpatrol() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRegularPatrolReq.regularPatrol)
  return regularpatrol_ != NULL ? *regularpatrol_
                         : *::CustomerFlow::Interactive::Message::RegularPatrol::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* AddRegularPatrolReq::mutable_regularpatrol() {
  
  if (regularpatrol_ == NULL) {
    regularpatrol_ = new ::CustomerFlow::Interactive::Message::RegularPatrol;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRegularPatrolReq.regularPatrol)
  return regularpatrol_;
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* AddRegularPatrolReq::release_regularpatrol() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRegularPatrolReq.regularPatrol)
  
  ::CustomerFlow::Interactive::Message::RegularPatrol* temp = regularpatrol_;
  regularpatrol_ = NULL;
  return temp;
}
inline void AddRegularPatrolReq::set_allocated_regularpatrol(::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol) {
  delete regularpatrol_;
  regularpatrol_ = regularpatrol;
  if (regularpatrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRegularPatrolReq.regularPatrol)
}

// -------------------------------------------------------------------

// AddRegularPatrolRsp

// string strPlanID = 1;
inline void AddRegularPatrolRsp::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRegularPatrolRsp::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
  return strplanid_.GetNoArena();
}
inline void AddRegularPatrolRsp::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
}
#if LANG_CXX11
inline void AddRegularPatrolRsp::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
}
#endif
inline void AddRegularPatrolRsp::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
}
inline void AddRegularPatrolRsp::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
}
inline ::std::string* AddRegularPatrolRsp::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRegularPatrolRsp::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRegularPatrolRsp::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRegularPatrolRsp.strPlanID)
}

// -------------------------------------------------------------------

// DeleteRegularPatrolReq

// string strUserID = 1;
inline void DeleteRegularPatrolReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRegularPatrolReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteRegularPatrolReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
}
#if LANG_CXX11
inline void DeleteRegularPatrolReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
}
#endif
inline void DeleteRegularPatrolReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
}
inline void DeleteRegularPatrolReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
}
inline ::std::string* DeleteRegularPatrolReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRegularPatrolReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRegularPatrolReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strUserID)
}

// string strPlanID = 2;
inline void DeleteRegularPatrolReq::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRegularPatrolReq::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
  return strplanid_.GetNoArena();
}
inline void DeleteRegularPatrolReq::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
}
#if LANG_CXX11
inline void DeleteRegularPatrolReq::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
}
#endif
inline void DeleteRegularPatrolReq::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
}
inline void DeleteRegularPatrolReq::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
}
inline ::std::string* DeleteRegularPatrolReq::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRegularPatrolReq::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRegularPatrolReq::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteRegularPatrolReq.strPlanID)
}

// -------------------------------------------------------------------

// DeleteRegularPatrolRsp

// string strValue = 1;
inline void DeleteRegularPatrolRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRegularPatrolRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteRegularPatrolRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
}
#if LANG_CXX11
inline void DeleteRegularPatrolRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
}
#endif
inline void DeleteRegularPatrolRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
}
inline void DeleteRegularPatrolRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
}
inline ::std::string* DeleteRegularPatrolRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRegularPatrolRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRegularPatrolRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyRegularPatrolReq

// string strUserID = 1;
inline void ModifyRegularPatrolReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyRegularPatrolReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyRegularPatrolReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
}
#if LANG_CXX11
inline void ModifyRegularPatrolReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
}
#endif
inline void ModifyRegularPatrolReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
}
inline void ModifyRegularPatrolReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
}
inline ::std::string* ModifyRegularPatrolReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyRegularPatrolReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyRegularPatrolReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.strUserID)
}

// .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 2;
inline bool ModifyRegularPatrolReq::has_regularpatrol() const {
  return this != internal_default_instance() && regularpatrol_ != NULL;
}
inline void ModifyRegularPatrolReq::clear_regularpatrol() {
  if (GetArenaNoVirtual() == NULL && regularpatrol_ != NULL) delete regularpatrol_;
  regularpatrol_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RegularPatrol& ModifyRegularPatrolReq::regularpatrol() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.regularPatrol)
  return regularpatrol_ != NULL ? *regularpatrol_
                         : *::CustomerFlow::Interactive::Message::RegularPatrol::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* ModifyRegularPatrolReq::mutable_regularpatrol() {
  
  if (regularpatrol_ == NULL) {
    regularpatrol_ = new ::CustomerFlow::Interactive::Message::RegularPatrol;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.regularPatrol)
  return regularpatrol_;
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* ModifyRegularPatrolReq::release_regularpatrol() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.regularPatrol)
  
  ::CustomerFlow::Interactive::Message::RegularPatrol* temp = regularpatrol_;
  regularpatrol_ = NULL;
  return temp;
}
inline void ModifyRegularPatrolReq::set_allocated_regularpatrol(::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol) {
  delete regularpatrol_;
  regularpatrol_ = regularpatrol;
  if (regularpatrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRegularPatrolReq.regularPatrol)
}

// -------------------------------------------------------------------

// ModifyRegularPatrolRsp

// string strValue = 1;
inline void ModifyRegularPatrolRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyRegularPatrolRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyRegularPatrolRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
}
#if LANG_CXX11
inline void ModifyRegularPatrolRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
}
#endif
inline void ModifyRegularPatrolRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
}
inline void ModifyRegularPatrolRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
}
inline ::std::string* ModifyRegularPatrolRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyRegularPatrolRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyRegularPatrolRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp.strValue)
}

// -------------------------------------------------------------------

// QueryRegularPatrolInfoReq

// string strUserID = 1;
inline void QueryRegularPatrolInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegularPatrolInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryRegularPatrolInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryRegularPatrolInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
}
#endif
inline void QueryRegularPatrolInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
}
inline void QueryRegularPatrolInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
}
inline ::std::string* QueryRegularPatrolInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegularPatrolInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegularPatrolInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strUserID)
}

// string strPlanID = 2;
inline void QueryRegularPatrolInfoReq::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegularPatrolInfoReq::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
  return strplanid_.GetNoArena();
}
inline void QueryRegularPatrolInfoReq::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
}
#if LANG_CXX11
inline void QueryRegularPatrolInfoReq::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
}
#endif
inline void QueryRegularPatrolInfoReq::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
}
inline void QueryRegularPatrolInfoReq::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
}
inline ::std::string* QueryRegularPatrolInfoReq::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegularPatrolInfoReq::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegularPatrolInfoReq::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq.strPlanID)
}

// -------------------------------------------------------------------

// QueryRegularPatrolInfoRsp

// .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 1;
inline bool QueryRegularPatrolInfoRsp::has_regularpatrol() const {
  return this != internal_default_instance() && regularpatrol_ != NULL;
}
inline void QueryRegularPatrolInfoRsp::clear_regularpatrol() {
  if (GetArenaNoVirtual() == NULL && regularpatrol_ != NULL) delete regularpatrol_;
  regularpatrol_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RegularPatrol& QueryRegularPatrolInfoRsp::regularpatrol() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp.regularPatrol)
  return regularpatrol_ != NULL ? *regularpatrol_
                         : *::CustomerFlow::Interactive::Message::RegularPatrol::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* QueryRegularPatrolInfoRsp::mutable_regularpatrol() {
  
  if (regularpatrol_ == NULL) {
    regularpatrol_ = new ::CustomerFlow::Interactive::Message::RegularPatrol;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp.regularPatrol)
  return regularpatrol_;
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* QueryRegularPatrolInfoRsp::release_regularpatrol() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp.regularPatrol)
  
  ::CustomerFlow::Interactive::Message::RegularPatrol* temp = regularpatrol_;
  regularpatrol_ = NULL;
  return temp;
}
inline void QueryRegularPatrolInfoRsp::set_allocated_regularpatrol(::CustomerFlow::Interactive::Message::RegularPatrol* regularpatrol) {
  delete regularpatrol_;
  regularpatrol_ = regularpatrol;
  if (regularpatrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp.regularPatrol)
}

// -------------------------------------------------------------------

// QueryAllRegularPatrolReq

// string strUserID = 1;
inline void QueryAllRegularPatrolReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRegularPatrolReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllRegularPatrolReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllRegularPatrolReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
}
#endif
inline void QueryAllRegularPatrolReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
}
inline void QueryAllRegularPatrolReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
}
inline ::std::string* QueryAllRegularPatrolReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRegularPatrolReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRegularPatrolReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strUserID)
}

// string strDeviceID = 2;
inline void QueryAllRegularPatrolReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRegularPatrolReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void QueryAllRegularPatrolReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
}
#if LANG_CXX11
inline void QueryAllRegularPatrolReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
}
#endif
inline void QueryAllRegularPatrolReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
}
inline void QueryAllRegularPatrolReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
}
inline ::std::string* QueryAllRegularPatrolReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRegularPatrolReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRegularPatrolReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.strDeviceID)
}

// uint32 uiBeginIndex = 3;
inline void QueryAllRegularPatrolReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllRegularPatrolReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllRegularPatrolReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// QueryAllRegularPatrolRsp

// repeated .CustomerFlow.Interactive.Message.RegularPatrol regularPatrol = 1;
inline int QueryAllRegularPatrolRsp::regularpatrol_size() const {
  return regularpatrol_.size();
}
inline void QueryAllRegularPatrolRsp::clear_regularpatrol() {
  regularpatrol_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::RegularPatrol& QueryAllRegularPatrolRsp::regularpatrol(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp.regularPatrol)
  return regularpatrol_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* QueryAllRegularPatrolRsp::mutable_regularpatrol(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp.regularPatrol)
  return regularpatrol_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::RegularPatrol* QueryAllRegularPatrolRsp::add_regularpatrol() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp.regularPatrol)
  return regularpatrol_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RegularPatrol >*
QueryAllRegularPatrolRsp::mutable_regularpatrol() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp.regularPatrol)
  return &regularpatrol_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RegularPatrol >&
QueryAllRegularPatrolRsp::regularpatrol() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp.regularPatrol)
  return regularpatrol_;
}

// -------------------------------------------------------------------

// UserJoinStoreReq

// string strAdministratorID = 1;
inline void UserJoinStoreReq::clear_stradministratorid() {
  stradministratorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserJoinStoreReq::stradministratorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
  return stradministratorid_.GetNoArena();
}
inline void UserJoinStoreReq::set_stradministratorid(const ::std::string& value) {
  
  stradministratorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
}
#if LANG_CXX11
inline void UserJoinStoreReq::set_stradministratorid(::std::string&& value) {
  
  stradministratorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
}
#endif
inline void UserJoinStoreReq::set_stradministratorid(const char* value) {
  
  stradministratorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
}
inline void UserJoinStoreReq::set_stradministratorid(const char* value, size_t size) {
  
  stradministratorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
}
inline ::std::string* UserJoinStoreReq::mutable_stradministratorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
  return stradministratorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserJoinStoreReq::release_stradministratorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
  
  return stradministratorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserJoinStoreReq::set_allocated_stradministratorid(::std::string* stradministratorid) {
  if (stradministratorid != NULL) {
    
  } else {
    
  }
  stradministratorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stradministratorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserJoinStoreReq.strAdministratorID)
}

// string strUserID = 2;
inline void UserJoinStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserJoinStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void UserJoinStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
}
#if LANG_CXX11
inline void UserJoinStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
}
#endif
inline void UserJoinStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
}
inline void UserJoinStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
}
inline ::std::string* UserJoinStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserJoinStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserJoinStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserJoinStoreReq.strUserID)
}

// string strStoreID = 3;
inline void UserJoinStoreReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserJoinStoreReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void UserJoinStoreReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
}
#if LANG_CXX11
inline void UserJoinStoreReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
}
#endif
inline void UserJoinStoreReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
}
inline void UserJoinStoreReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
}
inline ::std::string* UserJoinStoreReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserJoinStoreReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserJoinStoreReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserJoinStoreReq.strStoreID)
}

// string strRole = 4;
inline void UserJoinStoreReq::clear_strrole() {
  strrole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserJoinStoreReq::strrole() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
  return strrole_.GetNoArena();
}
inline void UserJoinStoreReq::set_strrole(const ::std::string& value) {
  
  strrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
}
#if LANG_CXX11
inline void UserJoinStoreReq::set_strrole(::std::string&& value) {
  
  strrole_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
}
#endif
inline void UserJoinStoreReq::set_strrole(const char* value) {
  
  strrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
}
inline void UserJoinStoreReq::set_strrole(const char* value, size_t size) {
  
  strrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
}
inline ::std::string* UserJoinStoreReq::mutable_strrole() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
  return strrole_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserJoinStoreReq::release_strrole() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
  
  return strrole_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserJoinStoreReq::set_allocated_strrole(::std::string* strrole) {
  if (strrole != NULL) {
    
  } else {
    
  }
  strrole_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strrole);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserJoinStoreReq.strRole)
}

// -------------------------------------------------------------------

// UserJoinStoreRsp

// string strValue = 1;
inline void UserJoinStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserJoinStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void UserJoinStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
}
#if LANG_CXX11
inline void UserJoinStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
}
#endif
inline void UserJoinStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
}
inline void UserJoinStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
}
inline ::std::string* UserJoinStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserJoinStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserJoinStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserJoinStoreRsp.strValue)
}

// -------------------------------------------------------------------

// UserQuitStoreReq

// string strAdministratorID = 1;
inline void UserQuitStoreReq::clear_stradministratorid() {
  stradministratorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserQuitStoreReq::stradministratorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
  return stradministratorid_.GetNoArena();
}
inline void UserQuitStoreReq::set_stradministratorid(const ::std::string& value) {
  
  stradministratorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
}
#if LANG_CXX11
inline void UserQuitStoreReq::set_stradministratorid(::std::string&& value) {
  
  stradministratorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
}
#endif
inline void UserQuitStoreReq::set_stradministratorid(const char* value) {
  
  stradministratorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
}
inline void UserQuitStoreReq::set_stradministratorid(const char* value, size_t size) {
  
  stradministratorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
}
inline ::std::string* UserQuitStoreReq::mutable_stradministratorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
  return stradministratorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserQuitStoreReq::release_stradministratorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
  
  return stradministratorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserQuitStoreReq::set_allocated_stradministratorid(::std::string* stradministratorid) {
  if (stradministratorid != NULL) {
    
  } else {
    
  }
  stradministratorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stradministratorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserQuitStoreReq.strAdministratorID)
}

// string strUserID = 2;
inline void UserQuitStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserQuitStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void UserQuitStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
}
#if LANG_CXX11
inline void UserQuitStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
}
#endif
inline void UserQuitStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
}
inline void UserQuitStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
}
inline ::std::string* UserQuitStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserQuitStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserQuitStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserQuitStoreReq.strUserID)
}

// string strStoreID = 3;
inline void UserQuitStoreReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserQuitStoreReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void UserQuitStoreReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
}
#if LANG_CXX11
inline void UserQuitStoreReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
}
#endif
inline void UserQuitStoreReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
}
inline void UserQuitStoreReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
}
inline ::std::string* UserQuitStoreReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserQuitStoreReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserQuitStoreReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserQuitStoreReq.strStoreID)
}

// -------------------------------------------------------------------

// UserQuitStoreRsp

// string strValue = 1;
inline void UserQuitStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserQuitStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void UserQuitStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
}
#if LANG_CXX11
inline void UserQuitStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
}
#endif
inline void UserQuitStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
}
inline void UserQuitStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
}
inline ::std::string* UserQuitStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserQuitStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserQuitStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserQuitStoreRsp.strValue)
}

// -------------------------------------------------------------------

// QueryStoreAllUserReq

// string strUserID = 1;
inline void QueryStoreAllUserReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreAllUserReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryStoreAllUserReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
}
#if LANG_CXX11
inline void QueryStoreAllUserReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
}
#endif
inline void QueryStoreAllUserReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
}
inline void QueryStoreAllUserReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
}
inline ::std::string* QueryStoreAllUserReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreAllUserReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreAllUserReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strUserID)
}

// string strStoreID = 2;
inline void QueryStoreAllUserReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreAllUserReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryStoreAllUserReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
}
#if LANG_CXX11
inline void QueryStoreAllUserReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
}
#endif
inline void QueryStoreAllUserReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
}
inline void QueryStoreAllUserReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
}
inline ::std::string* QueryStoreAllUserReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreAllUserReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreAllUserReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreAllUserReq.strStoreID)
}

// -------------------------------------------------------------------

// QueryStoreAllUserRsp

// repeated .CustomerFlow.Interactive.Message.UserBrief user = 1;
inline int QueryStoreAllUserRsp::user_size() const {
  return user_.size();
}
inline void QueryStoreAllUserRsp::clear_user() {
  user_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::UserBrief& QueryStoreAllUserRsp::user(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp.user)
  return user_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::UserBrief* QueryStoreAllUserRsp::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp.user)
  return user_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::UserBrief* QueryStoreAllUserRsp::add_user() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >*
QueryStoreAllUserRsp::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >&
QueryStoreAllUserRsp::user() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryStoreAllUserRsp.user)
  return user_;
}

// -------------------------------------------------------------------

// QueryCompanyAllUserReq

// string strUserID = 1;
inline void QueryCompanyAllUserReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCompanyAllUserReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryCompanyAllUserReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
}
#if LANG_CXX11
inline void QueryCompanyAllUserReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
}
#endif
inline void QueryCompanyAllUserReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
}
inline void QueryCompanyAllUserReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
}
inline ::std::string* QueryCompanyAllUserReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCompanyAllUserReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCompanyAllUserReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryCompanyAllUserReq.strUserID)
}

// -------------------------------------------------------------------

// QueryCompanyAllUserRsp

// repeated .CustomerFlow.Interactive.Message.UserBrief user = 1;
inline int QueryCompanyAllUserRsp::user_size() const {
  return user_.size();
}
inline void QueryCompanyAllUserRsp::clear_user() {
  user_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::UserBrief& QueryCompanyAllUserRsp::user(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp.user)
  return user_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::UserBrief* QueryCompanyAllUserRsp::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp.user)
  return user_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::UserBrief* QueryCompanyAllUserRsp::add_user() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >*
QueryCompanyAllUserRsp::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::UserBrief >&
QueryCompanyAllUserRsp::user() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp.user)
  return user_;
}

// -------------------------------------------------------------------

// AddVIPCustomerReq

// string strUserID = 1;
inline void AddVIPCustomerReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddVIPCustomerReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddVIPCustomerReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
}
#if LANG_CXX11
inline void AddVIPCustomerReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
}
#endif
inline void AddVIPCustomerReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
}
inline void AddVIPCustomerReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
}
inline ::std::string* AddVIPCustomerReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddVIPCustomerReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddVIPCustomerReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddVIPCustomerReq.strUserID)
}

// .CustomerFlow.Interactive.Message.VIPCustomer customerInfo = 2;
inline bool AddVIPCustomerReq::has_customerinfo() const {
  return this != internal_default_instance() && customerinfo_ != NULL;
}
inline void AddVIPCustomerReq::clear_customerinfo() {
  if (GetArenaNoVirtual() == NULL && customerinfo_ != NULL) delete customerinfo_;
  customerinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::VIPCustomer& AddVIPCustomerReq::customerinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddVIPCustomerReq.customerInfo)
  return customerinfo_ != NULL ? *customerinfo_
                         : *::CustomerFlow::Interactive::Message::VIPCustomer::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* AddVIPCustomerReq::mutable_customerinfo() {
  
  if (customerinfo_ == NULL) {
    customerinfo_ = new ::CustomerFlow::Interactive::Message::VIPCustomer;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddVIPCustomerReq.customerInfo)
  return customerinfo_;
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* AddVIPCustomerReq::release_customerinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddVIPCustomerReq.customerInfo)
  
  ::CustomerFlow::Interactive::Message::VIPCustomer* temp = customerinfo_;
  customerinfo_ = NULL;
  return temp;
}
inline void AddVIPCustomerReq::set_allocated_customerinfo(::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo) {
  delete customerinfo_;
  customerinfo_ = customerinfo;
  if (customerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddVIPCustomerReq.customerInfo)
}

// -------------------------------------------------------------------

// AddVIPCustomerRsp

// string strVIPID = 1;
inline void AddVIPCustomerRsp::clear_strvipid() {
  strvipid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddVIPCustomerRsp::strvipid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
  return strvipid_.GetNoArena();
}
inline void AddVIPCustomerRsp::set_strvipid(const ::std::string& value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
}
#if LANG_CXX11
inline void AddVIPCustomerRsp::set_strvipid(::std::string&& value) {
  
  strvipid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
}
#endif
inline void AddVIPCustomerRsp::set_strvipid(const char* value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
}
inline void AddVIPCustomerRsp::set_strvipid(const char* value, size_t size) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
}
inline ::std::string* AddVIPCustomerRsp::mutable_strvipid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
  return strvipid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddVIPCustomerRsp::release_strvipid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
  
  return strvipid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddVIPCustomerRsp::set_allocated_strvipid(::std::string* strvipid) {
  if (strvipid != NULL) {
    
  } else {
    
  }
  strvipid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddVIPCustomerRsp.strVIPID)
}

// -------------------------------------------------------------------

// DeleteVIPCustomerReq

// string strUserID = 1;
inline void DeleteVIPCustomerReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVIPCustomerReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteVIPCustomerReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
}
#if LANG_CXX11
inline void DeleteVIPCustomerReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
}
#endif
inline void DeleteVIPCustomerReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
}
inline void DeleteVIPCustomerReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
}
inline ::std::string* DeleteVIPCustomerReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVIPCustomerReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVIPCustomerReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strUserID)
}

// string strVIPID = 2;
inline void DeleteVIPCustomerReq::clear_strvipid() {
  strvipid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVIPCustomerReq::strvipid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
  return strvipid_.GetNoArena();
}
inline void DeleteVIPCustomerReq::set_strvipid(const ::std::string& value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
}
#if LANG_CXX11
inline void DeleteVIPCustomerReq::set_strvipid(::std::string&& value) {
  
  strvipid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
}
#endif
inline void DeleteVIPCustomerReq::set_strvipid(const char* value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
}
inline void DeleteVIPCustomerReq::set_strvipid(const char* value, size_t size) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
}
inline ::std::string* DeleteVIPCustomerReq::mutable_strvipid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
  return strvipid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVIPCustomerReq::release_strvipid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
  
  return strvipid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVIPCustomerReq::set_allocated_strvipid(::std::string* strvipid) {
  if (strvipid != NULL) {
    
  } else {
    
  }
  strvipid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteVIPCustomerReq.strVIPID)
}

// -------------------------------------------------------------------

// DeleteVIPCustomerRsp

// string strValue = 1;
inline void DeleteVIPCustomerRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVIPCustomerRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteVIPCustomerRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
}
#if LANG_CXX11
inline void DeleteVIPCustomerRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
}
#endif
inline void DeleteVIPCustomerRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
}
inline void DeleteVIPCustomerRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
}
inline ::std::string* DeleteVIPCustomerRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVIPCustomerRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVIPCustomerRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyVIPCustomerReq

// string strUserID = 1;
inline void ModifyVIPCustomerReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyVIPCustomerReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyVIPCustomerReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
}
#if LANG_CXX11
inline void ModifyVIPCustomerReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
}
#endif
inline void ModifyVIPCustomerReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
}
inline void ModifyVIPCustomerReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
}
inline ::std::string* ModifyVIPCustomerReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyVIPCustomerReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyVIPCustomerReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.strUserID)
}

// .CustomerFlow.Interactive.Message.VIPCustomer customerInfo = 2;
inline bool ModifyVIPCustomerReq::has_customerinfo() const {
  return this != internal_default_instance() && customerinfo_ != NULL;
}
inline void ModifyVIPCustomerReq::clear_customerinfo() {
  if (GetArenaNoVirtual() == NULL && customerinfo_ != NULL) delete customerinfo_;
  customerinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::VIPCustomer& ModifyVIPCustomerReq::customerinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.customerInfo)
  return customerinfo_ != NULL ? *customerinfo_
                         : *::CustomerFlow::Interactive::Message::VIPCustomer::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* ModifyVIPCustomerReq::mutable_customerinfo() {
  
  if (customerinfo_ == NULL) {
    customerinfo_ = new ::CustomerFlow::Interactive::Message::VIPCustomer;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.customerInfo)
  return customerinfo_;
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* ModifyVIPCustomerReq::release_customerinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.customerInfo)
  
  ::CustomerFlow::Interactive::Message::VIPCustomer* temp = customerinfo_;
  customerinfo_ = NULL;
  return temp;
}
inline void ModifyVIPCustomerReq::set_allocated_customerinfo(::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo) {
  delete customerinfo_;
  customerinfo_ = customerinfo;
  if (customerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyVIPCustomerReq.customerInfo)
}

// -------------------------------------------------------------------

// ModifyVIPCustomerRsp

// string strValue = 1;
inline void ModifyVIPCustomerRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyVIPCustomerRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyVIPCustomerRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
}
#if LANG_CXX11
inline void ModifyVIPCustomerRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
}
#endif
inline void ModifyVIPCustomerRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
}
inline void ModifyVIPCustomerRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
}
inline ::std::string* ModifyVIPCustomerRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyVIPCustomerRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyVIPCustomerRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp.strValue)
}

// -------------------------------------------------------------------

// QueryVIPCustomerInfoReq

// string strUserID = 1;
inline void QueryVIPCustomerInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryVIPCustomerInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryVIPCustomerInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryVIPCustomerInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
}
#endif
inline void QueryVIPCustomerInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
}
inline void QueryVIPCustomerInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
}
inline ::std::string* QueryVIPCustomerInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryVIPCustomerInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryVIPCustomerInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strUserID)
}

// string strVIPID = 2;
inline void QueryVIPCustomerInfoReq::clear_strvipid() {
  strvipid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryVIPCustomerInfoReq::strvipid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
  return strvipid_.GetNoArena();
}
inline void QueryVIPCustomerInfoReq::set_strvipid(const ::std::string& value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
}
#if LANG_CXX11
inline void QueryVIPCustomerInfoReq::set_strvipid(::std::string&& value) {
  
  strvipid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
}
#endif
inline void QueryVIPCustomerInfoReq::set_strvipid(const char* value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
}
inline void QueryVIPCustomerInfoReq::set_strvipid(const char* value, size_t size) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
}
inline ::std::string* QueryVIPCustomerInfoReq::mutable_strvipid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
  return strvipid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryVIPCustomerInfoReq::release_strvipid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
  
  return strvipid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryVIPCustomerInfoReq::set_allocated_strvipid(::std::string* strvipid) {
  if (strvipid != NULL) {
    
  } else {
    
  }
  strvipid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq.strVIPID)
}

// -------------------------------------------------------------------

// QueryVIPCustomerInfoRsp

// .CustomerFlow.Interactive.Message.VIPCustomer customerInfo = 1;
inline bool QueryVIPCustomerInfoRsp::has_customerinfo() const {
  return this != internal_default_instance() && customerinfo_ != NULL;
}
inline void QueryVIPCustomerInfoRsp::clear_customerinfo() {
  if (GetArenaNoVirtual() == NULL && customerinfo_ != NULL) delete customerinfo_;
  customerinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::VIPCustomer& QueryVIPCustomerInfoRsp::customerinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp.customerInfo)
  return customerinfo_ != NULL ? *customerinfo_
                         : *::CustomerFlow::Interactive::Message::VIPCustomer::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* QueryVIPCustomerInfoRsp::mutable_customerinfo() {
  
  if (customerinfo_ == NULL) {
    customerinfo_ = new ::CustomerFlow::Interactive::Message::VIPCustomer;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp.customerInfo)
  return customerinfo_;
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* QueryVIPCustomerInfoRsp::release_customerinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp.customerInfo)
  
  ::CustomerFlow::Interactive::Message::VIPCustomer* temp = customerinfo_;
  customerinfo_ = NULL;
  return temp;
}
inline void QueryVIPCustomerInfoRsp::set_allocated_customerinfo(::CustomerFlow::Interactive::Message::VIPCustomer* customerinfo) {
  delete customerinfo_;
  customerinfo_ = customerinfo;
  if (customerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp.customerInfo)
}

// -------------------------------------------------------------------

// QueryAllVIPCustomerReq

// string strUserID = 1;
inline void QueryAllVIPCustomerReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllVIPCustomerReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllVIPCustomerReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllVIPCustomerReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
}
#endif
inline void QueryAllVIPCustomerReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
}
inline void QueryAllVIPCustomerReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
}
inline ::std::string* QueryAllVIPCustomerReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllVIPCustomerReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllVIPCustomerReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.strUserID)
}

// uint32 uiBeginIndex = 2;
inline void QueryAllVIPCustomerReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllVIPCustomerReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllVIPCustomerReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// QueryAllVIPCustomerRsp

// repeated .CustomerFlow.Interactive.Message.VIPCustomer customer = 1;
inline int QueryAllVIPCustomerRsp::customer_size() const {
  return customer_.size();
}
inline void QueryAllVIPCustomerRsp::clear_customer() {
  customer_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::VIPCustomer& QueryAllVIPCustomerRsp::customer(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp.customer)
  return customer_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* QueryAllVIPCustomerRsp::mutable_customer(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp.customer)
  return customer_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::VIPCustomer* QueryAllVIPCustomerRsp::add_customer() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp.customer)
  return customer_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPCustomer >*
QueryAllVIPCustomerRsp::mutable_customer() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp.customer)
  return &customer_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPCustomer >&
QueryAllVIPCustomerRsp::customer() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp.customer)
  return customer_;
}

// -------------------------------------------------------------------

// AddVIPConsumeHistoryReq

// string strUserID = 1;
inline void AddVIPConsumeHistoryReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddVIPConsumeHistoryReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddVIPConsumeHistoryReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
}
#if LANG_CXX11
inline void AddVIPConsumeHistoryReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
}
#endif
inline void AddVIPConsumeHistoryReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
}
inline void AddVIPConsumeHistoryReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
}
inline ::std::string* AddVIPConsumeHistoryReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddVIPConsumeHistoryReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddVIPConsumeHistoryReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.strUserID)
}

// .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 2;
inline bool AddVIPConsumeHistoryReq::has_consumehistory() const {
  return this != internal_default_instance() && consumehistory_ != NULL;
}
inline void AddVIPConsumeHistoryReq::clear_consumehistory() {
  if (GetArenaNoVirtual() == NULL && consumehistory_ != NULL) delete consumehistory_;
  consumehistory_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& AddVIPConsumeHistoryReq::consumehistory() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.consumeHistory)
  return consumehistory_ != NULL ? *consumehistory_
                         : *::CustomerFlow::Interactive::Message::VIPConsumeHistory::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* AddVIPConsumeHistoryReq::mutable_consumehistory() {
  
  if (consumehistory_ == NULL) {
    consumehistory_ = new ::CustomerFlow::Interactive::Message::VIPConsumeHistory;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.consumeHistory)
  return consumehistory_;
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* AddVIPConsumeHistoryReq::release_consumehistory() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.consumeHistory)
  
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* temp = consumehistory_;
  consumehistory_ = NULL;
  return temp;
}
inline void AddVIPConsumeHistoryReq::set_allocated_consumehistory(::CustomerFlow::Interactive::Message::VIPConsumeHistory* consumehistory) {
  delete consumehistory_;
  consumehistory_ = consumehistory;
  if (consumehistory) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq.consumeHistory)
}

// -------------------------------------------------------------------

// AddVIPConsumeHistoryRsp

// string strConsumeID = 1;
inline void AddVIPConsumeHistoryRsp::clear_strconsumeid() {
  strconsumeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddVIPConsumeHistoryRsp::strconsumeid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
  return strconsumeid_.GetNoArena();
}
inline void AddVIPConsumeHistoryRsp::set_strconsumeid(const ::std::string& value) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
}
#if LANG_CXX11
inline void AddVIPConsumeHistoryRsp::set_strconsumeid(::std::string&& value) {
  
  strconsumeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
}
#endif
inline void AddVIPConsumeHistoryRsp::set_strconsumeid(const char* value) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
}
inline void AddVIPConsumeHistoryRsp::set_strconsumeid(const char* value, size_t size) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
}
inline ::std::string* AddVIPConsumeHistoryRsp::mutable_strconsumeid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
  return strconsumeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddVIPConsumeHistoryRsp::release_strconsumeid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
  
  return strconsumeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddVIPConsumeHistoryRsp::set_allocated_strconsumeid(::std::string* strconsumeid) {
  if (strconsumeid != NULL) {
    
  } else {
    
  }
  strconsumeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconsumeid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp.strConsumeID)
}

// -------------------------------------------------------------------

// DeleteVIPConsumeHistoryReq

// string strUserID = 1;
inline void DeleteVIPConsumeHistoryReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVIPConsumeHistoryReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteVIPConsumeHistoryReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
}
#if LANG_CXX11
inline void DeleteVIPConsumeHistoryReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
}
#endif
inline void DeleteVIPConsumeHistoryReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
}
inline void DeleteVIPConsumeHistoryReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
}
inline ::std::string* DeleteVIPConsumeHistoryReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVIPConsumeHistoryReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVIPConsumeHistoryReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strUserID)
}

// string strConsumeID = 2;
inline void DeleteVIPConsumeHistoryReq::clear_strconsumeid() {
  strconsumeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVIPConsumeHistoryReq::strconsumeid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
  return strconsumeid_.GetNoArena();
}
inline void DeleteVIPConsumeHistoryReq::set_strconsumeid(const ::std::string& value) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
}
#if LANG_CXX11
inline void DeleteVIPConsumeHistoryReq::set_strconsumeid(::std::string&& value) {
  
  strconsumeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
}
#endif
inline void DeleteVIPConsumeHistoryReq::set_strconsumeid(const char* value) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
}
inline void DeleteVIPConsumeHistoryReq::set_strconsumeid(const char* value, size_t size) {
  
  strconsumeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
}
inline ::std::string* DeleteVIPConsumeHistoryReq::mutable_strconsumeid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
  return strconsumeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVIPConsumeHistoryReq::release_strconsumeid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
  
  return strconsumeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVIPConsumeHistoryReq::set_allocated_strconsumeid(::std::string* strconsumeid) {
  if (strconsumeid != NULL) {
    
  } else {
    
  }
  strconsumeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconsumeid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq.strConsumeID)
}

// -------------------------------------------------------------------

// DeleteVIPConsumeHistoryRsp

// string strValue = 1;
inline void DeleteVIPConsumeHistoryRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVIPConsumeHistoryRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteVIPConsumeHistoryRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
}
#if LANG_CXX11
inline void DeleteVIPConsumeHistoryRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
}
#endif
inline void DeleteVIPConsumeHistoryRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
}
inline void DeleteVIPConsumeHistoryRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
}
inline ::std::string* DeleteVIPConsumeHistoryRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVIPConsumeHistoryRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVIPConsumeHistoryRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyVIPConsumeHistoryReq

// string strUserID = 1;
inline void ModifyVIPConsumeHistoryReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyVIPConsumeHistoryReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyVIPConsumeHistoryReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
}
#if LANG_CXX11
inline void ModifyVIPConsumeHistoryReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
}
#endif
inline void ModifyVIPConsumeHistoryReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
}
inline void ModifyVIPConsumeHistoryReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
}
inline ::std::string* ModifyVIPConsumeHistoryReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyVIPConsumeHistoryReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyVIPConsumeHistoryReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.strUserID)
}

// .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 2;
inline bool ModifyVIPConsumeHistoryReq::has_consumehistory() const {
  return this != internal_default_instance() && consumehistory_ != NULL;
}
inline void ModifyVIPConsumeHistoryReq::clear_consumehistory() {
  if (GetArenaNoVirtual() == NULL && consumehistory_ != NULL) delete consumehistory_;
  consumehistory_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& ModifyVIPConsumeHistoryReq::consumehistory() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.consumeHistory)
  return consumehistory_ != NULL ? *consumehistory_
                         : *::CustomerFlow::Interactive::Message::VIPConsumeHistory::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* ModifyVIPConsumeHistoryReq::mutable_consumehistory() {
  
  if (consumehistory_ == NULL) {
    consumehistory_ = new ::CustomerFlow::Interactive::Message::VIPConsumeHistory;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.consumeHistory)
  return consumehistory_;
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* ModifyVIPConsumeHistoryReq::release_consumehistory() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.consumeHistory)
  
  ::CustomerFlow::Interactive::Message::VIPConsumeHistory* temp = consumehistory_;
  consumehistory_ = NULL;
  return temp;
}
inline void ModifyVIPConsumeHistoryReq::set_allocated_consumehistory(::CustomerFlow::Interactive::Message::VIPConsumeHistory* consumehistory) {
  delete consumehistory_;
  consumehistory_ = consumehistory;
  if (consumehistory) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq.consumeHistory)
}

// -------------------------------------------------------------------

// ModifyVIPConsumeHistoryRsp

// string strValue = 1;
inline void ModifyVIPConsumeHistoryRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyVIPConsumeHistoryRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyVIPConsumeHistoryRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
}
#if LANG_CXX11
inline void ModifyVIPConsumeHistoryRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
}
#endif
inline void ModifyVIPConsumeHistoryRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
}
inline void ModifyVIPConsumeHistoryRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
}
inline ::std::string* ModifyVIPConsumeHistoryRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyVIPConsumeHistoryRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyVIPConsumeHistoryRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp.strValue)
}

// -------------------------------------------------------------------

// QueryAllVIPConsumeHistoryReq

// string strUserID = 1;
inline void QueryAllVIPConsumeHistoryReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllVIPConsumeHistoryReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllVIPConsumeHistoryReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllVIPConsumeHistoryReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
}
#endif
inline void QueryAllVIPConsumeHistoryReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
}
inline void QueryAllVIPConsumeHistoryReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
}
inline ::std::string* QueryAllVIPConsumeHistoryReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllVIPConsumeHistoryReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllVIPConsumeHistoryReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strUserID)
}

// string strVIPID = 2;
inline void QueryAllVIPConsumeHistoryReq::clear_strvipid() {
  strvipid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllVIPConsumeHistoryReq::strvipid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
  return strvipid_.GetNoArena();
}
inline void QueryAllVIPConsumeHistoryReq::set_strvipid(const ::std::string& value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
}
#if LANG_CXX11
inline void QueryAllVIPConsumeHistoryReq::set_strvipid(::std::string&& value) {
  
  strvipid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
}
#endif
inline void QueryAllVIPConsumeHistoryReq::set_strvipid(const char* value) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
}
inline void QueryAllVIPConsumeHistoryReq::set_strvipid(const char* value, size_t size) {
  
  strvipid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
}
inline ::std::string* QueryAllVIPConsumeHistoryReq::mutable_strvipid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
  return strvipid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllVIPConsumeHistoryReq::release_strvipid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
  
  return strvipid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllVIPConsumeHistoryReq::set_allocated_strvipid(::std::string* strvipid) {
  if (strvipid != NULL) {
    
  } else {
    
  }
  strvipid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvipid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.strVIPID)
}

// uint32 uiBeginIndex = 3;
inline void QueryAllVIPConsumeHistoryReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllVIPConsumeHistoryReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllVIPConsumeHistoryReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// QueryAllVIPConsumeHistoryRsp

// repeated .CustomerFlow.Interactive.Message.VIPConsumeHistory consumeHistory = 1;
inline int QueryAllVIPConsumeHistoryRsp::consumehistory_size() const {
  return consumehistory_.size();
}
inline void QueryAllVIPConsumeHistoryRsp::clear_consumehistory() {
  consumehistory_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::VIPConsumeHistory& QueryAllVIPConsumeHistoryRsp::consumehistory(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp.consumeHistory)
  return consumehistory_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* QueryAllVIPConsumeHistoryRsp::mutable_consumehistory(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp.consumeHistory)
  return consumehistory_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::VIPConsumeHistory* QueryAllVIPConsumeHistoryRsp::add_consumehistory() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp.consumeHistory)
  return consumehistory_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >*
QueryAllVIPConsumeHistoryRsp::mutable_consumehistory() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp.consumeHistory)
  return &consumehistory_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::VIPConsumeHistory >&
QueryAllVIPConsumeHistoryRsp::consumehistory() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp.consumeHistory)
  return consumehistory_;
}

// -------------------------------------------------------------------

// AddEvaluationTemplateReq

// string strUserID = 1;
inline void AddEvaluationTemplateReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEvaluationTemplateReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddEvaluationTemplateReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
}
#if LANG_CXX11
inline void AddEvaluationTemplateReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
}
#endif
inline void AddEvaluationTemplateReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
}
inline void AddEvaluationTemplateReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
}
inline ::std::string* AddEvaluationTemplateReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEvaluationTemplateReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEvaluationTemplateReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.strUserID)
}

// .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 2;
inline bool AddEvaluationTemplateReq::has_evaluationitem() const {
  return this != internal_default_instance() && evaluationitem_ != NULL;
}
inline void AddEvaluationTemplateReq::clear_evaluationitem() {
  if (GetArenaNoVirtual() == NULL && evaluationitem_ != NULL) delete evaluationitem_;
  evaluationitem_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::EvaluationItem& AddEvaluationTemplateReq::evaluationitem() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.evaluationItem)
  return evaluationitem_ != NULL ? *evaluationitem_
                         : *::CustomerFlow::Interactive::Message::EvaluationItem::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* AddEvaluationTemplateReq::mutable_evaluationitem() {
  
  if (evaluationitem_ == NULL) {
    evaluationitem_ = new ::CustomerFlow::Interactive::Message::EvaluationItem;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.evaluationItem)
  return evaluationitem_;
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* AddEvaluationTemplateReq::release_evaluationitem() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.evaluationItem)
  
  ::CustomerFlow::Interactive::Message::EvaluationItem* temp = evaluationitem_;
  evaluationitem_ = NULL;
  return temp;
}
inline void AddEvaluationTemplateReq::set_allocated_evaluationitem(::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem) {
  delete evaluationitem_;
  evaluationitem_ = evaluationitem;
  if (evaluationitem) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEvaluationTemplateReq.evaluationItem)
}

// -------------------------------------------------------------------

// AddEvaluationTemplateRsp

// string strEvaluationID = 1;
inline void AddEvaluationTemplateRsp::clear_strevaluationid() {
  strevaluationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddEvaluationTemplateRsp::strevaluationid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
  return strevaluationid_.GetNoArena();
}
inline void AddEvaluationTemplateRsp::set_strevaluationid(const ::std::string& value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
}
#if LANG_CXX11
inline void AddEvaluationTemplateRsp::set_strevaluationid(::std::string&& value) {
  
  strevaluationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
}
#endif
inline void AddEvaluationTemplateRsp::set_strevaluationid(const char* value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
}
inline void AddEvaluationTemplateRsp::set_strevaluationid(const char* value, size_t size) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
}
inline ::std::string* AddEvaluationTemplateRsp::mutable_strevaluationid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
  return strevaluationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddEvaluationTemplateRsp::release_strevaluationid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
  
  return strevaluationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddEvaluationTemplateRsp::set_allocated_strevaluationid(::std::string* strevaluationid) {
  if (strevaluationid != NULL) {
    
  } else {
    
  }
  strevaluationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strevaluationid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp.strEvaluationID)
}

// -------------------------------------------------------------------

// DeleteEvaluationTemplateReq

// string strUserID = 1;
inline void DeleteEvaluationTemplateReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEvaluationTemplateReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteEvaluationTemplateReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
}
#if LANG_CXX11
inline void DeleteEvaluationTemplateReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
}
#endif
inline void DeleteEvaluationTemplateReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
}
inline void DeleteEvaluationTemplateReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
}
inline ::std::string* DeleteEvaluationTemplateReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEvaluationTemplateReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEvaluationTemplateReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strUserID)
}

// string strEvaluationID = 2;
inline void DeleteEvaluationTemplateReq::clear_strevaluationid() {
  strevaluationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEvaluationTemplateReq::strevaluationid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
  return strevaluationid_.GetNoArena();
}
inline void DeleteEvaluationTemplateReq::set_strevaluationid(const ::std::string& value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
}
#if LANG_CXX11
inline void DeleteEvaluationTemplateReq::set_strevaluationid(::std::string&& value) {
  
  strevaluationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
}
#endif
inline void DeleteEvaluationTemplateReq::set_strevaluationid(const char* value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
}
inline void DeleteEvaluationTemplateReq::set_strevaluationid(const char* value, size_t size) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
}
inline ::std::string* DeleteEvaluationTemplateReq::mutable_strevaluationid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
  return strevaluationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEvaluationTemplateReq::release_strevaluationid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
  
  return strevaluationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEvaluationTemplateReq::set_allocated_strevaluationid(::std::string* strevaluationid) {
  if (strevaluationid != NULL) {
    
  } else {
    
  }
  strevaluationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strevaluationid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq.strEvaluationID)
}

// -------------------------------------------------------------------

// DeleteEvaluationTemplateRsp

// string strValue = 1;
inline void DeleteEvaluationTemplateRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEvaluationTemplateRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteEvaluationTemplateRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
}
#if LANG_CXX11
inline void DeleteEvaluationTemplateRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
}
#endif
inline void DeleteEvaluationTemplateRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
}
inline void DeleteEvaluationTemplateRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
}
inline ::std::string* DeleteEvaluationTemplateRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEvaluationTemplateRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEvaluationTemplateRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyEvaluationTemplateReq

// string strUserID = 1;
inline void ModifyEvaluationTemplateReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEvaluationTemplateReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyEvaluationTemplateReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
}
#if LANG_CXX11
inline void ModifyEvaluationTemplateReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
}
#endif
inline void ModifyEvaluationTemplateReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
}
inline void ModifyEvaluationTemplateReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
}
inline ::std::string* ModifyEvaluationTemplateReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEvaluationTemplateReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEvaluationTemplateReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.strUserID)
}

// .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 2;
inline bool ModifyEvaluationTemplateReq::has_evaluationitem() const {
  return this != internal_default_instance() && evaluationitem_ != NULL;
}
inline void ModifyEvaluationTemplateReq::clear_evaluationitem() {
  if (GetArenaNoVirtual() == NULL && evaluationitem_ != NULL) delete evaluationitem_;
  evaluationitem_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::EvaluationItem& ModifyEvaluationTemplateReq::evaluationitem() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.evaluationItem)
  return evaluationitem_ != NULL ? *evaluationitem_
                         : *::CustomerFlow::Interactive::Message::EvaluationItem::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* ModifyEvaluationTemplateReq::mutable_evaluationitem() {
  
  if (evaluationitem_ == NULL) {
    evaluationitem_ = new ::CustomerFlow::Interactive::Message::EvaluationItem;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.evaluationItem)
  return evaluationitem_;
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* ModifyEvaluationTemplateReq::release_evaluationitem() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.evaluationItem)
  
  ::CustomerFlow::Interactive::Message::EvaluationItem* temp = evaluationitem_;
  evaluationitem_ = NULL;
  return temp;
}
inline void ModifyEvaluationTemplateReq::set_allocated_evaluationitem(::CustomerFlow::Interactive::Message::EvaluationItem* evaluationitem) {
  delete evaluationitem_;
  evaluationitem_ = evaluationitem;
  if (evaluationitem) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq.evaluationItem)
}

// -------------------------------------------------------------------

// ModifyEvaluationTemplateRsp

// string strValue = 1;
inline void ModifyEvaluationTemplateRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyEvaluationTemplateRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyEvaluationTemplateRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
}
#if LANG_CXX11
inline void ModifyEvaluationTemplateRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
}
#endif
inline void ModifyEvaluationTemplateRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
}
inline void ModifyEvaluationTemplateRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
}
inline ::std::string* ModifyEvaluationTemplateRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyEvaluationTemplateRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyEvaluationTemplateRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp.strValue)
}

// -------------------------------------------------------------------

// QueryAllEvaluationTemplateReq

// string strUserID = 1;
inline void QueryAllEvaluationTemplateReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllEvaluationTemplateReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllEvaluationTemplateReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllEvaluationTemplateReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
}
#endif
inline void QueryAllEvaluationTemplateReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
}
inline void QueryAllEvaluationTemplateReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
}
inline ::std::string* QueryAllEvaluationTemplateReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllEvaluationTemplateReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllEvaluationTemplateReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq.strUserID)
}

// -------------------------------------------------------------------

// QueryAllEvaluationTemplateRsp

// repeated .CustomerFlow.Interactive.Message.EvaluationItem evaluationItem = 1;
inline int QueryAllEvaluationTemplateRsp::evaluationitem_size() const {
  return evaluationitem_.size();
}
inline void QueryAllEvaluationTemplateRsp::clear_evaluationitem() {
  evaluationitem_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::EvaluationItem& QueryAllEvaluationTemplateRsp::evaluationitem(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp.evaluationItem)
  return evaluationitem_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* QueryAllEvaluationTemplateRsp::mutable_evaluationitem(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp.evaluationItem)
  return evaluationitem_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::EvaluationItem* QueryAllEvaluationTemplateRsp::add_evaluationitem() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp.evaluationItem)
  return evaluationitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItem >*
QueryAllEvaluationTemplateRsp::mutable_evaluationitem() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp.evaluationItem)
  return &evaluationitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::EvaluationItem >&
QueryAllEvaluationTemplateRsp::evaluationitem() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp.evaluationItem)
  return evaluationitem_;
}

// -------------------------------------------------------------------

// AddStoreEvaluationReq

// .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 1;
inline bool AddStoreEvaluationReq::has_storeevaluation() const {
  return this != internal_default_instance() && storeevaluation_ != NULL;
}
inline void AddStoreEvaluationReq::clear_storeevaluation() {
  if (GetArenaNoVirtual() == NULL && storeevaluation_ != NULL) delete storeevaluation_;
  storeevaluation_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::StoreEvaluation& AddStoreEvaluationReq::storeevaluation() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreEvaluationReq.storeEvaluation)
  return storeevaluation_ != NULL ? *storeevaluation_
                         : *::CustomerFlow::Interactive::Message::StoreEvaluation::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* AddStoreEvaluationReq::mutable_storeevaluation() {
  
  if (storeevaluation_ == NULL) {
    storeevaluation_ = new ::CustomerFlow::Interactive::Message::StoreEvaluation;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreEvaluationReq.storeEvaluation)
  return storeevaluation_;
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* AddStoreEvaluationReq::release_storeevaluation() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreEvaluationReq.storeEvaluation)
  
  ::CustomerFlow::Interactive::Message::StoreEvaluation* temp = storeevaluation_;
  storeevaluation_ = NULL;
  return temp;
}
inline void AddStoreEvaluationReq::set_allocated_storeevaluation(::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation) {
  delete storeevaluation_;
  storeevaluation_ = storeevaluation;
  if (storeevaluation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreEvaluationReq.storeEvaluation)
}

// -------------------------------------------------------------------

// AddStoreEvaluationRsp

// string strEvaluationID = 1;
inline void AddStoreEvaluationRsp::clear_strevaluationid() {
  strevaluationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddStoreEvaluationRsp::strevaluationid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
  return strevaluationid_.GetNoArena();
}
inline void AddStoreEvaluationRsp::set_strevaluationid(const ::std::string& value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
}
#if LANG_CXX11
inline void AddStoreEvaluationRsp::set_strevaluationid(::std::string&& value) {
  
  strevaluationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
}
#endif
inline void AddStoreEvaluationRsp::set_strevaluationid(const char* value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
}
inline void AddStoreEvaluationRsp::set_strevaluationid(const char* value, size_t size) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
}
inline ::std::string* AddStoreEvaluationRsp::mutable_strevaluationid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
  return strevaluationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddStoreEvaluationRsp::release_strevaluationid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
  
  return strevaluationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddStoreEvaluationRsp::set_allocated_strevaluationid(::std::string* strevaluationid) {
  if (strevaluationid != NULL) {
    
  } else {
    
  }
  strevaluationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strevaluationid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreEvaluationRsp.strEvaluationID)
}

// -------------------------------------------------------------------

// DeleteStoreEvaluationReq

// string strUserID = 1;
inline void DeleteStoreEvaluationReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreEvaluationReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteStoreEvaluationReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
}
#if LANG_CXX11
inline void DeleteStoreEvaluationReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
}
#endif
inline void DeleteStoreEvaluationReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
}
inline void DeleteStoreEvaluationReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
}
inline ::std::string* DeleteStoreEvaluationReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreEvaluationReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreEvaluationReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strUserID)
}

// string strEvaluationID = 2;
inline void DeleteStoreEvaluationReq::clear_strevaluationid() {
  strevaluationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreEvaluationReq::strevaluationid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
  return strevaluationid_.GetNoArena();
}
inline void DeleteStoreEvaluationReq::set_strevaluationid(const ::std::string& value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
}
#if LANG_CXX11
inline void DeleteStoreEvaluationReq::set_strevaluationid(::std::string&& value) {
  
  strevaluationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
}
#endif
inline void DeleteStoreEvaluationReq::set_strevaluationid(const char* value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
}
inline void DeleteStoreEvaluationReq::set_strevaluationid(const char* value, size_t size) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
}
inline ::std::string* DeleteStoreEvaluationReq::mutable_strevaluationid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
  return strevaluationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreEvaluationReq::release_strevaluationid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
  
  return strevaluationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreEvaluationReq::set_allocated_strevaluationid(::std::string* strevaluationid) {
  if (strevaluationid != NULL) {
    
  } else {
    
  }
  strevaluationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strevaluationid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq.strEvaluationID)
}

// -------------------------------------------------------------------

// DeleteStoreEvaluationRsp

// string strValue = 1;
inline void DeleteStoreEvaluationRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreEvaluationRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteStoreEvaluationRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
}
#if LANG_CXX11
inline void DeleteStoreEvaluationRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
}
#endif
inline void DeleteStoreEvaluationRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
}
inline void DeleteStoreEvaluationRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
}
inline ::std::string* DeleteStoreEvaluationRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreEvaluationRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreEvaluationRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyStoreEvaluationReq

// string strUserID = 1;
inline void ModifyStoreEvaluationReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyStoreEvaluationReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyStoreEvaluationReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
}
#if LANG_CXX11
inline void ModifyStoreEvaluationReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
}
#endif
inline void ModifyStoreEvaluationReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
}
inline void ModifyStoreEvaluationReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
}
inline ::std::string* ModifyStoreEvaluationReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyStoreEvaluationReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyStoreEvaluationReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.strUserID)
}

// .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 2;
inline bool ModifyStoreEvaluationReq::has_storeevaluation() const {
  return this != internal_default_instance() && storeevaluation_ != NULL;
}
inline void ModifyStoreEvaluationReq::clear_storeevaluation() {
  if (GetArenaNoVirtual() == NULL && storeevaluation_ != NULL) delete storeevaluation_;
  storeevaluation_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::StoreEvaluation& ModifyStoreEvaluationReq::storeevaluation() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.storeEvaluation)
  return storeevaluation_ != NULL ? *storeevaluation_
                         : *::CustomerFlow::Interactive::Message::StoreEvaluation::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* ModifyStoreEvaluationReq::mutable_storeevaluation() {
  
  if (storeevaluation_ == NULL) {
    storeevaluation_ = new ::CustomerFlow::Interactive::Message::StoreEvaluation;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.storeEvaluation)
  return storeevaluation_;
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* ModifyStoreEvaluationReq::release_storeevaluation() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.storeEvaluation)
  
  ::CustomerFlow::Interactive::Message::StoreEvaluation* temp = storeevaluation_;
  storeevaluation_ = NULL;
  return temp;
}
inline void ModifyStoreEvaluationReq::set_allocated_storeevaluation(::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation) {
  delete storeevaluation_;
  storeevaluation_ = storeevaluation;
  if (storeevaluation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq.storeEvaluation)
}

// -------------------------------------------------------------------

// ModifyStoreEvaluationRsp

// string strValue = 1;
inline void ModifyStoreEvaluationRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyStoreEvaluationRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyStoreEvaluationRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
}
#if LANG_CXX11
inline void ModifyStoreEvaluationRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
}
#endif
inline void ModifyStoreEvaluationRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
}
inline void ModifyStoreEvaluationRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
}
inline ::std::string* ModifyStoreEvaluationRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyStoreEvaluationRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyStoreEvaluationRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp.strValue)
}

// -------------------------------------------------------------------

// QueryStoreEvaluationInfoReq

// string strUserID = 1;
inline void QueryStoreEvaluationInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreEvaluationInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryStoreEvaluationInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryStoreEvaluationInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
}
#endif
inline void QueryStoreEvaluationInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
}
inline void QueryStoreEvaluationInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
}
inline ::std::string* QueryStoreEvaluationInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreEvaluationInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreEvaluationInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strUserID)
}

// string strStoreID = 2;
inline void QueryStoreEvaluationInfoReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreEvaluationInfoReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryStoreEvaluationInfoReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
}
#if LANG_CXX11
inline void QueryStoreEvaluationInfoReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
}
#endif
inline void QueryStoreEvaluationInfoReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
}
inline void QueryStoreEvaluationInfoReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
}
inline ::std::string* QueryStoreEvaluationInfoReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreEvaluationInfoReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreEvaluationInfoReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strStoreID)
}

// string strEvaluationID = 3;
inline void QueryStoreEvaluationInfoReq::clear_strevaluationid() {
  strevaluationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreEvaluationInfoReq::strevaluationid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
  return strevaluationid_.GetNoArena();
}
inline void QueryStoreEvaluationInfoReq::set_strevaluationid(const ::std::string& value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
}
#if LANG_CXX11
inline void QueryStoreEvaluationInfoReq::set_strevaluationid(::std::string&& value) {
  
  strevaluationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
}
#endif
inline void QueryStoreEvaluationInfoReq::set_strevaluationid(const char* value) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
}
inline void QueryStoreEvaluationInfoReq::set_strevaluationid(const char* value, size_t size) {
  
  strevaluationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
}
inline ::std::string* QueryStoreEvaluationInfoReq::mutable_strevaluationid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
  return strevaluationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreEvaluationInfoReq::release_strevaluationid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
  
  return strevaluationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreEvaluationInfoReq::set_allocated_strevaluationid(::std::string* strevaluationid) {
  if (strevaluationid != NULL) {
    
  } else {
    
  }
  strevaluationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strevaluationid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq.strEvaluationID)
}

// -------------------------------------------------------------------

// QueryStoreEvaluationInfoRsp

// .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 1;
inline bool QueryStoreEvaluationInfoRsp::has_storeevaluation() const {
  return this != internal_default_instance() && storeevaluation_ != NULL;
}
inline void QueryStoreEvaluationInfoRsp::clear_storeevaluation() {
  if (GetArenaNoVirtual() == NULL && storeevaluation_ != NULL) delete storeevaluation_;
  storeevaluation_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::StoreEvaluation& QueryStoreEvaluationInfoRsp::storeevaluation() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp.storeEvaluation)
  return storeevaluation_ != NULL ? *storeevaluation_
                         : *::CustomerFlow::Interactive::Message::StoreEvaluation::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* QueryStoreEvaluationInfoRsp::mutable_storeevaluation() {
  
  if (storeevaluation_ == NULL) {
    storeevaluation_ = new ::CustomerFlow::Interactive::Message::StoreEvaluation;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp.storeEvaluation)
  return storeevaluation_;
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* QueryStoreEvaluationInfoRsp::release_storeevaluation() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp.storeEvaluation)
  
  ::CustomerFlow::Interactive::Message::StoreEvaluation* temp = storeevaluation_;
  storeevaluation_ = NULL;
  return temp;
}
inline void QueryStoreEvaluationInfoRsp::set_allocated_storeevaluation(::CustomerFlow::Interactive::Message::StoreEvaluation* storeevaluation) {
  delete storeevaluation_;
  storeevaluation_ = storeevaluation;
  if (storeevaluation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp.storeEvaluation)
}

// -------------------------------------------------------------------

// QueryAllStoreEvaluationReq

// string strUserID = 1;
inline void QueryAllStoreEvaluationReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreEvaluationReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllStoreEvaluationReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllStoreEvaluationReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
}
#endif
inline void QueryAllStoreEvaluationReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
}
inline void QueryAllStoreEvaluationReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
}
inline ::std::string* QueryAllStoreEvaluationReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreEvaluationReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreEvaluationReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strUserID)
}

// string strStoreID = 2;
inline void QueryAllStoreEvaluationReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreEvaluationReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryAllStoreEvaluationReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
}
#if LANG_CXX11
inline void QueryAllStoreEvaluationReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
}
#endif
inline void QueryAllStoreEvaluationReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
}
inline void QueryAllStoreEvaluationReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
}
inline ::std::string* QueryAllStoreEvaluationReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreEvaluationReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreEvaluationReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strStoreID)
}

// string strBeginDate = 3;
inline void QueryAllStoreEvaluationReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreEvaluationReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QueryAllStoreEvaluationReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
}
#if LANG_CXX11
inline void QueryAllStoreEvaluationReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
}
#endif
inline void QueryAllStoreEvaluationReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
}
inline void QueryAllStoreEvaluationReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
}
inline ::std::string* QueryAllStoreEvaluationReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreEvaluationReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreEvaluationReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strBeginDate)
}

// string strEndDate = 4;
inline void QueryAllStoreEvaluationReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreEvaluationReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QueryAllStoreEvaluationReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
}
#if LANG_CXX11
inline void QueryAllStoreEvaluationReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
}
#endif
inline void QueryAllStoreEvaluationReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
}
inline void QueryAllStoreEvaluationReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
}
inline ::std::string* QueryAllStoreEvaluationReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreEvaluationReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreEvaluationReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.strEndDate)
}

// uint32 uiBeginIndex = 5;
inline void QueryAllStoreEvaluationReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllStoreEvaluationReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllStoreEvaluationReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.uiBeginIndex)
}

// uint32 uiCheckStatus = 6;
inline void QueryAllStoreEvaluationReq::clear_uicheckstatus() {
  uicheckstatus_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllStoreEvaluationReq::uicheckstatus() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.uiCheckStatus)
  return uicheckstatus_;
}
inline void QueryAllStoreEvaluationReq::set_uicheckstatus(::google::protobuf::uint32 value) {
  
  uicheckstatus_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq.uiCheckStatus)
}

// -------------------------------------------------------------------

// QueryAllStoreEvaluationRsp

// repeated .CustomerFlow.Interactive.Message.StoreEvaluation storeEvaluation = 1;
inline int QueryAllStoreEvaluationRsp::storeevaluation_size() const {
  return storeevaluation_.size();
}
inline void QueryAllStoreEvaluationRsp::clear_storeevaluation() {
  storeevaluation_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::StoreEvaluation& QueryAllStoreEvaluationRsp::storeevaluation(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp.storeEvaluation)
  return storeevaluation_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* QueryAllStoreEvaluationRsp::mutable_storeevaluation(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp.storeEvaluation)
  return storeevaluation_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::StoreEvaluation* QueryAllStoreEvaluationRsp::add_storeevaluation() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp.storeEvaluation)
  return storeevaluation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::StoreEvaluation >*
QueryAllStoreEvaluationRsp::mutable_storeevaluation() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp.storeEvaluation)
  return &storeevaluation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::StoreEvaluation >&
QueryAllStoreEvaluationRsp::storeevaluation() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp.storeEvaluation)
  return storeevaluation_;
}

// -------------------------------------------------------------------

// AddRemotePatrolStoreReq

// .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 1;
inline bool AddRemotePatrolStoreReq::has_patrolstore() const {
  return this != internal_default_instance() && patrolstore_ != NULL;
}
inline void AddRemotePatrolStoreReq::clear_patrolstore() {
  if (GetArenaNoVirtual() == NULL && patrolstore_ != NULL) delete patrolstore_;
  patrolstore_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemotePatrolStore& AddRemotePatrolStoreReq::patrolstore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq.patrolStore)
  return patrolstore_ != NULL ? *patrolstore_
                         : *::CustomerFlow::Interactive::Message::RemotePatrolStore::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* AddRemotePatrolStoreReq::mutable_patrolstore() {
  
  if (patrolstore_ == NULL) {
    patrolstore_ = new ::CustomerFlow::Interactive::Message::RemotePatrolStore;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq.patrolStore)
  return patrolstore_;
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* AddRemotePatrolStoreReq::release_patrolstore() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq.patrolStore)
  
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* temp = patrolstore_;
  patrolstore_ = NULL;
  return temp;
}
inline void AddRemotePatrolStoreReq::set_allocated_patrolstore(::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore) {
  delete patrolstore_;
  patrolstore_ = patrolstore;
  if (patrolstore) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq.patrolStore)
}

// -------------------------------------------------------------------

// AddRemotePatrolStoreRsp

// string strPatrolID = 1;
inline void AddRemotePatrolStoreRsp::clear_strpatrolid() {
  strpatrolid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRemotePatrolStoreRsp::strpatrolid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
  return strpatrolid_.GetNoArena();
}
inline void AddRemotePatrolStoreRsp::set_strpatrolid(const ::std::string& value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
}
#if LANG_CXX11
inline void AddRemotePatrolStoreRsp::set_strpatrolid(::std::string&& value) {
  
  strpatrolid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
}
#endif
inline void AddRemotePatrolStoreRsp::set_strpatrolid(const char* value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
}
inline void AddRemotePatrolStoreRsp::set_strpatrolid(const char* value, size_t size) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
}
inline ::std::string* AddRemotePatrolStoreRsp::mutable_strpatrolid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
  return strpatrolid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRemotePatrolStoreRsp::release_strpatrolid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
  
  return strpatrolid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRemotePatrolStoreRsp::set_allocated_strpatrolid(::std::string* strpatrolid) {
  if (strpatrolid != NULL) {
    
  } else {
    
  }
  strpatrolid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpatrolid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp.strPatrolID)
}

// -------------------------------------------------------------------

// DeleteRemotePatrolStoreReq

// string strUserID = 1;
inline void DeleteRemotePatrolStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRemotePatrolStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteRemotePatrolStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
}
#if LANG_CXX11
inline void DeleteRemotePatrolStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
}
#endif
inline void DeleteRemotePatrolStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
}
inline void DeleteRemotePatrolStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
}
inline ::std::string* DeleteRemotePatrolStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRemotePatrolStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRemotePatrolStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strUserID)
}

// string strPatrolID = 2;
inline void DeleteRemotePatrolStoreReq::clear_strpatrolid() {
  strpatrolid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRemotePatrolStoreReq::strpatrolid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
  return strpatrolid_.GetNoArena();
}
inline void DeleteRemotePatrolStoreReq::set_strpatrolid(const ::std::string& value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
}
#if LANG_CXX11
inline void DeleteRemotePatrolStoreReq::set_strpatrolid(::std::string&& value) {
  
  strpatrolid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
}
#endif
inline void DeleteRemotePatrolStoreReq::set_strpatrolid(const char* value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
}
inline void DeleteRemotePatrolStoreReq::set_strpatrolid(const char* value, size_t size) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
}
inline ::std::string* DeleteRemotePatrolStoreReq::mutable_strpatrolid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
  return strpatrolid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRemotePatrolStoreReq::release_strpatrolid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
  
  return strpatrolid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRemotePatrolStoreReq::set_allocated_strpatrolid(::std::string* strpatrolid) {
  if (strpatrolid != NULL) {
    
  } else {
    
  }
  strpatrolid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpatrolid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq.strPatrolID)
}

// -------------------------------------------------------------------

// DeleteRemotePatrolStoreRsp

// string strValue = 1;
inline void DeleteRemotePatrolStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRemotePatrolStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteRemotePatrolStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
}
#if LANG_CXX11
inline void DeleteRemotePatrolStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
}
#endif
inline void DeleteRemotePatrolStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
}
inline void DeleteRemotePatrolStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
}
inline ::std::string* DeleteRemotePatrolStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRemotePatrolStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRemotePatrolStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyRemotePatrolStoreReq

// string strUserID = 1;
inline void ModifyRemotePatrolStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyRemotePatrolStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyRemotePatrolStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
}
#if LANG_CXX11
inline void ModifyRemotePatrolStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
}
#endif
inline void ModifyRemotePatrolStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
}
inline void ModifyRemotePatrolStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
}
inline ::std::string* ModifyRemotePatrolStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyRemotePatrolStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyRemotePatrolStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.strUserID)
}

// .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 2;
inline bool ModifyRemotePatrolStoreReq::has_patrolstore() const {
  return this != internal_default_instance() && patrolstore_ != NULL;
}
inline void ModifyRemotePatrolStoreReq::clear_patrolstore() {
  if (GetArenaNoVirtual() == NULL && patrolstore_ != NULL) delete patrolstore_;
  patrolstore_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemotePatrolStore& ModifyRemotePatrolStoreReq::patrolstore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.patrolStore)
  return patrolstore_ != NULL ? *patrolstore_
                         : *::CustomerFlow::Interactive::Message::RemotePatrolStore::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* ModifyRemotePatrolStoreReq::mutable_patrolstore() {
  
  if (patrolstore_ == NULL) {
    patrolstore_ = new ::CustomerFlow::Interactive::Message::RemotePatrolStore;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.patrolStore)
  return patrolstore_;
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* ModifyRemotePatrolStoreReq::release_patrolstore() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.patrolStore)
  
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* temp = patrolstore_;
  patrolstore_ = NULL;
  return temp;
}
inline void ModifyRemotePatrolStoreReq::set_allocated_patrolstore(::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore) {
  delete patrolstore_;
  patrolstore_ = patrolstore;
  if (patrolstore) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq.patrolStore)
}

// -------------------------------------------------------------------

// ModifyRemotePatrolStoreRsp

// string strValue = 1;
inline void ModifyRemotePatrolStoreRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyRemotePatrolStoreRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyRemotePatrolStoreRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
}
#if LANG_CXX11
inline void ModifyRemotePatrolStoreRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
}
#endif
inline void ModifyRemotePatrolStoreRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
}
inline void ModifyRemotePatrolStoreRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
}
inline ::std::string* ModifyRemotePatrolStoreRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyRemotePatrolStoreRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyRemotePatrolStoreRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp.strValue)
}

// -------------------------------------------------------------------

// QueryRemotePatrolStoreInfoReq

// string strUserID = 1;
inline void QueryRemotePatrolStoreInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRemotePatrolStoreInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryRemotePatrolStoreInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryRemotePatrolStoreInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
}
#endif
inline void QueryRemotePatrolStoreInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
}
inline void QueryRemotePatrolStoreInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
}
inline ::std::string* QueryRemotePatrolStoreInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRemotePatrolStoreInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRemotePatrolStoreInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strUserID)
}

// string strPatrolID = 2;
inline void QueryRemotePatrolStoreInfoReq::clear_strpatrolid() {
  strpatrolid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRemotePatrolStoreInfoReq::strpatrolid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
  return strpatrolid_.GetNoArena();
}
inline void QueryRemotePatrolStoreInfoReq::set_strpatrolid(const ::std::string& value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
}
#if LANG_CXX11
inline void QueryRemotePatrolStoreInfoReq::set_strpatrolid(::std::string&& value) {
  
  strpatrolid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
}
#endif
inline void QueryRemotePatrolStoreInfoReq::set_strpatrolid(const char* value) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
}
inline void QueryRemotePatrolStoreInfoReq::set_strpatrolid(const char* value, size_t size) {
  
  strpatrolid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
}
inline ::std::string* QueryRemotePatrolStoreInfoReq::mutable_strpatrolid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
  return strpatrolid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRemotePatrolStoreInfoReq::release_strpatrolid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
  
  return strpatrolid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRemotePatrolStoreInfoReq::set_allocated_strpatrolid(::std::string* strpatrolid) {
  if (strpatrolid != NULL) {
    
  } else {
    
  }
  strpatrolid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpatrolid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq.strPatrolID)
}

// -------------------------------------------------------------------

// QueryRemotePatrolStoreInfoRsp

// .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 1;
inline bool QueryRemotePatrolStoreInfoRsp::has_patrolstore() const {
  return this != internal_default_instance() && patrolstore_ != NULL;
}
inline void QueryRemotePatrolStoreInfoRsp::clear_patrolstore() {
  if (GetArenaNoVirtual() == NULL && patrolstore_ != NULL) delete patrolstore_;
  patrolstore_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemotePatrolStore& QueryRemotePatrolStoreInfoRsp::patrolstore() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp.patrolStore)
  return patrolstore_ != NULL ? *patrolstore_
                         : *::CustomerFlow::Interactive::Message::RemotePatrolStore::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* QueryRemotePatrolStoreInfoRsp::mutable_patrolstore() {
  
  if (patrolstore_ == NULL) {
    patrolstore_ = new ::CustomerFlow::Interactive::Message::RemotePatrolStore;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp.patrolStore)
  return patrolstore_;
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* QueryRemotePatrolStoreInfoRsp::release_patrolstore() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp.patrolStore)
  
  ::CustomerFlow::Interactive::Message::RemotePatrolStore* temp = patrolstore_;
  patrolstore_ = NULL;
  return temp;
}
inline void QueryRemotePatrolStoreInfoRsp::set_allocated_patrolstore(::CustomerFlow::Interactive::Message::RemotePatrolStore* patrolstore) {
  delete patrolstore_;
  patrolstore_ = patrolstore;
  if (patrolstore) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp.patrolStore)
}

// -------------------------------------------------------------------

// QueryAllRemotePatrolStoreReq

// string strUserID = 1;
inline void QueryAllRemotePatrolStoreReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRemotePatrolStoreReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllRemotePatrolStoreReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllRemotePatrolStoreReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
}
#endif
inline void QueryAllRemotePatrolStoreReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
}
inline void QueryAllRemotePatrolStoreReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
}
inline ::std::string* QueryAllRemotePatrolStoreReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRemotePatrolStoreReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRemotePatrolStoreReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strUserID)
}

// string strStoreID = 2;
inline void QueryAllRemotePatrolStoreReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRemotePatrolStoreReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryAllRemotePatrolStoreReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
}
#if LANG_CXX11
inline void QueryAllRemotePatrolStoreReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
}
#endif
inline void QueryAllRemotePatrolStoreReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
}
inline void QueryAllRemotePatrolStoreReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
}
inline ::std::string* QueryAllRemotePatrolStoreReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRemotePatrolStoreReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRemotePatrolStoreReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strStoreID)
}

// uint32 uiPatrolResult = 3;
inline void QueryAllRemotePatrolStoreReq::clear_uipatrolresult() {
  uipatrolresult_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllRemotePatrolStoreReq::uipatrolresult() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.uiPatrolResult)
  return uipatrolresult_;
}
inline void QueryAllRemotePatrolStoreReq::set_uipatrolresult(::google::protobuf::uint32 value) {
  
  uipatrolresult_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.uiPatrolResult)
}

// uint32 uiPlanFlag = 4;
inline void QueryAllRemotePatrolStoreReq::clear_uiplanflag() {
  uiplanflag_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllRemotePatrolStoreReq::uiplanflag() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.uiPlanFlag)
  return uiplanflag_;
}
inline void QueryAllRemotePatrolStoreReq::set_uiplanflag(::google::protobuf::uint32 value) {
  
  uiplanflag_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.uiPlanFlag)
}

// string strPlanID = 5;
inline void QueryAllRemotePatrolStoreReq::clear_strplanid() {
  strplanid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRemotePatrolStoreReq::strplanid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
  return strplanid_.GetNoArena();
}
inline void QueryAllRemotePatrolStoreReq::set_strplanid(const ::std::string& value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
}
#if LANG_CXX11
inline void QueryAllRemotePatrolStoreReq::set_strplanid(::std::string&& value) {
  
  strplanid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
}
#endif
inline void QueryAllRemotePatrolStoreReq::set_strplanid(const char* value) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
}
inline void QueryAllRemotePatrolStoreReq::set_strplanid(const char* value, size_t size) {
  
  strplanid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
}
inline ::std::string* QueryAllRemotePatrolStoreReq::mutable_strplanid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
  return strplanid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRemotePatrolStoreReq::release_strplanid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
  
  return strplanid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRemotePatrolStoreReq::set_allocated_strplanid(::std::string* strplanid) {
  if (strplanid != NULL) {
    
  } else {
    
  }
  strplanid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strplanid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strPlanID)
}

// string strBeginDate = 6;
inline void QueryAllRemotePatrolStoreReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRemotePatrolStoreReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QueryAllRemotePatrolStoreReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
}
#if LANG_CXX11
inline void QueryAllRemotePatrolStoreReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
}
#endif
inline void QueryAllRemotePatrolStoreReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
}
inline void QueryAllRemotePatrolStoreReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
}
inline ::std::string* QueryAllRemotePatrolStoreReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRemotePatrolStoreReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRemotePatrolStoreReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strBeginDate)
}

// string strEndDate = 7;
inline void QueryAllRemotePatrolStoreReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRemotePatrolStoreReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QueryAllRemotePatrolStoreReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
}
#if LANG_CXX11
inline void QueryAllRemotePatrolStoreReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
}
#endif
inline void QueryAllRemotePatrolStoreReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
}
inline void QueryAllRemotePatrolStoreReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
}
inline ::std::string* QueryAllRemotePatrolStoreReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRemotePatrolStoreReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRemotePatrolStoreReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.strEndDate)
}

// uint32 uiBeginIndex = 8;
inline void QueryAllRemotePatrolStoreReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryAllRemotePatrolStoreReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryAllRemotePatrolStoreReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// QueryAllRemotePatrolStoreRsp

// repeated .CustomerFlow.Interactive.Message.RemotePatrolStore patrolStore = 1;
inline int QueryAllRemotePatrolStoreRsp::patrolstore_size() const {
  return patrolstore_.size();
}
inline void QueryAllRemotePatrolStoreRsp::clear_patrolstore() {
  patrolstore_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::RemotePatrolStore& QueryAllRemotePatrolStoreRsp::patrolstore(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp.patrolStore)
  return patrolstore_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* QueryAllRemotePatrolStoreRsp::mutable_patrolstore(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp.patrolStore)
  return patrolstore_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::RemotePatrolStore* QueryAllRemotePatrolStoreRsp::add_patrolstore() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp.patrolStore)
  return patrolstore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RemotePatrolStore >*
QueryAllRemotePatrolStoreRsp::mutable_patrolstore() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp.patrolStore)
  return &patrolstore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RemotePatrolStore >&
QueryAllRemotePatrolStoreRsp::patrolstore() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp.patrolStore)
  return patrolstore_;
}

// -------------------------------------------------------------------

// AddStoreSensorReq

// string strUserID = 1;
inline void AddStoreSensorReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddStoreSensorReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddStoreSensorReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
}
#if LANG_CXX11
inline void AddStoreSensorReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
}
#endif
inline void AddStoreSensorReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
}
inline void AddStoreSensorReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
}
inline ::std::string* AddStoreSensorReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddStoreSensorReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddStoreSensorReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreSensorReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
inline bool AddStoreSensorReq::has_sensorinfo() const {
  return this != internal_default_instance() && sensorinfo_ != NULL;
}
inline void AddStoreSensorReq::clear_sensorinfo() {
  if (GetArenaNoVirtual() == NULL && sensorinfo_ != NULL) delete sensorinfo_;
  sensorinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Sensor& AddStoreSensorReq::sensorinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreSensorReq.sensorInfo)
  return sensorinfo_ != NULL ? *sensorinfo_
                         : *::CustomerFlow::Interactive::Message::Sensor::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Sensor* AddStoreSensorReq::mutable_sensorinfo() {
  
  if (sensorinfo_ == NULL) {
    sensorinfo_ = new ::CustomerFlow::Interactive::Message::Sensor;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreSensorReq.sensorInfo)
  return sensorinfo_;
}
inline ::CustomerFlow::Interactive::Message::Sensor* AddStoreSensorReq::release_sensorinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreSensorReq.sensorInfo)
  
  ::CustomerFlow::Interactive::Message::Sensor* temp = sensorinfo_;
  sensorinfo_ = NULL;
  return temp;
}
inline void AddStoreSensorReq::set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo) {
  delete sensorinfo_;
  sensorinfo_ = sensorinfo;
  if (sensorinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreSensorReq.sensorInfo)
}

// -------------------------------------------------------------------

// AddStoreSensorRsp

// string strSensorID = 1;
inline void AddStoreSensorRsp::clear_strsensorid() {
  strsensorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddStoreSensorRsp::strsensorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
  return strsensorid_.GetNoArena();
}
inline void AddStoreSensorRsp::set_strsensorid(const ::std::string& value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
}
#if LANG_CXX11
inline void AddStoreSensorRsp::set_strsensorid(::std::string&& value) {
  
  strsensorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
}
#endif
inline void AddStoreSensorRsp::set_strsensorid(const char* value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
}
inline void AddStoreSensorRsp::set_strsensorid(const char* value, size_t size) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
}
inline ::std::string* AddStoreSensorRsp::mutable_strsensorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
  return strsensorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddStoreSensorRsp::release_strsensorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
  
  return strsensorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddStoreSensorRsp::set_allocated_strsensorid(::std::string* strsensorid) {
  if (strsensorid != NULL) {
    
  } else {
    
  }
  strsensorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddStoreSensorRsp.strSensorID)
}

// -------------------------------------------------------------------

// DeleteStoreSensorReq

// string strUserID = 1;
inline void DeleteStoreSensorReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreSensorReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteStoreSensorReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
}
#if LANG_CXX11
inline void DeleteStoreSensorReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
}
#endif
inline void DeleteStoreSensorReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
}
inline void DeleteStoreSensorReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
}
inline ::std::string* DeleteStoreSensorReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreSensorReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreSensorReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strUserID)
}

// string strStoreID = 2;
inline void DeleteStoreSensorReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreSensorReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void DeleteStoreSensorReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
}
#if LANG_CXX11
inline void DeleteStoreSensorReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
}
#endif
inline void DeleteStoreSensorReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
}
inline void DeleteStoreSensorReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
}
inline ::std::string* DeleteStoreSensorReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreSensorReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreSensorReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strStoreID)
}

// string strSensorID = 3;
inline void DeleteStoreSensorReq::clear_strsensorid() {
  strsensorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreSensorReq::strsensorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
  return strsensorid_.GetNoArena();
}
inline void DeleteStoreSensorReq::set_strsensorid(const ::std::string& value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
}
#if LANG_CXX11
inline void DeleteStoreSensorReq::set_strsensorid(::std::string&& value) {
  
  strsensorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
}
#endif
inline void DeleteStoreSensorReq::set_strsensorid(const char* value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
}
inline void DeleteStoreSensorReq::set_strsensorid(const char* value, size_t size) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
}
inline ::std::string* DeleteStoreSensorReq::mutable_strsensorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
  return strsensorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreSensorReq::release_strsensorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
  
  return strsensorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreSensorReq::set_allocated_strsensorid(::std::string* strsensorid) {
  if (strsensorid != NULL) {
    
  } else {
    
  }
  strsensorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreSensorReq.strSensorID)
}

// -------------------------------------------------------------------

// DeleteStoreSensorRsp

// string strValue = 1;
inline void DeleteStoreSensorRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStoreSensorRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteStoreSensorRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
}
#if LANG_CXX11
inline void DeleteStoreSensorRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
}
#endif
inline void DeleteStoreSensorRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
}
inline void DeleteStoreSensorRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
}
inline ::std::string* DeleteStoreSensorRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStoreSensorRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStoreSensorRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.DeleteStoreSensorRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyStoreSensorReq

// string strUserID = 1;
inline void ModifyStoreSensorReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyStoreSensorReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyStoreSensorReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
}
#if LANG_CXX11
inline void ModifyStoreSensorReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
}
#endif
inline void ModifyStoreSensorReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
}
inline void ModifyStoreSensorReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
}
inline ::std::string* ModifyStoreSensorReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyStoreSensorReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyStoreSensorReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
inline bool ModifyStoreSensorReq::has_sensorinfo() const {
  return this != internal_default_instance() && sensorinfo_ != NULL;
}
inline void ModifyStoreSensorReq::clear_sensorinfo() {
  if (GetArenaNoVirtual() == NULL && sensorinfo_ != NULL) delete sensorinfo_;
  sensorinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Sensor& ModifyStoreSensorReq::sensorinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.sensorInfo)
  return sensorinfo_ != NULL ? *sensorinfo_
                         : *::CustomerFlow::Interactive::Message::Sensor::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Sensor* ModifyStoreSensorReq::mutable_sensorinfo() {
  
  if (sensorinfo_ == NULL) {
    sensorinfo_ = new ::CustomerFlow::Interactive::Message::Sensor;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.sensorInfo)
  return sensorinfo_;
}
inline ::CustomerFlow::Interactive::Message::Sensor* ModifyStoreSensorReq::release_sensorinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.sensorInfo)
  
  ::CustomerFlow::Interactive::Message::Sensor* temp = sensorinfo_;
  sensorinfo_ = NULL;
  return temp;
}
inline void ModifyStoreSensorReq::set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo) {
  delete sensorinfo_;
  sensorinfo_ = sensorinfo;
  if (sensorinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreSensorReq.sensorInfo)
}

// -------------------------------------------------------------------

// ModifyStoreSensorRsp

// string strValue = 1;
inline void ModifyStoreSensorRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyStoreSensorRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyStoreSensorRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
}
#if LANG_CXX11
inline void ModifyStoreSensorRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
}
#endif
inline void ModifyStoreSensorRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
}
inline void ModifyStoreSensorRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
}
inline ::std::string* ModifyStoreSensorRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyStoreSensorRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyStoreSensorRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyStoreSensorRsp.strValue)
}

// -------------------------------------------------------------------

// QueryStoreSensorInfoReq

// string strUserID = 1;
inline void QueryStoreSensorInfoReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreSensorInfoReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryStoreSensorInfoReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
}
#if LANG_CXX11
inline void QueryStoreSensorInfoReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
}
#endif
inline void QueryStoreSensorInfoReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
}
inline void QueryStoreSensorInfoReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
}
inline ::std::string* QueryStoreSensorInfoReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreSensorInfoReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreSensorInfoReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strUserID)
}

// string strSensorID = 2;
inline void QueryStoreSensorInfoReq::clear_strsensorid() {
  strsensorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStoreSensorInfoReq::strsensorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
  return strsensorid_.GetNoArena();
}
inline void QueryStoreSensorInfoReq::set_strsensorid(const ::std::string& value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
}
#if LANG_CXX11
inline void QueryStoreSensorInfoReq::set_strsensorid(::std::string&& value) {
  
  strsensorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
}
#endif
inline void QueryStoreSensorInfoReq::set_strsensorid(const char* value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
}
inline void QueryStoreSensorInfoReq::set_strsensorid(const char* value, size_t size) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
}
inline ::std::string* QueryStoreSensorInfoReq::mutable_strsensorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
  return strsensorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStoreSensorInfoReq::release_strsensorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
  
  return strsensorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStoreSensorInfoReq::set_allocated_strsensorid(::std::string* strsensorid) {
  if (strsensorid != NULL) {
    
  } else {
    
  }
  strsensorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq.strSensorID)
}

// -------------------------------------------------------------------

// QueryStoreSensorInfoRsp

// .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
inline bool QueryStoreSensorInfoRsp::has_sensorinfo() const {
  return this != internal_default_instance() && sensorinfo_ != NULL;
}
inline void QueryStoreSensorInfoRsp::clear_sensorinfo() {
  if (GetArenaNoVirtual() == NULL && sensorinfo_ != NULL) delete sensorinfo_;
  sensorinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Sensor& QueryStoreSensorInfoRsp::sensorinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp.sensorInfo)
  return sensorinfo_ != NULL ? *sensorinfo_
                         : *::CustomerFlow::Interactive::Message::Sensor::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Sensor* QueryStoreSensorInfoRsp::mutable_sensorinfo() {
  
  if (sensorinfo_ == NULL) {
    sensorinfo_ = new ::CustomerFlow::Interactive::Message::Sensor;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp.sensorInfo)
  return sensorinfo_;
}
inline ::CustomerFlow::Interactive::Message::Sensor* QueryStoreSensorInfoRsp::release_sensorinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp.sensorInfo)
  
  ::CustomerFlow::Interactive::Message::Sensor* temp = sensorinfo_;
  sensorinfo_ = NULL;
  return temp;
}
inline void QueryStoreSensorInfoRsp::set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo) {
  delete sensorinfo_;
  sensorinfo_ = sensorinfo;
  if (sensorinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp.sensorInfo)
}

// -------------------------------------------------------------------

// QueryAllStoreSensorReq

// string strUserID = 1;
inline void QueryAllStoreSensorReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreSensorReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllStoreSensorReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllStoreSensorReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
}
#endif
inline void QueryAllStoreSensorReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
}
inline void QueryAllStoreSensorReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
}
inline ::std::string* QueryAllStoreSensorReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreSensorReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreSensorReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strUserID)
}

// string strStoreID = 2;
inline void QueryAllStoreSensorReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllStoreSensorReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryAllStoreSensorReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
}
#if LANG_CXX11
inline void QueryAllStoreSensorReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
}
#endif
inline void QueryAllStoreSensorReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
}
inline void QueryAllStoreSensorReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
}
inline ::std::string* QueryAllStoreSensorReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllStoreSensorReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllStoreSensorReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllStoreSensorReq.strStoreID)
}

// -------------------------------------------------------------------

// QueryAllStoreSensorRsp

// repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
inline int QueryAllStoreSensorRsp::sensorinfo_size() const {
  return sensorinfo_.size();
}
inline void QueryAllStoreSensorRsp::clear_sensorinfo() {
  sensorinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Sensor& QueryAllStoreSensorRsp::sensorinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp.sensorInfo)
  return sensorinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* QueryAllStoreSensorRsp::mutable_sensorinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp.sensorInfo)
  return sensorinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* QueryAllStoreSensorRsp::add_sensorinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp.sensorInfo)
  return sensorinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
QueryAllStoreSensorRsp::mutable_sensorinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp.sensorInfo)
  return &sensorinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
QueryAllStoreSensorRsp::sensorinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp.sensorInfo)
  return sensorinfo_;
}

// -------------------------------------------------------------------

// ImportPOSDataReq

// string strUserID = 1;
inline void ImportPOSDataReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportPOSDataReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ImportPOSDataReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
}
#if LANG_CXX11
inline void ImportPOSDataReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
}
#endif
inline void ImportPOSDataReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
}
inline void ImportPOSDataReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
}
inline ::std::string* ImportPOSDataReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportPOSDataReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportPOSDataReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ImportPOSDataReq.strUserID)
}

// string strStoreID = 2;
inline void ImportPOSDataReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportPOSDataReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void ImportPOSDataReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
}
#if LANG_CXX11
inline void ImportPOSDataReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
}
#endif
inline void ImportPOSDataReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
}
inline void ImportPOSDataReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
}
inline ::std::string* ImportPOSDataReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportPOSDataReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportPOSDataReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ImportPOSDataReq.strStoreID)
}

// uint32 uiOrderAmount = 3;
inline void ImportPOSDataReq::clear_uiorderamount() {
  uiorderamount_ = 0u;
}
inline ::google::protobuf::uint32 ImportPOSDataReq::uiorderamount() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataReq.uiOrderAmount)
  return uiorderamount_;
}
inline void ImportPOSDataReq::set_uiorderamount(::google::protobuf::uint32 value) {
  
  uiorderamount_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataReq.uiOrderAmount)
}

// uint32 uiGoodsAmount = 4;
inline void ImportPOSDataReq::clear_uigoodsamount() {
  uigoodsamount_ = 0u;
}
inline ::google::protobuf::uint32 ImportPOSDataReq::uigoodsamount() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataReq.uiGoodsAmount)
  return uigoodsamount_;
}
inline void ImportPOSDataReq::set_uigoodsamount(::google::protobuf::uint32 value) {
  
  uigoodsamount_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataReq.uiGoodsAmount)
}

// double dDealAmount = 5;
inline void ImportPOSDataReq::clear_ddealamount() {
  ddealamount_ = 0;
}
inline double ImportPOSDataReq::ddealamount() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataReq.dDealAmount)
  return ddealamount_;
}
inline void ImportPOSDataReq::set_ddealamount(double value) {
  
  ddealamount_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataReq.dDealAmount)
}

// string strDealDate = 6;
inline void ImportPOSDataReq::clear_strdealdate() {
  strdealdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportPOSDataReq::strdealdate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
  return strdealdate_.GetNoArena();
}
inline void ImportPOSDataReq::set_strdealdate(const ::std::string& value) {
  
  strdealdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
}
#if LANG_CXX11
inline void ImportPOSDataReq::set_strdealdate(::std::string&& value) {
  
  strdealdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
}
#endif
inline void ImportPOSDataReq::set_strdealdate(const char* value) {
  
  strdealdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
}
inline void ImportPOSDataReq::set_strdealdate(const char* value, size_t size) {
  
  strdealdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
}
inline ::std::string* ImportPOSDataReq::mutable_strdealdate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
  return strdealdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportPOSDataReq::release_strdealdate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
  
  return strdealdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportPOSDataReq::set_allocated_strdealdate(::std::string* strdealdate) {
  if (strdealdate != NULL) {
    
  } else {
    
  }
  strdealdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdealdate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ImportPOSDataReq.strDealDate)
}

// -------------------------------------------------------------------

// ImportPOSDataRsp

// string strValue = 1;
inline void ImportPOSDataRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportPOSDataRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ImportPOSDataRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
}
#if LANG_CXX11
inline void ImportPOSDataRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
}
#endif
inline void ImportPOSDataRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
}
inline void ImportPOSDataRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
}
inline ::std::string* ImportPOSDataRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportPOSDataRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportPOSDataRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ImportPOSDataRsp.strValue)
}

// -------------------------------------------------------------------

// QueryCustomerFlowStatisticReq

// string strUserID = 1;
inline void QueryCustomerFlowStatisticReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCustomerFlowStatisticReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryCustomerFlowStatisticReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
}
#if LANG_CXX11
inline void QueryCustomerFlowStatisticReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
}
#endif
inline void QueryCustomerFlowStatisticReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
}
inline void QueryCustomerFlowStatisticReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
}
inline ::std::string* QueryCustomerFlowStatisticReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCustomerFlowStatisticReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCustomerFlowStatisticReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strUserID)
}

// string strStoreID = 2;
inline void QueryCustomerFlowStatisticReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCustomerFlowStatisticReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryCustomerFlowStatisticReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
}
#if LANG_CXX11
inline void QueryCustomerFlowStatisticReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
}
#endif
inline void QueryCustomerFlowStatisticReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
}
inline void QueryCustomerFlowStatisticReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
}
inline ::std::string* QueryCustomerFlowStatisticReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCustomerFlowStatisticReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCustomerFlowStatisticReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strStoreID)
}

// string strBeginDate = 3;
inline void QueryCustomerFlowStatisticReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCustomerFlowStatisticReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QueryCustomerFlowStatisticReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
}
#if LANG_CXX11
inline void QueryCustomerFlowStatisticReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
}
#endif
inline void QueryCustomerFlowStatisticReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
}
inline void QueryCustomerFlowStatisticReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
}
inline ::std::string* QueryCustomerFlowStatisticReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCustomerFlowStatisticReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCustomerFlowStatisticReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strBeginDate)
}

// string strEndDate = 4;
inline void QueryCustomerFlowStatisticReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCustomerFlowStatisticReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QueryCustomerFlowStatisticReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
}
#if LANG_CXX11
inline void QueryCustomerFlowStatisticReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
}
#endif
inline void QueryCustomerFlowStatisticReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
}
inline void QueryCustomerFlowStatisticReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
}
inline ::std::string* QueryCustomerFlowStatisticReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCustomerFlowStatisticReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCustomerFlowStatisticReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.strEndDate)
}

// uint32 uiTimePrecision = 5;
inline void QueryCustomerFlowStatisticReq::clear_uitimeprecision() {
  uitimeprecision_ = 0u;
}
inline ::google::protobuf::uint32 QueryCustomerFlowStatisticReq::uitimeprecision() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.uiTimePrecision)
  return uitimeprecision_;
}
inline void QueryCustomerFlowStatisticReq::set_uitimeprecision(::google::protobuf::uint32 value) {
  
  uitimeprecision_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq.uiTimePrecision)
}

// -------------------------------------------------------------------

// QueryCustomerFlowStatisticRsp

// string strChartData = 1;
inline void QueryCustomerFlowStatisticRsp::clear_strchartdata() {
  strchartdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCustomerFlowStatisticRsp::strchartdata() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
  return strchartdata_.GetNoArena();
}
inline void QueryCustomerFlowStatisticRsp::set_strchartdata(const ::std::string& value) {
  
  strchartdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
}
#if LANG_CXX11
inline void QueryCustomerFlowStatisticRsp::set_strchartdata(::std::string&& value) {
  
  strchartdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
}
#endif
inline void QueryCustomerFlowStatisticRsp::set_strchartdata(const char* value) {
  
  strchartdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
}
inline void QueryCustomerFlowStatisticRsp::set_strchartdata(const char* value, size_t size) {
  
  strchartdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
}
inline ::std::string* QueryCustomerFlowStatisticRsp::mutable_strchartdata() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
  return strchartdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCustomerFlowStatisticRsp::release_strchartdata() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
  
  return strchartdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCustomerFlowStatisticRsp::set_allocated_strchartdata(::std::string* strchartdata) {
  if (strchartdata != NULL) {
    
  } else {
    
  }
  strchartdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchartdata);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp.strChartData)
}

// -------------------------------------------------------------------

// QueryPatrolResultReportReq

// string strUserID = 1;
inline void QueryPatrolResultReportReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryPatrolResultReportReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryPatrolResultReportReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
}
#if LANG_CXX11
inline void QueryPatrolResultReportReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
}
#endif
inline void QueryPatrolResultReportReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
}
inline void QueryPatrolResultReportReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
}
inline ::std::string* QueryPatrolResultReportReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPatrolResultReportReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPatrolResultReportReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strUserID)
}

// string strStoreID = 2;
inline void QueryPatrolResultReportReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryPatrolResultReportReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QueryPatrolResultReportReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
}
#if LANG_CXX11
inline void QueryPatrolResultReportReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
}
#endif
inline void QueryPatrolResultReportReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
}
inline void QueryPatrolResultReportReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
}
inline ::std::string* QueryPatrolResultReportReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPatrolResultReportReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPatrolResultReportReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strStoreID)
}

// string strBeginDate = 3;
inline void QueryPatrolResultReportReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryPatrolResultReportReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QueryPatrolResultReportReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
}
#if LANG_CXX11
inline void QueryPatrolResultReportReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
}
#endif
inline void QueryPatrolResultReportReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
}
inline void QueryPatrolResultReportReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
}
inline ::std::string* QueryPatrolResultReportReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPatrolResultReportReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPatrolResultReportReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strBeginDate)
}

// string strEndDate = 4;
inline void QueryPatrolResultReportReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryPatrolResultReportReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QueryPatrolResultReportReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
}
#if LANG_CXX11
inline void QueryPatrolResultReportReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
}
#endif
inline void QueryPatrolResultReportReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
}
inline void QueryPatrolResultReportReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
}
inline ::std::string* QueryPatrolResultReportReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPatrolResultReportReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPatrolResultReportReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strEndDate)
}

// uint32 uiPatrolResult = 5;
inline void QueryPatrolResultReportReq::clear_uipatrolresult() {
  uipatrolresult_ = 0u;
}
inline ::google::protobuf::uint32 QueryPatrolResultReportReq::uipatrolresult() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.uiPatrolResult)
  return uipatrolresult_;
}
inline void QueryPatrolResultReportReq::set_uipatrolresult(::google::protobuf::uint32 value) {
  
  uipatrolresult_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.uiPatrolResult)
}

// string strPatrolUserID = 6;
inline void QueryPatrolResultReportReq::clear_strpatroluserid() {
  strpatroluserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryPatrolResultReportReq::strpatroluserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
  return strpatroluserid_.GetNoArena();
}
inline void QueryPatrolResultReportReq::set_strpatroluserid(const ::std::string& value) {
  
  strpatroluserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
}
#if LANG_CXX11
inline void QueryPatrolResultReportReq::set_strpatroluserid(::std::string&& value) {
  
  strpatroluserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
}
#endif
inline void QueryPatrolResultReportReq::set_strpatroluserid(const char* value) {
  
  strpatroluserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
}
inline void QueryPatrolResultReportReq::set_strpatroluserid(const char* value, size_t size) {
  
  strpatroluserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
}
inline ::std::string* QueryPatrolResultReportReq::mutable_strpatroluserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
  return strpatroluserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPatrolResultReportReq::release_strpatroluserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
  
  return strpatroluserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPatrolResultReportReq::set_allocated_strpatroluserid(::std::string* strpatroluserid) {
  if (strpatroluserid != NULL) {
    
  } else {
    
  }
  strpatroluserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpatroluserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryPatrolResultReportReq.strPatrolUserID)
}

// -------------------------------------------------------------------

// QueryPatrolResultReportRsp

// string strChartData = 1;
inline void QueryPatrolResultReportRsp::clear_strchartdata() {
  strchartdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryPatrolResultReportRsp::strchartdata() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
  return strchartdata_.GetNoArena();
}
inline void QueryPatrolResultReportRsp::set_strchartdata(const ::std::string& value) {
  
  strchartdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
}
#if LANG_CXX11
inline void QueryPatrolResultReportRsp::set_strchartdata(::std::string&& value) {
  
  strchartdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
}
#endif
inline void QueryPatrolResultReportRsp::set_strchartdata(const char* value) {
  
  strchartdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
}
inline void QueryPatrolResultReportRsp::set_strchartdata(const char* value, size_t size) {
  
  strchartdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
}
inline ::std::string* QueryPatrolResultReportRsp::mutable_strchartdata() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
  return strchartdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPatrolResultReportRsp::release_strchartdata() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
  
  return strchartdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPatrolResultReportRsp::set_allocated_strchartdata(::std::string* strchartdata) {
  if (strchartdata != NULL) {
    
  } else {
    
  }
  strchartdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchartdata);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp.strChartData)
}

// -------------------------------------------------------------------

// ReportCustomerFlowDataReq

// string strDeviceID = 1;
inline void ReportCustomerFlowDataReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportCustomerFlowDataReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void ReportCustomerFlowDataReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
}
#if LANG_CXX11
inline void ReportCustomerFlowDataReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
}
#endif
inline void ReportCustomerFlowDataReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
}
inline void ReportCustomerFlowDataReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
}
inline ::std::string* ReportCustomerFlowDataReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportCustomerFlowDataReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportCustomerFlowDataReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.strDeviceID)
}

// repeated .CustomerFlow.Interactive.Message.RawCustomerFlow customerFlow = 2;
inline int ReportCustomerFlowDataReq::customerflow_size() const {
  return customerflow_.size();
}
inline void ReportCustomerFlowDataReq::clear_customerflow() {
  customerflow_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::RawCustomerFlow& ReportCustomerFlowDataReq::customerflow(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.customerFlow)
  return customerflow_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::RawCustomerFlow* ReportCustomerFlowDataReq::mutable_customerflow(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.customerFlow)
  return customerflow_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::RawCustomerFlow* ReportCustomerFlowDataReq::add_customerflow() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.customerFlow)
  return customerflow_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RawCustomerFlow >*
ReportCustomerFlowDataReq::mutable_customerflow() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.customerFlow)
  return &customerflow_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::RawCustomerFlow >&
ReportCustomerFlowDataReq::customerflow() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq.customerFlow)
  return customerflow_;
}

// -------------------------------------------------------------------

// ReportCustomerFlowDataRsp

// string strValue = 1;
inline void ReportCustomerFlowDataRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportCustomerFlowDataRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ReportCustomerFlowDataRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
}
#if LANG_CXX11
inline void ReportCustomerFlowDataRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
}
#endif
inline void ReportCustomerFlowDataRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
}
inline void ReportCustomerFlowDataRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
}
inline ::std::string* ReportCustomerFlowDataRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportCustomerFlowDataRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportCustomerFlowDataRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp.strValue)
}

// -------------------------------------------------------------------

// ReportSensorInfoReq

// string strDeviceID = 1;
inline void ReportSensorInfoReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportSensorInfoReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void ReportSensorInfoReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
}
#if LANG_CXX11
inline void ReportSensorInfoReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
}
#endif
inline void ReportSensorInfoReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
}
inline void ReportSensorInfoReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
}
inline ::std::string* ReportSensorInfoReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportSensorInfoReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportSensorInfoReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportSensorInfoReq.strDeviceID)
}

// repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
inline int ReportSensorInfoReq::sensorinfo_size() const {
  return sensorinfo_.size();
}
inline void ReportSensorInfoReq::clear_sensorinfo() {
  sensorinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Sensor& ReportSensorInfoReq::sensorinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorInfoReq.sensorInfo)
  return sensorinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* ReportSensorInfoReq::mutable_sensorinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportSensorInfoReq.sensorInfo)
  return sensorinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* ReportSensorInfoReq::add_sensorinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.ReportSensorInfoReq.sensorInfo)
  return sensorinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
ReportSensorInfoReq::mutable_sensorinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.ReportSensorInfoReq.sensorInfo)
  return &sensorinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
ReportSensorInfoReq::sensorinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.ReportSensorInfoReq.sensorInfo)
  return sensorinfo_;
}

// -------------------------------------------------------------------

// ReportSensorInfoRsp

// string strValue = 1;
inline void ReportSensorInfoRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportSensorInfoRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ReportSensorInfoRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
}
#if LANG_CXX11
inline void ReportSensorInfoRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
}
#endif
inline void ReportSensorInfoRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
}
inline void ReportSensorInfoRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
}
inline ::std::string* ReportSensorInfoRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportSensorInfoRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportSensorInfoRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportSensorInfoRsp.strValue)
}

// -------------------------------------------------------------------

// ReportSensorAlarmInfoReq

// .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
inline bool ReportSensorAlarmInfoReq::has_sensorinfo() const {
  return this != internal_default_instance() && sensorinfo_ != NULL;
}
inline void ReportSensorAlarmInfoReq::clear_sensorinfo() {
  if (GetArenaNoVirtual() == NULL && sensorinfo_ != NULL) delete sensorinfo_;
  sensorinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Sensor& ReportSensorAlarmInfoReq::sensorinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.sensorInfo)
  return sensorinfo_ != NULL ? *sensorinfo_
                         : *::CustomerFlow::Interactive::Message::Sensor::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Sensor* ReportSensorAlarmInfoReq::mutable_sensorinfo() {
  
  if (sensorinfo_ == NULL) {
    sensorinfo_ = new ::CustomerFlow::Interactive::Message::Sensor;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.sensorInfo)
  return sensorinfo_;
}
inline ::CustomerFlow::Interactive::Message::Sensor* ReportSensorAlarmInfoReq::release_sensorinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.sensorInfo)
  
  ::CustomerFlow::Interactive::Message::Sensor* temp = sensorinfo_;
  sensorinfo_ = NULL;
  return temp;
}
inline void ReportSensorAlarmInfoReq::set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo) {
  delete sensorinfo_;
  sensorinfo_ = sensorinfo;
  if (sensorinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.sensorInfo)
}

// uint32 uiRecover = 2;
inline void ReportSensorAlarmInfoReq::clear_uirecover() {
  uirecover_ = 0u;
}
inline ::google::protobuf::uint32 ReportSensorAlarmInfoReq::uirecover() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.uiRecover)
  return uirecover_;
}
inline void ReportSensorAlarmInfoReq::set_uirecover(::google::protobuf::uint32 value) {
  
  uirecover_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.uiRecover)
}

// string strFileID = 3;
inline void ReportSensorAlarmInfoReq::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportSensorAlarmInfoReq::strfileid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
  return strfileid_.GetNoArena();
}
inline void ReportSensorAlarmInfoReq::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
}
#if LANG_CXX11
inline void ReportSensorAlarmInfoReq::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
}
#endif
inline void ReportSensorAlarmInfoReq::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
}
inline void ReportSensorAlarmInfoReq::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
}
inline ::std::string* ReportSensorAlarmInfoReq::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportSensorAlarmInfoReq::release_strfileid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportSensorAlarmInfoReq::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq.strFileID)
}

// -------------------------------------------------------------------

// ReportSensorAlarmInfoRsp

// string strValue = 1;
inline void ReportSensorAlarmInfoRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportSensorAlarmInfoRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ReportSensorAlarmInfoRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
}
#if LANG_CXX11
inline void ReportSensorAlarmInfoRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
}
#endif
inline void ReportSensorAlarmInfoRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
}
inline void ReportSensorAlarmInfoRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
}
inline ::std::string* ReportSensorAlarmInfoRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportSensorAlarmInfoRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportSensorAlarmInfoRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp.strValue)
}

// -------------------------------------------------------------------

// QuerySensorAlarmThresholdReq

// string strDeviceID = 1;
inline void QuerySensorAlarmThresholdReq::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmThresholdReq::strdeviceid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
  return strdeviceid_.GetNoArena();
}
inline void QuerySensorAlarmThresholdReq::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
}
#if LANG_CXX11
inline void QuerySensorAlarmThresholdReq::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
}
#endif
inline void QuerySensorAlarmThresholdReq::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
}
inline void QuerySensorAlarmThresholdReq::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
}
inline ::std::string* QuerySensorAlarmThresholdReq::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmThresholdReq::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmThresholdReq::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq.strDeviceID)
}

// -------------------------------------------------------------------

// QuerySensorAlarmThresholdRsp

// repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
inline int QuerySensorAlarmThresholdRsp::sensorinfo_size() const {
  return sensorinfo_.size();
}
inline void QuerySensorAlarmThresholdRsp::clear_sensorinfo() {
  sensorinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Sensor& QuerySensorAlarmThresholdRsp::sensorinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp.sensorInfo)
  return sensorinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* QuerySensorAlarmThresholdRsp::mutable_sensorinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp.sensorInfo)
  return sensorinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* QuerySensorAlarmThresholdRsp::add_sensorinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp.sensorInfo)
  return sensorinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
QuerySensorAlarmThresholdRsp::mutable_sensorinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp.sensorInfo)
  return &sensorinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
QuerySensorAlarmThresholdRsp::sensorinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp.sensorInfo)
  return sensorinfo_;
}

// -------------------------------------------------------------------

// RemoveSensorRecordsReq

// string strUserID = 1;
inline void RemoveSensorRecordsReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveSensorRecordsReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
  return struserid_.GetNoArena();
}
inline void RemoveSensorRecordsReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
}
#if LANG_CXX11
inline void RemoveSensorRecordsReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
}
#endif
inline void RemoveSensorRecordsReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
}
inline void RemoveSensorRecordsReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
}
inline ::std::string* RemoveSensorRecordsReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveSensorRecordsReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveSensorRecordsReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strUserID)
}

// repeated string strRecordIDList = 2;
inline int RemoveSensorRecordsReq::strrecordidlist_size() const {
  return strrecordidlist_.size();
}
inline void RemoveSensorRecordsReq::clear_strrecordidlist() {
  strrecordidlist_.Clear();
}
inline const ::std::string& RemoveSensorRecordsReq::strrecordidlist(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
  return strrecordidlist_.Get(index);
}
inline ::std::string* RemoveSensorRecordsReq::mutable_strrecordidlist(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
  return strrecordidlist_.Mutable(index);
}
inline void RemoveSensorRecordsReq::set_strrecordidlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
  strrecordidlist_.Mutable(index)->assign(value);
}
inline void RemoveSensorRecordsReq::set_strrecordidlist(int index, const char* value) {
  strrecordidlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
}
inline void RemoveSensorRecordsReq::set_strrecordidlist(int index, const char* value, size_t size) {
  strrecordidlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
}
inline ::std::string* RemoveSensorRecordsReq::add_strrecordidlist() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
  return strrecordidlist_.Add();
}
inline void RemoveSensorRecordsReq::add_strrecordidlist(const ::std::string& value) {
  strrecordidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
}
inline void RemoveSensorRecordsReq::add_strrecordidlist(const char* value) {
  strrecordidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
}
inline void RemoveSensorRecordsReq::add_strrecordidlist(const char* value, size_t size) {
  strrecordidlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemoveSensorRecordsReq::strrecordidlist() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
  return strrecordidlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RemoveSensorRecordsReq::mutable_strrecordidlist() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RemoveSensorRecordsReq.strRecordIDList)
  return &strrecordidlist_;
}

// -------------------------------------------------------------------

// RemoveSensorRecordsRsp

// string strValue = 1;
inline void RemoveSensorRecordsRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveSensorRecordsRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void RemoveSensorRecordsRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
}
#if LANG_CXX11
inline void RemoveSensorRecordsRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
}
#endif
inline void RemoveSensorRecordsRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
}
inline void RemoveSensorRecordsRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
}
inline ::std::string* RemoveSensorRecordsRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveSensorRecordsRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveSensorRecordsRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp.strValue)
}

// -------------------------------------------------------------------

// RemoveSensorAlarmRecordsReq

// string strUserID = 1;
inline void RemoveSensorAlarmRecordsReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveSensorAlarmRecordsReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
  return struserid_.GetNoArena();
}
inline void RemoveSensorAlarmRecordsReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
}
#if LANG_CXX11
inline void RemoveSensorAlarmRecordsReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
}
#endif
inline void RemoveSensorAlarmRecordsReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
}
inline void RemoveSensorAlarmRecordsReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
}
inline ::std::string* RemoveSensorAlarmRecordsReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveSensorAlarmRecordsReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveSensorAlarmRecordsReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strUserID)
}

// repeated string strRecordIDList = 2;
inline int RemoveSensorAlarmRecordsReq::strrecordidlist_size() const {
  return strrecordidlist_.size();
}
inline void RemoveSensorAlarmRecordsReq::clear_strrecordidlist() {
  strrecordidlist_.Clear();
}
inline const ::std::string& RemoveSensorAlarmRecordsReq::strrecordidlist(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
  return strrecordidlist_.Get(index);
}
inline ::std::string* RemoveSensorAlarmRecordsReq::mutable_strrecordidlist(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
  return strrecordidlist_.Mutable(index);
}
inline void RemoveSensorAlarmRecordsReq::set_strrecordidlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
  strrecordidlist_.Mutable(index)->assign(value);
}
inline void RemoveSensorAlarmRecordsReq::set_strrecordidlist(int index, const char* value) {
  strrecordidlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
}
inline void RemoveSensorAlarmRecordsReq::set_strrecordidlist(int index, const char* value, size_t size) {
  strrecordidlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
}
inline ::std::string* RemoveSensorAlarmRecordsReq::add_strrecordidlist() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
  return strrecordidlist_.Add();
}
inline void RemoveSensorAlarmRecordsReq::add_strrecordidlist(const ::std::string& value) {
  strrecordidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
}
inline void RemoveSensorAlarmRecordsReq::add_strrecordidlist(const char* value) {
  strrecordidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
}
inline void RemoveSensorAlarmRecordsReq::add_strrecordidlist(const char* value, size_t size) {
  strrecordidlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemoveSensorAlarmRecordsReq::strrecordidlist() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
  return strrecordidlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RemoveSensorAlarmRecordsReq::mutable_strrecordidlist() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq.strRecordIDList)
  return &strrecordidlist_;
}

// -------------------------------------------------------------------

// RemoveSensorAlarmRecordsRsp

// string strValue = 1;
inline void RemoveSensorAlarmRecordsRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveSensorAlarmRecordsRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void RemoveSensorAlarmRecordsRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
}
#if LANG_CXX11
inline void RemoveSensorAlarmRecordsRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
}
#endif
inline void RemoveSensorAlarmRecordsRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
}
inline void RemoveSensorAlarmRecordsRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
}
inline ::std::string* RemoveSensorAlarmRecordsRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveSensorAlarmRecordsRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveSensorAlarmRecordsRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp.strValue)
}

// -------------------------------------------------------------------

// QuerySensorRecordsReq

// string strUserID = 1;
inline void QuerySensorRecordsReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
}
#endif
inline void QuerySensorRecordsReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
}
inline void QuerySensorRecordsReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
}
inline ::std::string* QuerySensorRecordsReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strUserID)
}

// string strStoreID = 2;
inline void QuerySensorRecordsReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
}
#endif
inline void QuerySensorRecordsReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
}
inline void QuerySensorRecordsReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
}
inline ::std::string* QuerySensorRecordsReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strStoreID)
}

// string strSensorID = 3;
inline void QuerySensorRecordsReq::clear_strsensorid() {
  strsensorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::strsensorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
  return strsensorid_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_strsensorid(const ::std::string& value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_strsensorid(::std::string&& value) {
  
  strsensorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
}
#endif
inline void QuerySensorRecordsReq::set_strsensorid(const char* value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
}
inline void QuerySensorRecordsReq::set_strsensorid(const char* value, size_t size) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
}
inline ::std::string* QuerySensorRecordsReq::mutable_strsensorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
  return strsensorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_strsensorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
  
  return strsensorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_strsensorid(::std::string* strsensorid) {
  if (strsensorid != NULL) {
    
  } else {
    
  }
  strsensorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorID)
}

// string strSensorType = 4;
inline void QuerySensorRecordsReq::clear_strsensortype() {
  strsensortype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::strsensortype() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
  return strsensortype_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_strsensortype(const ::std::string& value) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_strsensortype(::std::string&& value) {
  
  strsensortype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
}
#endif
inline void QuerySensorRecordsReq::set_strsensortype(const char* value) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
}
inline void QuerySensorRecordsReq::set_strsensortype(const char* value, size_t size) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
}
inline ::std::string* QuerySensorRecordsReq::mutable_strsensortype() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
  return strsensortype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_strsensortype() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
  
  return strsensortype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_strsensortype(::std::string* strsensortype) {
  if (strsensortype != NULL) {
    
  } else {
    
  }
  strsensortype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensortype);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strSensorType)
}

// string strBeginDate = 5;
inline void QuerySensorRecordsReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
}
#endif
inline void QuerySensorRecordsReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
}
inline void QuerySensorRecordsReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
}
inline ::std::string* QuerySensorRecordsReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strBeginDate)
}

// string strEndDate = 6;
inline void QuerySensorRecordsReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
}
#endif
inline void QuerySensorRecordsReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
}
inline void QuerySensorRecordsReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
}
inline ::std::string* QuerySensorRecordsReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strEndDate)
}

// uint32 uiBeginIndex = 7;
inline void QuerySensorRecordsReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QuerySensorRecordsReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QuerySensorRecordsReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.uiBeginIndex)
}

// uint32 uiTimeRangeType = 8;
inline void QuerySensorRecordsReq::clear_uitimerangetype() {
  uitimerangetype_ = 0u;
}
inline ::google::protobuf::uint32 QuerySensorRecordsReq::uitimerangetype() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.uiTimeRangeType)
  return uitimerangetype_;
}
inline void QuerySensorRecordsReq::set_uitimerangetype(::google::protobuf::uint32 value) {
  
  uitimerangetype_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.uiTimeRangeType)
}

// uint32 uiTimeRangeBase = 9;
inline void QuerySensorRecordsReq::clear_uitimerangebase() {
  uitimerangebase_ = 0u;
}
inline ::google::protobuf::uint32 QuerySensorRecordsReq::uitimerangebase() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.uiTimeRangeBase)
  return uitimerangebase_;
}
inline void QuerySensorRecordsReq::set_uitimerangebase(::google::protobuf::uint32 value) {
  
  uitimerangebase_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.uiTimeRangeBase)
}

// string strValue = 10;
inline void QuerySensorRecordsReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsReq::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
  return strvalue_.GetNoArena();
}
inline void QuerySensorRecordsReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
}
#if LANG_CXX11
inline void QuerySensorRecordsReq::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
}
#endif
inline void QuerySensorRecordsReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
}
inline void QuerySensorRecordsReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
}
inline ::std::string* QuerySensorRecordsReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsReq.strValue)
}

// -------------------------------------------------------------------

// QuerySensorRecordsRsp

// repeated string strRecordIDList = 1;
inline int QuerySensorRecordsRsp::strrecordidlist_size() const {
  return strrecordidlist_.size();
}
inline void QuerySensorRecordsRsp::clear_strrecordidlist() {
  strrecordidlist_.Clear();
}
inline const ::std::string& QuerySensorRecordsRsp::strrecordidlist(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
  return strrecordidlist_.Get(index);
}
inline ::std::string* QuerySensorRecordsRsp::mutable_strrecordidlist(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
  return strrecordidlist_.Mutable(index);
}
inline void QuerySensorRecordsRsp::set_strrecordidlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
  strrecordidlist_.Mutable(index)->assign(value);
}
inline void QuerySensorRecordsRsp::set_strrecordidlist(int index, const char* value) {
  strrecordidlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
}
inline void QuerySensorRecordsRsp::set_strrecordidlist(int index, const char* value, size_t size) {
  strrecordidlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
}
inline ::std::string* QuerySensorRecordsRsp::add_strrecordidlist() {
  // @@protoc_insertion_point(field_add_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
  return strrecordidlist_.Add();
}
inline void QuerySensorRecordsRsp::add_strrecordidlist(const ::std::string& value) {
  strrecordidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
}
inline void QuerySensorRecordsRsp::add_strrecordidlist(const char* value) {
  strrecordidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
}
inline void QuerySensorRecordsRsp::add_strrecordidlist(const char* value, size_t size) {
  strrecordidlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QuerySensorRecordsRsp::strrecordidlist() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
  return strrecordidlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QuerySensorRecordsRsp::mutable_strrecordidlist() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strRecordIDList)
  return &strrecordidlist_;
}

// repeated .CustomerFlow.Interactive.Message.Sensor sensorInfo = 2;
inline int QuerySensorRecordsRsp::sensorinfo_size() const {
  return sensorinfo_.size();
}
inline void QuerySensorRecordsRsp::clear_sensorinfo() {
  sensorinfo_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Sensor& QuerySensorRecordsRsp::sensorinfo(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.sensorInfo)
  return sensorinfo_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* QuerySensorRecordsRsp::mutable_sensorinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.sensorInfo)
  return sensorinfo_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Sensor* QuerySensorRecordsRsp::add_sensorinfo() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.sensorInfo)
  return sensorinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >*
QuerySensorRecordsRsp::mutable_sensorinfo() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.sensorInfo)
  return &sensorinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Sensor >&
QuerySensorRecordsRsp::sensorinfo() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.sensorInfo)
  return sensorinfo_;
}

// uint32 uiRealRecordNum = 3;
inline void QuerySensorRecordsRsp::clear_uirealrecordnum() {
  uirealrecordnum_ = 0u;
}
inline ::google::protobuf::uint32 QuerySensorRecordsRsp::uirealrecordnum() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.uiRealRecordNum)
  return uirealrecordnum_;
}
inline void QuerySensorRecordsRsp::set_uirealrecordnum(::google::protobuf::uint32 value) {
  
  uirealrecordnum_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.uiRealRecordNum)
}

// string strValue = 4;
inline void QuerySensorRecordsRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorRecordsRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void QuerySensorRecordsRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
}
#if LANG_CXX11
inline void QuerySensorRecordsRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
}
#endif
inline void QuerySensorRecordsRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
}
inline void QuerySensorRecordsRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
}
inline ::std::string* QuerySensorRecordsRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorRecordsRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorRecordsRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorRecordsRsp.strValue)
}

// -------------------------------------------------------------------

// QuerySensorAlarmRecordsReq

// string strUserID = 1;
inline void QuerySensorAlarmRecordsReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmRecordsReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QuerySensorAlarmRecordsReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
}
#if LANG_CXX11
inline void QuerySensorAlarmRecordsReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
}
#endif
inline void QuerySensorAlarmRecordsReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
}
inline void QuerySensorAlarmRecordsReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
}
inline ::std::string* QuerySensorAlarmRecordsReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmRecordsReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmRecordsReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strUserID)
}

// string strStoreID = 2;
inline void QuerySensorAlarmRecordsReq::clear_strstoreid() {
  strstoreid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmRecordsReq::strstoreid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
  return strstoreid_.GetNoArena();
}
inline void QuerySensorAlarmRecordsReq::set_strstoreid(const ::std::string& value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
}
#if LANG_CXX11
inline void QuerySensorAlarmRecordsReq::set_strstoreid(::std::string&& value) {
  
  strstoreid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
}
#endif
inline void QuerySensorAlarmRecordsReq::set_strstoreid(const char* value) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
}
inline void QuerySensorAlarmRecordsReq::set_strstoreid(const char* value, size_t size) {
  
  strstoreid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
}
inline ::std::string* QuerySensorAlarmRecordsReq::mutable_strstoreid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
  return strstoreid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmRecordsReq::release_strstoreid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
  
  return strstoreid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmRecordsReq::set_allocated_strstoreid(::std::string* strstoreid) {
  if (strstoreid != NULL) {
    
  } else {
    
  }
  strstoreid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoreid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strStoreID)
}

// string strSensorID = 3;
inline void QuerySensorAlarmRecordsReq::clear_strsensorid() {
  strsensorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmRecordsReq::strsensorid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
  return strsensorid_.GetNoArena();
}
inline void QuerySensorAlarmRecordsReq::set_strsensorid(const ::std::string& value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
}
#if LANG_CXX11
inline void QuerySensorAlarmRecordsReq::set_strsensorid(::std::string&& value) {
  
  strsensorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
}
#endif
inline void QuerySensorAlarmRecordsReq::set_strsensorid(const char* value) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
}
inline void QuerySensorAlarmRecordsReq::set_strsensorid(const char* value, size_t size) {
  
  strsensorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
}
inline ::std::string* QuerySensorAlarmRecordsReq::mutable_strsensorid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
  return strsensorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmRecordsReq::release_strsensorid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
  
  return strsensorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmRecordsReq::set_allocated_strsensorid(::std::string* strsensorid) {
  if (strsensorid != NULL) {
    
  } else {
    
  }
  strsensorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensorid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorID)
}

// string strSensorType = 4;
inline void QuerySensorAlarmRecordsReq::clear_strsensortype() {
  strsensortype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmRecordsReq::strsensortype() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
  return strsensortype_.GetNoArena();
}
inline void QuerySensorAlarmRecordsReq::set_strsensortype(const ::std::string& value) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
}
#if LANG_CXX11
inline void QuerySensorAlarmRecordsReq::set_strsensortype(::std::string&& value) {
  
  strsensortype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
}
#endif
inline void QuerySensorAlarmRecordsReq::set_strsensortype(const char* value) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
}
inline void QuerySensorAlarmRecordsReq::set_strsensortype(const char* value, size_t size) {
  
  strsensortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
}
inline ::std::string* QuerySensorAlarmRecordsReq::mutable_strsensortype() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
  return strsensortype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmRecordsReq::release_strsensortype() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
  
  return strsensortype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmRecordsReq::set_allocated_strsensortype(::std::string* strsensortype) {
  if (strsensortype != NULL) {
    
  } else {
    
  }
  strsensortype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsensortype);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strSensorType)
}

// uint32 uiRecover = 5;
inline void QuerySensorAlarmRecordsReq::clear_uirecover() {
  uirecover_ = 0u;
}
inline ::google::protobuf::uint32 QuerySensorAlarmRecordsReq::uirecover() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.uiRecover)
  return uirecover_;
}
inline void QuerySensorAlarmRecordsReq::set_uirecover(::google::protobuf::uint32 value) {
  
  uirecover_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.uiRecover)
}

// string strBeginDate = 6;
inline void QuerySensorAlarmRecordsReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmRecordsReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QuerySensorAlarmRecordsReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
}
#if LANG_CXX11
inline void QuerySensorAlarmRecordsReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
}
#endif
inline void QuerySensorAlarmRecordsReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
}
inline void QuerySensorAlarmRecordsReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
}
inline ::std::string* QuerySensorAlarmRecordsReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmRecordsReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmRecordsReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strBeginDate)
}

// string strEndDate = 7;
inline void QuerySensorAlarmRecordsReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuerySensorAlarmRecordsReq::strenddate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QuerySensorAlarmRecordsReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
}
#if LANG_CXX11
inline void QuerySensorAlarmRecordsReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
}
#endif
inline void QuerySensorAlarmRecordsReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
}
inline void QuerySensorAlarmRecordsReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
}
inline ::std::string* QuerySensorAlarmRecordsReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuerySensorAlarmRecordsReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuerySensorAlarmRecordsReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.strEndDate)
}

// uint32 uiBeginIndex = 8;
inline void QuerySensorAlarmRecordsReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QuerySensorAlarmRecordsReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.uiBeginIndex)
  return uibeginindex_;
}
inline void QuerySensorAlarmRecordsReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq.uiBeginIndex)
}

// -------------------------------------------------------------------

// SensorAlarmRecord

// .CustomerFlow.Interactive.Message.Sensor sensorInfo = 1;
inline bool SensorAlarmRecord::has_sensorinfo() const {
  return this != internal_default_instance() && sensorinfo_ != NULL;
}
inline void SensorAlarmRecord::clear_sensorinfo() {
  if (GetArenaNoVirtual() == NULL && sensorinfo_ != NULL) delete sensorinfo_;
  sensorinfo_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Sensor& SensorAlarmRecord::sensorinfo() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SensorAlarmRecord.sensorInfo)
  return sensorinfo_ != NULL ? *sensorinfo_
                         : *::CustomerFlow::Interactive::Message::Sensor::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Sensor* SensorAlarmRecord::mutable_sensorinfo() {
  
  if (sensorinfo_ == NULL) {
    sensorinfo_ = new ::CustomerFlow::Interactive::Message::Sensor;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SensorAlarmRecord.sensorInfo)
  return sensorinfo_;
}
inline ::CustomerFlow::Interactive::Message::Sensor* SensorAlarmRecord::release_sensorinfo() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SensorAlarmRecord.sensorInfo)
  
  ::CustomerFlow::Interactive::Message::Sensor* temp = sensorinfo_;
  sensorinfo_ = NULL;
  return temp;
}
inline void SensorAlarmRecord::set_allocated_sensorinfo(::CustomerFlow::Interactive::Message::Sensor* sensorinfo) {
  delete sensorinfo_;
  sensorinfo_ = sensorinfo;
  if (sensorinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SensorAlarmRecord.sensorInfo)
}

// uint32 uiRecover = 2;
inline void SensorAlarmRecord::clear_uirecover() {
  uirecover_ = 0u;
}
inline ::google::protobuf::uint32 SensorAlarmRecord::uirecover() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SensorAlarmRecord.uiRecover)
  return uirecover_;
}
inline void SensorAlarmRecord::set_uirecover(::google::protobuf::uint32 value) {
  
  uirecover_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SensorAlarmRecord.uiRecover)
}

// string strFileID = 3;
inline void SensorAlarmRecord::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SensorAlarmRecord::strfileid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
  return strfileid_.GetNoArena();
}
inline void SensorAlarmRecord::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
}
#if LANG_CXX11
inline void SensorAlarmRecord::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
}
#endif
inline void SensorAlarmRecord::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
}
inline void SensorAlarmRecord::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
}
inline ::std::string* SensorAlarmRecord::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SensorAlarmRecord::release_strfileid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SensorAlarmRecord::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SensorAlarmRecord.strFileID)
}

// string strRecordID = 4;
inline void SensorAlarmRecord::clear_strrecordid() {
  strrecordid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SensorAlarmRecord::strrecordid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
  return strrecordid_.GetNoArena();
}
inline void SensorAlarmRecord::set_strrecordid(const ::std::string& value) {
  
  strrecordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
}
#if LANG_CXX11
inline void SensorAlarmRecord::set_strrecordid(::std::string&& value) {
  
  strrecordid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
}
#endif
inline void SensorAlarmRecord::set_strrecordid(const char* value) {
  
  strrecordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
}
inline void SensorAlarmRecord::set_strrecordid(const char* value, size_t size) {
  
  strrecordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
}
inline ::std::string* SensorAlarmRecord::mutable_strrecordid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
  return strrecordid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SensorAlarmRecord::release_strrecordid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
  
  return strrecordid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SensorAlarmRecord::set_allocated_strrecordid(::std::string* strrecordid) {
  if (strrecordid != NULL) {
    
  } else {
    
  }
  strrecordid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strrecordid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.SensorAlarmRecord.strRecordID)
}

// -------------------------------------------------------------------

// QuerySensorAlarmRecordsRsp

// repeated .CustomerFlow.Interactive.Message.SensorAlarmRecord sard = 1;
inline int QuerySensorAlarmRecordsRsp::sard_size() const {
  return sard_.size();
}
inline void QuerySensorAlarmRecordsRsp::clear_sard() {
  sard_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::SensorAlarmRecord& QuerySensorAlarmRecordsRsp::sard(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp.sard)
  return sard_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::SensorAlarmRecord* QuerySensorAlarmRecordsRsp::mutable_sard(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp.sard)
  return sard_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::SensorAlarmRecord* QuerySensorAlarmRecordsRsp::add_sard() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp.sard)
  return sard_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SensorAlarmRecord >*
QuerySensorAlarmRecordsRsp::mutable_sard() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp.sard)
  return &sard_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::SensorAlarmRecord >&
QuerySensorAlarmRecordsRsp::sard() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp.sard)
  return sard_;
}

// -------------------------------------------------------------------

// Permission

// uint32 uiFuncID = 1;
inline void Permission::clear_uifuncid() {
  uifuncid_ = 0u;
}
inline ::google::protobuf::uint32 Permission::uifuncid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Permission.uiFuncID)
  return uifuncid_;
}
inline void Permission::set_uifuncid(::google::protobuf::uint32 value) {
  
  uifuncid_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Permission.uiFuncID)
}

// string strAccess = 2;
inline void Permission::clear_straccess() {
  straccess_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Permission::straccess() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Permission.strAccess)
  return straccess_.GetNoArena();
}
inline void Permission::set_straccess(const ::std::string& value) {
  
  straccess_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Permission.strAccess)
}
#if LANG_CXX11
inline void Permission::set_straccess(::std::string&& value) {
  
  straccess_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Permission.strAccess)
}
#endif
inline void Permission::set_straccess(const char* value) {
  
  straccess_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Permission.strAccess)
}
inline void Permission::set_straccess(const char* value, size_t size) {
  
  straccess_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Permission.strAccess)
}
inline ::std::string* Permission::mutable_straccess() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Permission.strAccess)
  return straccess_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Permission::release_straccess() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Permission.strAccess)
  
  return straccess_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Permission::set_allocated_straccess(::std::string* straccess) {
  if (straccess != NULL) {
    
  } else {
    
  }
  straccess_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccess);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Permission.strAccess)
}

// string strExtend = 3;
inline void Permission::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Permission::strextend() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Permission.strExtend)
  return strextend_.GetNoArena();
}
inline void Permission::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Permission.strExtend)
}
#if LANG_CXX11
inline void Permission::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Permission.strExtend)
}
#endif
inline void Permission::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Permission.strExtend)
}
inline void Permission::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Permission.strExtend)
}
inline ::std::string* Permission::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Permission.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Permission::release_strextend() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Permission.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Permission::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Permission.strExtend)
}

// -------------------------------------------------------------------

// Role

// string strRoleID = 1;
inline void Role::clear_strroleid() {
  strroleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Role::strroleid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Role.strRoleID)
  return strroleid_.GetNoArena();
}
inline void Role::set_strroleid(const ::std::string& value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Role.strRoleID)
}
#if LANG_CXX11
inline void Role::set_strroleid(::std::string&& value) {
  
  strroleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Role.strRoleID)
}
#endif
inline void Role::set_strroleid(const char* value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Role.strRoleID)
}
inline void Role::set_strroleid(const char* value, size_t size) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Role.strRoleID)
}
inline ::std::string* Role::mutable_strroleid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Role.strRoleID)
  return strroleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_strroleid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Role.strRoleID)
  
  return strroleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_strroleid(::std::string* strroleid) {
  if (strroleid != NULL) {
    
  } else {
    
  }
  strroleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strroleid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Role.strRoleID)
}

// uint32 uiState = 2;
inline void Role::clear_uistate() {
  uistate_ = 0u;
}
inline ::google::protobuf::uint32 Role::uistate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Role.uiState)
  return uistate_;
}
inline void Role::set_uistate(::google::protobuf::uint32 value) {
  
  uistate_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Role.uiState)
}

// string strCreateDate = 3;
inline void Role::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Role::strcreatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Role.strCreateDate)
  return strcreatedate_.GetNoArena();
}
inline void Role::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Role.strCreateDate)
}
#if LANG_CXX11
inline void Role::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Role.strCreateDate)
}
#endif
inline void Role::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Role.strCreateDate)
}
inline void Role::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Role.strCreateDate)
}
inline ::std::string* Role::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Role.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Role.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Role.strCreateDate)
}

// string strUpdateDate = 4;
inline void Role::clear_strupdatedate() {
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Role::strupdatedate() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Role.strUpdateDate)
  return strupdatedate_.GetNoArena();
}
inline void Role::set_strupdatedate(const ::std::string& value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Role.strUpdateDate)
}
#if LANG_CXX11
inline void Role::set_strupdatedate(::std::string&& value) {
  
  strupdatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Role.strUpdateDate)
}
#endif
inline void Role::set_strupdatedate(const char* value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Role.strUpdateDate)
}
inline void Role::set_strupdatedate(const char* value, size_t size) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Role.strUpdateDate)
}
inline ::std::string* Role::mutable_strupdatedate() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Role.strUpdateDate)
  return strupdatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_strupdatedate() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Role.strUpdateDate)
  
  return strupdatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_strupdatedate(::std::string* strupdatedate) {
  if (strupdatedate != NULL) {
    
  } else {
    
  }
  strupdatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatedate);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Role.strUpdateDate)
}

// repeated .CustomerFlow.Interactive.Message.Permission pmlist = 5;
inline int Role::pmlist_size() const {
  return pmlist_.size();
}
inline void Role::clear_pmlist() {
  pmlist_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Permission& Role::pmlist(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Role.pmlist)
  return pmlist_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Permission* Role::mutable_pmlist(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Role.pmlist)
  return pmlist_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Permission* Role::add_pmlist() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.Role.pmlist)
  return pmlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Permission >*
Role::mutable_pmlist() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.Role.pmlist)
  return &pmlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Permission >&
Role::pmlist() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.Role.pmlist)
  return pmlist_;
}

// -------------------------------------------------------------------

// AddRoleReq

// string strUserID = 1;
inline void AddRoleReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRoleReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
  return struserid_.GetNoArena();
}
inline void AddRoleReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
}
#if LANG_CXX11
inline void AddRoleReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
}
#endif
inline void AddRoleReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
}
inline void AddRoleReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
}
inline ::std::string* AddRoleReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRoleReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRoleReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRoleReq.strUserID)
}

// string strRoleIDNew = 2;
inline void AddRoleReq::clear_strroleidnew() {
  strroleidnew_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRoleReq::strroleidnew() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
  return strroleidnew_.GetNoArena();
}
inline void AddRoleReq::set_strroleidnew(const ::std::string& value) {
  
  strroleidnew_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
}
#if LANG_CXX11
inline void AddRoleReq::set_strroleidnew(::std::string&& value) {
  
  strroleidnew_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
}
#endif
inline void AddRoleReq::set_strroleidnew(const char* value) {
  
  strroleidnew_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
}
inline void AddRoleReq::set_strroleidnew(const char* value, size_t size) {
  
  strroleidnew_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
}
inline ::std::string* AddRoleReq::mutable_strroleidnew() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
  return strroleidnew_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRoleReq::release_strroleidnew() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
  
  return strroleidnew_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRoleReq::set_allocated_strroleidnew(::std::string* strroleidnew) {
  if (strroleidnew != NULL) {
    
  } else {
    
  }
  strroleidnew_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strroleidnew);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDNew)
}

// string strRoleIDOld = 3;
inline void AddRoleReq::clear_strroleidold() {
  strroleidold_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRoleReq::strroleidold() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
  return strroleidold_.GetNoArena();
}
inline void AddRoleReq::set_strroleidold(const ::std::string& value) {
  
  strroleidold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
}
#if LANG_CXX11
inline void AddRoleReq::set_strroleidold(::std::string&& value) {
  
  strroleidold_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
}
#endif
inline void AddRoleReq::set_strroleidold(const char* value) {
  
  strroleidold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
}
inline void AddRoleReq::set_strroleidold(const char* value, size_t size) {
  
  strroleidold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
}
inline ::std::string* AddRoleReq::mutable_strroleidold() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
  return strroleidold_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRoleReq::release_strroleidold() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
  
  return strroleidold_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRoleReq::set_allocated_strroleidold(::std::string* strroleidold) {
  if (strroleidold != NULL) {
    
  } else {
    
  }
  strroleidold_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strroleidold);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRoleReq.strRoleIDOld)
}

// -------------------------------------------------------------------

// AddRoleRsp

// string strValue = 1;
inline void AddRoleRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRoleRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void AddRoleRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
}
#if LANG_CXX11
inline void AddRoleRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
}
#endif
inline void AddRoleRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
}
inline void AddRoleRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
}
inline ::std::string* AddRoleRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRoleRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRoleRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.AddRoleRsp.strValue)
}

// -------------------------------------------------------------------

// RemoveRoleReq

// string strUserID = 2;
inline void RemoveRoleReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveRoleReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
  return struserid_.GetNoArena();
}
inline void RemoveRoleReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
}
#if LANG_CXX11
inline void RemoveRoleReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
}
#endif
inline void RemoveRoleReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
}
inline void RemoveRoleReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
}
inline ::std::string* RemoveRoleReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRoleReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRoleReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveRoleReq.strUserID)
}

// string strRoleID = 3;
inline void RemoveRoleReq::clear_strroleid() {
  strroleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveRoleReq::strroleid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
  return strroleid_.GetNoArena();
}
inline void RemoveRoleReq::set_strroleid(const ::std::string& value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
}
#if LANG_CXX11
inline void RemoveRoleReq::set_strroleid(::std::string&& value) {
  
  strroleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
}
#endif
inline void RemoveRoleReq::set_strroleid(const char* value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
}
inline void RemoveRoleReq::set_strroleid(const char* value, size_t size) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
}
inline ::std::string* RemoveRoleReq::mutable_strroleid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
  return strroleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRoleReq::release_strroleid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
  
  return strroleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRoleReq::set_allocated_strroleid(::std::string* strroleid) {
  if (strroleid != NULL) {
    
  } else {
    
  }
  strroleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strroleid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveRoleReq.strRoleID)
}

// -------------------------------------------------------------------

// RemoveRoleRsp

// string strValue = 1;
inline void RemoveRoleRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveRoleRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void RemoveRoleRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
}
#if LANG_CXX11
inline void RemoveRoleRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
}
#endif
inline void RemoveRoleRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
}
inline void RemoveRoleRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
}
inline ::std::string* RemoveRoleRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRoleRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRoleRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.RemoveRoleRsp.strValue)
}

// -------------------------------------------------------------------

// ModifyRoleReq

// string strUserID = 1;
inline void ModifyRoleReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyRoleReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyRoleReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
}
#if LANG_CXX11
inline void ModifyRoleReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
}
#endif
inline void ModifyRoleReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
}
inline void ModifyRoleReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
}
inline ::std::string* ModifyRoleReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyRoleReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyRoleReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRoleReq.strUserID)
}

// .CustomerFlow.Interactive.Message.Role role = 2;
inline bool ModifyRoleReq::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline void ModifyRoleReq::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) delete role_;
  role_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Role& ModifyRoleReq::role() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRoleReq.role)
  return role_ != NULL ? *role_
                         : *::CustomerFlow::Interactive::Message::Role::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Role* ModifyRoleReq::mutable_role() {
  
  if (role_ == NULL) {
    role_ = new ::CustomerFlow::Interactive::Message::Role;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRoleReq.role)
  return role_;
}
inline ::CustomerFlow::Interactive::Message::Role* ModifyRoleReq::release_role() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRoleReq.role)
  
  ::CustomerFlow::Interactive::Message::Role* temp = role_;
  role_ = NULL;
  return temp;
}
inline void ModifyRoleReq::set_allocated_role(::CustomerFlow::Interactive::Message::Role* role) {
  delete role_;
  role_ = role;
  if (role) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRoleReq.role)
}

// -------------------------------------------------------------------

// ModifyRoleRsp

// string strValue = 1;
inline void ModifyRoleRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyRoleRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyRoleRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
}
#if LANG_CXX11
inline void ModifyRoleRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
}
#endif
inline void ModifyRoleRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
}
inline void ModifyRoleRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
}
inline ::std::string* ModifyRoleRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyRoleRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyRoleRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.ModifyRoleRsp.strValue)
}

// -------------------------------------------------------------------

// QueryRoleReq

// string strUserID = 1;
inline void QueryRoleReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRoleReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryRoleReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
}
#if LANG_CXX11
inline void QueryRoleReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
}
#endif
inline void QueryRoleReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
}
inline void QueryRoleReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
}
inline ::std::string* QueryRoleReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRoleReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRoleReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRoleReq.strUserID)
}

// string strRoleID = 2;
inline void QueryRoleReq::clear_strroleid() {
  strroleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRoleReq::strroleid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
  return strroleid_.GetNoArena();
}
inline void QueryRoleReq::set_strroleid(const ::std::string& value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
}
#if LANG_CXX11
inline void QueryRoleReq::set_strroleid(::std::string&& value) {
  
  strroleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
}
#endif
inline void QueryRoleReq::set_strroleid(const char* value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
}
inline void QueryRoleReq::set_strroleid(const char* value, size_t size) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
}
inline ::std::string* QueryRoleReq::mutable_strroleid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
  return strroleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRoleReq::release_strroleid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
  
  return strroleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRoleReq::set_allocated_strroleid(::std::string* strroleid) {
  if (strroleid != NULL) {
    
  } else {
    
  }
  strroleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strroleid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRoleReq.strRoleID)
}

// -------------------------------------------------------------------

// QueryRoleRsp

// .CustomerFlow.Interactive.Message.Role role = 1;
inline bool QueryRoleRsp::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline void QueryRoleRsp::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) delete role_;
  role_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Role& QueryRoleRsp::role() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryRoleRsp.role)
  return role_ != NULL ? *role_
                         : *::CustomerFlow::Interactive::Message::Role::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Role* QueryRoleRsp::mutable_role() {
  
  if (role_ == NULL) {
    role_ = new ::CustomerFlow::Interactive::Message::Role;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryRoleRsp.role)
  return role_;
}
inline ::CustomerFlow::Interactive::Message::Role* QueryRoleRsp::release_role() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryRoleRsp.role)
  
  ::CustomerFlow::Interactive::Message::Role* temp = role_;
  role_ = NULL;
  return temp;
}
inline void QueryRoleRsp::set_allocated_role(::CustomerFlow::Interactive::Message::Role* role) {
  delete role_;
  role_ = role;
  if (role) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryRoleRsp.role)
}

// -------------------------------------------------------------------

// QueryAllRoleReq

// string strUserID = 1;
inline void QueryAllRoleReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAllRoleReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryAllRoleReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
}
#if LANG_CXX11
inline void QueryAllRoleReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
}
#endif
inline void QueryAllRoleReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
}
inline void QueryAllRoleReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
}
inline ::std::string* QueryAllRoleReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAllRoleReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAllRoleReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.QueryAllRoleReq.strUserID)
}

// -------------------------------------------------------------------

// QueryAllRoleRsp

// repeated .CustomerFlow.Interactive.Message.Role rolelist = 1;
inline int QueryAllRoleRsp::rolelist_size() const {
  return rolelist_.size();
}
inline void QueryAllRoleRsp::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::CustomerFlow::Interactive::Message::Role& QueryAllRoleRsp::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.QueryAllRoleRsp.rolelist)
  return rolelist_.Get(index);
}
inline ::CustomerFlow::Interactive::Message::Role* QueryAllRoleRsp::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.QueryAllRoleRsp.rolelist)
  return rolelist_.Mutable(index);
}
inline ::CustomerFlow::Interactive::Message::Role* QueryAllRoleRsp::add_rolelist() {
  // @@protoc_insertion_point(field_add:CustomerFlow.Interactive.Message.QueryAllRoleRsp.rolelist)
  return rolelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Role >*
QueryAllRoleRsp::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:CustomerFlow.Interactive.Message.QueryAllRoleRsp.rolelist)
  return &rolelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CustomerFlow::Interactive::Message::Role >&
QueryAllRoleRsp::rolelist() const {
  // @@protoc_insertion_point(field_list:CustomerFlow.Interactive.Message.QueryAllRoleRsp.rolelist)
  return rolelist_;
}

// -------------------------------------------------------------------

// UserBindRoleReq

// string strUserID = 1;
inline void UserBindRoleReq::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBindRoleReq::struserid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
  return struserid_.GetNoArena();
}
inline void UserBindRoleReq::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
}
#if LANG_CXX11
inline void UserBindRoleReq::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
}
#endif
inline void UserBindRoleReq::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
}
inline void UserBindRoleReq::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
}
inline ::std::string* UserBindRoleReq::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBindRoleReq::release_struserid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBindRoleReq::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBindRoleReq.strUserID)
}

// string strRoleID = 2;
inline void UserBindRoleReq::clear_strroleid() {
  strroleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBindRoleReq::strroleid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
  return strroleid_.GetNoArena();
}
inline void UserBindRoleReq::set_strroleid(const ::std::string& value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
}
#if LANG_CXX11
inline void UserBindRoleReq::set_strroleid(::std::string&& value) {
  
  strroleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
}
#endif
inline void UserBindRoleReq::set_strroleid(const char* value) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
}
inline void UserBindRoleReq::set_strroleid(const char* value, size_t size) {
  
  strroleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
}
inline ::std::string* UserBindRoleReq::mutable_strroleid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
  return strroleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBindRoleReq::release_strroleid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
  
  return strroleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBindRoleReq::set_allocated_strroleid(::std::string* strroleid) {
  if (strroleid != NULL) {
    
  } else {
    
  }
  strroleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strroleid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBindRoleReq.strRoleID)
}

// -------------------------------------------------------------------

// UserBindRoleRsp

// string strValue = 1;
inline void UserBindRoleRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBindRoleRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
  return strvalue_.GetNoArena();
}
inline void UserBindRoleRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
}
#if LANG_CXX11
inline void UserBindRoleRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
}
#endif
inline void UserBindRoleRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
}
inline void UserBindRoleRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
}
inline ::std::string* UserBindRoleRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBindRoleRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBindRoleRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.UserBindRoleRsp.strValue)
}

// -------------------------------------------------------------------

// Request

// .CustomerFlow.Interactive.Message.CustomerFlowPreHandleReq CustomerFlowPreHandleReq_Value = 10;
inline bool Request::has_customerflowprehandlereq_value() const {
  return this != internal_default_instance() && customerflowprehandlereq_value_ != NULL;
}
inline void Request::clear_customerflowprehandlereq_value() {
  if (GetArenaNoVirtual() == NULL && customerflowprehandlereq_value_ != NULL) delete customerflowprehandlereq_value_;
  customerflowprehandlereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq& Request::customerflowprehandlereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.CustomerFlowPreHandleReq_Value)
  return customerflowprehandlereq_value_ != NULL ? *customerflowprehandlereq_value_
                         : *::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* Request::mutable_customerflowprehandlereq_value() {
  
  if (customerflowprehandlereq_value_ == NULL) {
    customerflowprehandlereq_value_ = new ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.CustomerFlowPreHandleReq_Value)
  return customerflowprehandlereq_value_;
}
inline ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* Request::release_customerflowprehandlereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.CustomerFlowPreHandleReq_Value)
  
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* temp = customerflowprehandlereq_value_;
  customerflowprehandlereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_customerflowprehandlereq_value(::CustomerFlow::Interactive::Message::CustomerFlowPreHandleReq* customerflowprehandlereq_value) {
  delete customerflowprehandlereq_value_;
  customerflowprehandlereq_value_ = customerflowprehandlereq_value;
  if (customerflowprehandlereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.CustomerFlowPreHandleReq_Value)
}

// .CustomerFlow.Interactive.Message.ShakehandReq ShakehandReq_Value = 50;
inline bool Request::has_shakehandreq_value() const {
  return this != internal_default_instance() && shakehandreq_value_ != NULL;
}
inline void Request::clear_shakehandreq_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_value_ != NULL) delete shakehandreq_value_;
  shakehandreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ShakehandReq& Request::shakehandreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ShakehandReq_Value)
  return shakehandreq_value_ != NULL ? *shakehandreq_value_
                         : *::CustomerFlow::Interactive::Message::ShakehandReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ShakehandReq* Request::mutable_shakehandreq_value() {
  
  if (shakehandreq_value_ == NULL) {
    shakehandreq_value_ = new ::CustomerFlow::Interactive::Message::ShakehandReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ShakehandReq_Value)
  return shakehandreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ShakehandReq* Request::release_shakehandreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ShakehandReq_Value)
  
  ::CustomerFlow::Interactive::Message::ShakehandReq* temp = shakehandreq_value_;
  shakehandreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_shakehandreq_value(::CustomerFlow::Interactive::Message::ShakehandReq* shakehandreq_value) {
  delete shakehandreq_value_;
  shakehandreq_value_ = shakehandreq_value;
  if (shakehandreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ShakehandReq_Value)
}

// .CustomerFlow.Interactive.Message.AddGroupReq AddGroupReq_Value = 100;
inline bool Request::has_addgroupreq_value() const {
  return this != internal_default_instance() && addgroupreq_value_ != NULL;
}
inline void Request::clear_addgroupreq_value() {
  if (GetArenaNoVirtual() == NULL && addgroupreq_value_ != NULL) delete addgroupreq_value_;
  addgroupreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddGroupReq& Request::addgroupreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddGroupReq_Value)
  return addgroupreq_value_ != NULL ? *addgroupreq_value_
                         : *::CustomerFlow::Interactive::Message::AddGroupReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddGroupReq* Request::mutable_addgroupreq_value() {
  
  if (addgroupreq_value_ == NULL) {
    addgroupreq_value_ = new ::CustomerFlow::Interactive::Message::AddGroupReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddGroupReq_Value)
  return addgroupreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddGroupReq* Request::release_addgroupreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddGroupReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddGroupReq* temp = addgroupreq_value_;
  addgroupreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addgroupreq_value(::CustomerFlow::Interactive::Message::AddGroupReq* addgroupreq_value) {
  delete addgroupreq_value_;
  addgroupreq_value_ = addgroupreq_value;
  if (addgroupreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddGroupReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteGroupReq DeleteGroupReq_Value = 110;
inline bool Request::has_deletegroupreq_value() const {
  return this != internal_default_instance() && deletegroupreq_value_ != NULL;
}
inline void Request::clear_deletegroupreq_value() {
  if (GetArenaNoVirtual() == NULL && deletegroupreq_value_ != NULL) delete deletegroupreq_value_;
  deletegroupreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteGroupReq& Request::deletegroupreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteGroupReq_Value)
  return deletegroupreq_value_ != NULL ? *deletegroupreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteGroupReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteGroupReq* Request::mutable_deletegroupreq_value() {
  
  if (deletegroupreq_value_ == NULL) {
    deletegroupreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteGroupReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteGroupReq_Value)
  return deletegroupreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteGroupReq* Request::release_deletegroupreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteGroupReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteGroupReq* temp = deletegroupreq_value_;
  deletegroupreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletegroupreq_value(::CustomerFlow::Interactive::Message::DeleteGroupReq* deletegroupreq_value) {
  delete deletegroupreq_value_;
  deletegroupreq_value_ = deletegroupreq_value;
  if (deletegroupreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteGroupReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyGroupReq ModifyGroupReq_Value = 120;
inline bool Request::has_modifygroupreq_value() const {
  return this != internal_default_instance() && modifygroupreq_value_ != NULL;
}
inline void Request::clear_modifygroupreq_value() {
  if (GetArenaNoVirtual() == NULL && modifygroupreq_value_ != NULL) delete modifygroupreq_value_;
  modifygroupreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyGroupReq& Request::modifygroupreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyGroupReq_Value)
  return modifygroupreq_value_ != NULL ? *modifygroupreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyGroupReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyGroupReq* Request::mutable_modifygroupreq_value() {
  
  if (modifygroupreq_value_ == NULL) {
    modifygroupreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyGroupReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyGroupReq_Value)
  return modifygroupreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyGroupReq* Request::release_modifygroupreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyGroupReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyGroupReq* temp = modifygroupreq_value_;
  modifygroupreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifygroupreq_value(::CustomerFlow::Interactive::Message::ModifyGroupReq* modifygroupreq_value) {
  delete modifygroupreq_value_;
  modifygroupreq_value_ = modifygroupreq_value;
  if (modifygroupreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyGroupReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryGroupInfoReq QueryGroupInfoReq_Value = 130;
inline bool Request::has_querygroupinforeq_value() const {
  return this != internal_default_instance() && querygroupinforeq_value_ != NULL;
}
inline void Request::clear_querygroupinforeq_value() {
  if (GetArenaNoVirtual() == NULL && querygroupinforeq_value_ != NULL) delete querygroupinforeq_value_;
  querygroupinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryGroupInfoReq& Request::querygroupinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryGroupInfoReq_Value)
  return querygroupinforeq_value_ != NULL ? *querygroupinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryGroupInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryGroupInfoReq* Request::mutable_querygroupinforeq_value() {
  
  if (querygroupinforeq_value_ == NULL) {
    querygroupinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryGroupInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryGroupInfoReq_Value)
  return querygroupinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryGroupInfoReq* Request::release_querygroupinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryGroupInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryGroupInfoReq* temp = querygroupinforeq_value_;
  querygroupinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querygroupinforeq_value(::CustomerFlow::Interactive::Message::QueryGroupInfoReq* querygroupinforeq_value) {
  delete querygroupinforeq_value_;
  querygroupinforeq_value_ = querygroupinforeq_value;
  if (querygroupinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryGroupInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllGroupReq QueryAllGroupReq_Value = 140;
inline bool Request::has_queryallgroupreq_value() const {
  return this != internal_default_instance() && queryallgroupreq_value_ != NULL;
}
inline void Request::clear_queryallgroupreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallgroupreq_value_ != NULL) delete queryallgroupreq_value_;
  queryallgroupreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllGroupReq& Request::queryallgroupreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllGroupReq_Value)
  return queryallgroupreq_value_ != NULL ? *queryallgroupreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllGroupReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllGroupReq* Request::mutable_queryallgroupreq_value() {
  
  if (queryallgroupreq_value_ == NULL) {
    queryallgroupreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllGroupReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllGroupReq_Value)
  return queryallgroupreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllGroupReq* Request::release_queryallgroupreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllGroupReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllGroupReq* temp = queryallgroupreq_value_;
  queryallgroupreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallgroupreq_value(::CustomerFlow::Interactive::Message::QueryAllGroupReq* queryallgroupreq_value) {
  delete queryallgroupreq_value_;
  queryallgroupreq_value_ = queryallgroupreq_value;
  if (queryallgroupreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllGroupReq_Value)
}

// .CustomerFlow.Interactive.Message.AddStoreReq AddStoreReq_Value = 150;
inline bool Request::has_addstorereq_value() const {
  return this != internal_default_instance() && addstorereq_value_ != NULL;
}
inline void Request::clear_addstorereq_value() {
  if (GetArenaNoVirtual() == NULL && addstorereq_value_ != NULL) delete addstorereq_value_;
  addstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddStoreReq& Request::addstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddStoreReq_Value)
  return addstorereq_value_ != NULL ? *addstorereq_value_
                         : *::CustomerFlow::Interactive::Message::AddStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddStoreReq* Request::mutable_addstorereq_value() {
  
  if (addstorereq_value_ == NULL) {
    addstorereq_value_ = new ::CustomerFlow::Interactive::Message::AddStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddStoreReq_Value)
  return addstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddStoreReq* Request::release_addstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddStoreReq* temp = addstorereq_value_;
  addstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addstorereq_value(::CustomerFlow::Interactive::Message::AddStoreReq* addstorereq_value) {
  delete addstorereq_value_;
  addstorereq_value_ = addstorereq_value;
  if (addstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteStoreReq DeleteStoreReq_Value = 160;
inline bool Request::has_deletestorereq_value() const {
  return this != internal_default_instance() && deletestorereq_value_ != NULL;
}
inline void Request::clear_deletestorereq_value() {
  if (GetArenaNoVirtual() == NULL && deletestorereq_value_ != NULL) delete deletestorereq_value_;
  deletestorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteStoreReq& Request::deletestorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteStoreReq_Value)
  return deletestorereq_value_ != NULL ? *deletestorereq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreReq* Request::mutable_deletestorereq_value() {
  
  if (deletestorereq_value_ == NULL) {
    deletestorereq_value_ = new ::CustomerFlow::Interactive::Message::DeleteStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteStoreReq_Value)
  return deletestorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreReq* Request::release_deletestorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteStoreReq* temp = deletestorereq_value_;
  deletestorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletestorereq_value(::CustomerFlow::Interactive::Message::DeleteStoreReq* deletestorereq_value) {
  delete deletestorereq_value_;
  deletestorereq_value_ = deletestorereq_value;
  if (deletestorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyStoreReq ModifyStoreReq_Value = 170;
inline bool Request::has_modifystorereq_value() const {
  return this != internal_default_instance() && modifystorereq_value_ != NULL;
}
inline void Request::clear_modifystorereq_value() {
  if (GetArenaNoVirtual() == NULL && modifystorereq_value_ != NULL) delete modifystorereq_value_;
  modifystorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyStoreReq& Request::modifystorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyStoreReq_Value)
  return modifystorereq_value_ != NULL ? *modifystorereq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreReq* Request::mutable_modifystorereq_value() {
  
  if (modifystorereq_value_ == NULL) {
    modifystorereq_value_ = new ::CustomerFlow::Interactive::Message::ModifyStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyStoreReq_Value)
  return modifystorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreReq* Request::release_modifystorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyStoreReq* temp = modifystorereq_value_;
  modifystorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifystorereq_value(::CustomerFlow::Interactive::Message::ModifyStoreReq* modifystorereq_value) {
  delete modifystorereq_value_;
  modifystorereq_value_ = modifystorereq_value;
  if (modifystorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreInfoReq QueryStoreInfoReq_Value = 180;
inline bool Request::has_querystoreinforeq_value() const {
  return this != internal_default_instance() && querystoreinforeq_value_ != NULL;
}
inline void Request::clear_querystoreinforeq_value() {
  if (GetArenaNoVirtual() == NULL && querystoreinforeq_value_ != NULL) delete querystoreinforeq_value_;
  querystoreinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreInfoReq& Request::querystoreinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryStoreInfoReq_Value)
  return querystoreinforeq_value_ != NULL ? *querystoreinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreInfoReq* Request::mutable_querystoreinforeq_value() {
  
  if (querystoreinforeq_value_ == NULL) {
    querystoreinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryStoreInfoReq_Value)
  return querystoreinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreInfoReq* Request::release_querystoreinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryStoreInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreInfoReq* temp = querystoreinforeq_value_;
  querystoreinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querystoreinforeq_value(::CustomerFlow::Interactive::Message::QueryStoreInfoReq* querystoreinforeq_value) {
  delete querystoreinforeq_value_;
  querystoreinforeq_value_ = querystoreinforeq_value;
  if (querystoreinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryStoreInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllStoreReq QueryAllStoreReq_Value = 190;
inline bool Request::has_queryallstorereq_value() const {
  return this != internal_default_instance() && queryallstorereq_value_ != NULL;
}
inline void Request::clear_queryallstorereq_value() {
  if (GetArenaNoVirtual() == NULL && queryallstorereq_value_ != NULL) delete queryallstorereq_value_;
  queryallstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllStoreReq& Request::queryallstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllStoreReq_Value)
  return queryallstorereq_value_ != NULL ? *queryallstorereq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreReq* Request::mutable_queryallstorereq_value() {
  
  if (queryallstorereq_value_ == NULL) {
    queryallstorereq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllStoreReq_Value)
  return queryallstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreReq* Request::release_queryallstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllStoreReq* temp = queryallstorereq_value_;
  queryallstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallstorereq_value(::CustomerFlow::Interactive::Message::QueryAllStoreReq* queryallstorereq_value) {
  delete queryallstorereq_value_;
  queryallstorereq_value_ = queryallstorereq_value;
  if (queryallstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.AddEntranceReq AddEntranceReq_Value = 200;
inline bool Request::has_addentrancereq_value() const {
  return this != internal_default_instance() && addentrancereq_value_ != NULL;
}
inline void Request::clear_addentrancereq_value() {
  if (GetArenaNoVirtual() == NULL && addentrancereq_value_ != NULL) delete addentrancereq_value_;
  addentrancereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEntranceReq& Request::addentrancereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddEntranceReq_Value)
  return addentrancereq_value_ != NULL ? *addentrancereq_value_
                         : *::CustomerFlow::Interactive::Message::AddEntranceReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEntranceReq* Request::mutable_addentrancereq_value() {
  
  if (addentrancereq_value_ == NULL) {
    addentrancereq_value_ = new ::CustomerFlow::Interactive::Message::AddEntranceReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddEntranceReq_Value)
  return addentrancereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEntranceReq* Request::release_addentrancereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddEntranceReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddEntranceReq* temp = addentrancereq_value_;
  addentrancereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addentrancereq_value(::CustomerFlow::Interactive::Message::AddEntranceReq* addentrancereq_value) {
  delete addentrancereq_value_;
  addentrancereq_value_ = addentrancereq_value;
  if (addentrancereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddEntranceReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEntranceReq DeleteEntranceReq_Value = 210;
inline bool Request::has_deleteentrancereq_value() const {
  return this != internal_default_instance() && deleteentrancereq_value_ != NULL;
}
inline void Request::clear_deleteentrancereq_value() {
  if (GetArenaNoVirtual() == NULL && deleteentrancereq_value_ != NULL) delete deleteentrancereq_value_;
  deleteentrancereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEntranceReq& Request::deleteentrancereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteEntranceReq_Value)
  return deleteentrancereq_value_ != NULL ? *deleteentrancereq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEntranceReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceReq* Request::mutable_deleteentrancereq_value() {
  
  if (deleteentrancereq_value_ == NULL) {
    deleteentrancereq_value_ = new ::CustomerFlow::Interactive::Message::DeleteEntranceReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteEntranceReq_Value)
  return deleteentrancereq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceReq* Request::release_deleteentrancereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteEntranceReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEntranceReq* temp = deleteentrancereq_value_;
  deleteentrancereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteentrancereq_value(::CustomerFlow::Interactive::Message::DeleteEntranceReq* deleteentrancereq_value) {
  delete deleteentrancereq_value_;
  deleteentrancereq_value_ = deleteentrancereq_value;
  if (deleteentrancereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteEntranceReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyEntranceReq ModifyEntranceReq_Value = 220;
inline bool Request::has_modifyentrancereq_value() const {
  return this != internal_default_instance() && modifyentrancereq_value_ != NULL;
}
inline void Request::clear_modifyentrancereq_value() {
  if (GetArenaNoVirtual() == NULL && modifyentrancereq_value_ != NULL) delete modifyentrancereq_value_;
  modifyentrancereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyEntranceReq& Request::modifyentrancereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyEntranceReq_Value)
  return modifyentrancereq_value_ != NULL ? *modifyentrancereq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyEntranceReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyEntranceReq* Request::mutable_modifyentrancereq_value() {
  
  if (modifyentrancereq_value_ == NULL) {
    modifyentrancereq_value_ = new ::CustomerFlow::Interactive::Message::ModifyEntranceReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyEntranceReq_Value)
  return modifyentrancereq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyEntranceReq* Request::release_modifyentrancereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyEntranceReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyEntranceReq* temp = modifyentrancereq_value_;
  modifyentrancereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyentrancereq_value(::CustomerFlow::Interactive::Message::ModifyEntranceReq* modifyentrancereq_value) {
  delete modifyentrancereq_value_;
  modifyentrancereq_value_ = modifyentrancereq_value;
  if (modifyentrancereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyEntranceReq_Value)
}

// .CustomerFlow.Interactive.Message.AddEntranceDeviceReq AddEntranceDeviceReq_Value = 230;
inline bool Request::has_addentrancedevicereq_value() const {
  return this != internal_default_instance() && addentrancedevicereq_value_ != NULL;
}
inline void Request::clear_addentrancedevicereq_value() {
  if (GetArenaNoVirtual() == NULL && addentrancedevicereq_value_ != NULL) delete addentrancedevicereq_value_;
  addentrancedevicereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq& Request::addentrancedevicereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddEntranceDeviceReq_Value)
  return addentrancedevicereq_value_ != NULL ? *addentrancedevicereq_value_
                         : *::CustomerFlow::Interactive::Message::AddEntranceDeviceReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* Request::mutable_addentrancedevicereq_value() {
  
  if (addentrancedevicereq_value_ == NULL) {
    addentrancedevicereq_value_ = new ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddEntranceDeviceReq_Value)
  return addentrancedevicereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* Request::release_addentrancedevicereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddEntranceDeviceReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* temp = addentrancedevicereq_value_;
  addentrancedevicereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addentrancedevicereq_value(::CustomerFlow::Interactive::Message::AddEntranceDeviceReq* addentrancedevicereq_value) {
  delete addentrancedevicereq_value_;
  addentrancedevicereq_value_ = addentrancedevicereq_value;
  if (addentrancedevicereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddEntranceDeviceReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEntranceDeviceReq DeleteEntranceDeviceReq_Value = 240;
inline bool Request::has_deleteentrancedevicereq_value() const {
  return this != internal_default_instance() && deleteentrancedevicereq_value_ != NULL;
}
inline void Request::clear_deleteentrancedevicereq_value() {
  if (GetArenaNoVirtual() == NULL && deleteentrancedevicereq_value_ != NULL) delete deleteentrancedevicereq_value_;
  deleteentrancedevicereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq& Request::deleteentrancedevicereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteEntranceDeviceReq_Value)
  return deleteentrancedevicereq_value_ != NULL ? *deleteentrancedevicereq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* Request::mutable_deleteentrancedevicereq_value() {
  
  if (deleteentrancedevicereq_value_ == NULL) {
    deleteentrancedevicereq_value_ = new ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteEntranceDeviceReq_Value)
  return deleteentrancedevicereq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* Request::release_deleteentrancedevicereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteEntranceDeviceReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* temp = deleteentrancedevicereq_value_;
  deleteentrancedevicereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteentrancedevicereq_value(::CustomerFlow::Interactive::Message::DeleteEntranceDeviceReq* deleteentrancedevicereq_value) {
  delete deleteentrancedevicereq_value_;
  deleteentrancedevicereq_value_ = deleteentrancedevicereq_value;
  if (deleteentrancedevicereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteEntranceDeviceReq_Value)
}

// .CustomerFlow.Interactive.Message.AddEventReq AddEventReq_Value = 300;
inline bool Request::has_addeventreq_value() const {
  return this != internal_default_instance() && addeventreq_value_ != NULL;
}
inline void Request::clear_addeventreq_value() {
  if (GetArenaNoVirtual() == NULL && addeventreq_value_ != NULL) delete addeventreq_value_;
  addeventreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEventReq& Request::addeventreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddEventReq_Value)
  return addeventreq_value_ != NULL ? *addeventreq_value_
                         : *::CustomerFlow::Interactive::Message::AddEventReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEventReq* Request::mutable_addeventreq_value() {
  
  if (addeventreq_value_ == NULL) {
    addeventreq_value_ = new ::CustomerFlow::Interactive::Message::AddEventReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddEventReq_Value)
  return addeventreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEventReq* Request::release_addeventreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddEventReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddEventReq* temp = addeventreq_value_;
  addeventreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addeventreq_value(::CustomerFlow::Interactive::Message::AddEventReq* addeventreq_value) {
  delete addeventreq_value_;
  addeventreq_value_ = addeventreq_value;
  if (addeventreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddEventReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEventReq DeleteEventReq_Value = 310;
inline bool Request::has_deleteeventreq_value() const {
  return this != internal_default_instance() && deleteeventreq_value_ != NULL;
}
inline void Request::clear_deleteeventreq_value() {
  if (GetArenaNoVirtual() == NULL && deleteeventreq_value_ != NULL) delete deleteeventreq_value_;
  deleteeventreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEventReq& Request::deleteeventreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteEventReq_Value)
  return deleteeventreq_value_ != NULL ? *deleteeventreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEventReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEventReq* Request::mutable_deleteeventreq_value() {
  
  if (deleteeventreq_value_ == NULL) {
    deleteeventreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteEventReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteEventReq_Value)
  return deleteeventreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEventReq* Request::release_deleteeventreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteEventReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEventReq* temp = deleteeventreq_value_;
  deleteeventreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteeventreq_value(::CustomerFlow::Interactive::Message::DeleteEventReq* deleteeventreq_value) {
  delete deleteeventreq_value_;
  deleteeventreq_value_ = deleteeventreq_value;
  if (deleteeventreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteEventReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyEventReq ModifyEventReq_Value = 320;
inline bool Request::has_modifyeventreq_value() const {
  return this != internal_default_instance() && modifyeventreq_value_ != NULL;
}
inline void Request::clear_modifyeventreq_value() {
  if (GetArenaNoVirtual() == NULL && modifyeventreq_value_ != NULL) delete modifyeventreq_value_;
  modifyeventreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyEventReq& Request::modifyeventreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyEventReq_Value)
  return modifyeventreq_value_ != NULL ? *modifyeventreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyEventReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyEventReq* Request::mutable_modifyeventreq_value() {
  
  if (modifyeventreq_value_ == NULL) {
    modifyeventreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyEventReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyEventReq_Value)
  return modifyeventreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyEventReq* Request::release_modifyeventreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyEventReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyEventReq* temp = modifyeventreq_value_;
  modifyeventreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyeventreq_value(::CustomerFlow::Interactive::Message::ModifyEventReq* modifyeventreq_value) {
  delete modifyeventreq_value_;
  modifyeventreq_value_ = modifyeventreq_value;
  if (modifyeventreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyEventReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryEventInfoReq QueryEventInfoReq_Value = 330;
inline bool Request::has_queryeventinforeq_value() const {
  return this != internal_default_instance() && queryeventinforeq_value_ != NULL;
}
inline void Request::clear_queryeventinforeq_value() {
  if (GetArenaNoVirtual() == NULL && queryeventinforeq_value_ != NULL) delete queryeventinforeq_value_;
  queryeventinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryEventInfoReq& Request::queryeventinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryEventInfoReq_Value)
  return queryeventinforeq_value_ != NULL ? *queryeventinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryEventInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryEventInfoReq* Request::mutable_queryeventinforeq_value() {
  
  if (queryeventinforeq_value_ == NULL) {
    queryeventinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryEventInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryEventInfoReq_Value)
  return queryeventinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryEventInfoReq* Request::release_queryeventinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryEventInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryEventInfoReq* temp = queryeventinforeq_value_;
  queryeventinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryeventinforeq_value(::CustomerFlow::Interactive::Message::QueryEventInfoReq* queryeventinforeq_value) {
  delete queryeventinforeq_value_;
  queryeventinforeq_value_ = queryeventinforeq_value;
  if (queryeventinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryEventInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllEventReq QueryAllEventReq_Value = 340;
inline bool Request::has_queryalleventreq_value() const {
  return this != internal_default_instance() && queryalleventreq_value_ != NULL;
}
inline void Request::clear_queryalleventreq_value() {
  if (GetArenaNoVirtual() == NULL && queryalleventreq_value_ != NULL) delete queryalleventreq_value_;
  queryalleventreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllEventReq& Request::queryalleventreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllEventReq_Value)
  return queryalleventreq_value_ != NULL ? *queryalleventreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllEventReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllEventReq* Request::mutable_queryalleventreq_value() {
  
  if (queryalleventreq_value_ == NULL) {
    queryalleventreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllEventReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllEventReq_Value)
  return queryalleventreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllEventReq* Request::release_queryalleventreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllEventReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllEventReq* temp = queryalleventreq_value_;
  queryalleventreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryalleventreq_value(::CustomerFlow::Interactive::Message::QueryAllEventReq* queryalleventreq_value) {
  delete queryalleventreq_value_;
  queryalleventreq_value_ = queryalleventreq_value;
  if (queryalleventreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllEventReq_Value)
}

// .CustomerFlow.Interactive.Message.AddSmartGuardStoreReq AddSmartGuardStoreReq_Value = 350;
inline bool Request::has_addsmartguardstorereq_value() const {
  return this != internal_default_instance() && addsmartguardstorereq_value_ != NULL;
}
inline void Request::clear_addsmartguardstorereq_value() {
  if (GetArenaNoVirtual() == NULL && addsmartguardstorereq_value_ != NULL) delete addsmartguardstorereq_value_;
  addsmartguardstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq& Request::addsmartguardstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddSmartGuardStoreReq_Value)
  return addsmartguardstorereq_value_ != NULL ? *addsmartguardstorereq_value_
                         : *::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* Request::mutable_addsmartguardstorereq_value() {
  
  if (addsmartguardstorereq_value_ == NULL) {
    addsmartguardstorereq_value_ = new ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddSmartGuardStoreReq_Value)
  return addsmartguardstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* Request::release_addsmartguardstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddSmartGuardStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* temp = addsmartguardstorereq_value_;
  addsmartguardstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addsmartguardstorereq_value(::CustomerFlow::Interactive::Message::AddSmartGuardStoreReq* addsmartguardstorereq_value) {
  delete addsmartguardstorereq_value_;
  addsmartguardstorereq_value_ = addsmartguardstorereq_value;
  if (addsmartguardstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddSmartGuardStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteSmartGuardStoreReq DeleteSmartGuardStoreReq_Value = 360;
inline bool Request::has_deletesmartguardstorereq_value() const {
  return this != internal_default_instance() && deletesmartguardstorereq_value_ != NULL;
}
inline void Request::clear_deletesmartguardstorereq_value() {
  if (GetArenaNoVirtual() == NULL && deletesmartguardstorereq_value_ != NULL) delete deletesmartguardstorereq_value_;
  deletesmartguardstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq& Request::deletesmartguardstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteSmartGuardStoreReq_Value)
  return deletesmartguardstorereq_value_ != NULL ? *deletesmartguardstorereq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* Request::mutable_deletesmartguardstorereq_value() {
  
  if (deletesmartguardstorereq_value_ == NULL) {
    deletesmartguardstorereq_value_ = new ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteSmartGuardStoreReq_Value)
  return deletesmartguardstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* Request::release_deletesmartguardstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteSmartGuardStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* temp = deletesmartguardstorereq_value_;
  deletesmartguardstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletesmartguardstorereq_value(::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreReq* deletesmartguardstorereq_value) {
  delete deletesmartguardstorereq_value_;
  deletesmartguardstorereq_value_ = deletesmartguardstorereq_value;
  if (deletesmartguardstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteSmartGuardStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifySmartGuardStoreReq ModifySmartGuardStoreReq_Value = 370;
inline bool Request::has_modifysmartguardstorereq_value() const {
  return this != internal_default_instance() && modifysmartguardstorereq_value_ != NULL;
}
inline void Request::clear_modifysmartguardstorereq_value() {
  if (GetArenaNoVirtual() == NULL && modifysmartguardstorereq_value_ != NULL) delete modifysmartguardstorereq_value_;
  modifysmartguardstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq& Request::modifysmartguardstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifySmartGuardStoreReq_Value)
  return modifysmartguardstorereq_value_ != NULL ? *modifysmartguardstorereq_value_
                         : *::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* Request::mutable_modifysmartguardstorereq_value() {
  
  if (modifysmartguardstorereq_value_ == NULL) {
    modifysmartguardstorereq_value_ = new ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifySmartGuardStoreReq_Value)
  return modifysmartguardstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* Request::release_modifysmartguardstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifySmartGuardStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* temp = modifysmartguardstorereq_value_;
  modifysmartguardstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifysmartguardstorereq_value(::CustomerFlow::Interactive::Message::ModifySmartGuardStoreReq* modifysmartguardstorereq_value) {
  delete modifysmartguardstorereq_value_;
  modifysmartguardstorereq_value_ = modifysmartguardstorereq_value;
  if (modifysmartguardstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifySmartGuardStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoReq QuerySmartGuardStoreInfoReq_Value = 380;
inline bool Request::has_querysmartguardstoreinforeq_value() const {
  return this != internal_default_instance() && querysmartguardstoreinforeq_value_ != NULL;
}
inline void Request::clear_querysmartguardstoreinforeq_value() {
  if (GetArenaNoVirtual() == NULL && querysmartguardstoreinforeq_value_ != NULL) delete querysmartguardstoreinforeq_value_;
  querysmartguardstoreinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq& Request::querysmartguardstoreinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QuerySmartGuardStoreInfoReq_Value)
  return querysmartguardstoreinforeq_value_ != NULL ? *querysmartguardstoreinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* Request::mutable_querysmartguardstoreinforeq_value() {
  
  if (querysmartguardstoreinforeq_value_ == NULL) {
    querysmartguardstoreinforeq_value_ = new ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QuerySmartGuardStoreInfoReq_Value)
  return querysmartguardstoreinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* Request::release_querysmartguardstoreinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QuerySmartGuardStoreInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* temp = querysmartguardstoreinforeq_value_;
  querysmartguardstoreinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querysmartguardstoreinforeq_value(::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoReq* querysmartguardstoreinforeq_value) {
  delete querysmartguardstoreinforeq_value_;
  querysmartguardstoreinforeq_value_ = querysmartguardstoreinforeq_value;
  if (querysmartguardstoreinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QuerySmartGuardStoreInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreReq QueryAllSmartGuardStoreReq_Value = 390;
inline bool Request::has_queryallsmartguardstorereq_value() const {
  return this != internal_default_instance() && queryallsmartguardstorereq_value_ != NULL;
}
inline void Request::clear_queryallsmartguardstorereq_value() {
  if (GetArenaNoVirtual() == NULL && queryallsmartguardstorereq_value_ != NULL) delete queryallsmartguardstorereq_value_;
  queryallsmartguardstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq& Request::queryallsmartguardstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllSmartGuardStoreReq_Value)
  return queryallsmartguardstorereq_value_ != NULL ? *queryallsmartguardstorereq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* Request::mutable_queryallsmartguardstorereq_value() {
  
  if (queryallsmartguardstorereq_value_ == NULL) {
    queryallsmartguardstorereq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllSmartGuardStoreReq_Value)
  return queryallsmartguardstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* Request::release_queryallsmartguardstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllSmartGuardStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* temp = queryallsmartguardstorereq_value_;
  queryallsmartguardstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallsmartguardstorereq_value(::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreReq* queryallsmartguardstorereq_value) {
  delete queryallsmartguardstorereq_value_;
  queryallsmartguardstorereq_value_ = queryallsmartguardstorereq_value;
  if (queryallsmartguardstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllSmartGuardStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.AddRegularPatrolReq AddRegularPatrolReq_Value = 400;
inline bool Request::has_addregularpatrolreq_value() const {
  return this != internal_default_instance() && addregularpatrolreq_value_ != NULL;
}
inline void Request::clear_addregularpatrolreq_value() {
  if (GetArenaNoVirtual() == NULL && addregularpatrolreq_value_ != NULL) delete addregularpatrolreq_value_;
  addregularpatrolreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddRegularPatrolReq& Request::addregularpatrolreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddRegularPatrolReq_Value)
  return addregularpatrolreq_value_ != NULL ? *addregularpatrolreq_value_
                         : *::CustomerFlow::Interactive::Message::AddRegularPatrolReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddRegularPatrolReq* Request::mutable_addregularpatrolreq_value() {
  
  if (addregularpatrolreq_value_ == NULL) {
    addregularpatrolreq_value_ = new ::CustomerFlow::Interactive::Message::AddRegularPatrolReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddRegularPatrolReq_Value)
  return addregularpatrolreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddRegularPatrolReq* Request::release_addregularpatrolreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddRegularPatrolReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddRegularPatrolReq* temp = addregularpatrolreq_value_;
  addregularpatrolreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addregularpatrolreq_value(::CustomerFlow::Interactive::Message::AddRegularPatrolReq* addregularpatrolreq_value) {
  delete addregularpatrolreq_value_;
  addregularpatrolreq_value_ = addregularpatrolreq_value;
  if (addregularpatrolreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddRegularPatrolReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteRegularPatrolReq DeleteRegularPatrolReq_Value = 410;
inline bool Request::has_deleteregularpatrolreq_value() const {
  return this != internal_default_instance() && deleteregularpatrolreq_value_ != NULL;
}
inline void Request::clear_deleteregularpatrolreq_value() {
  if (GetArenaNoVirtual() == NULL && deleteregularpatrolreq_value_ != NULL) delete deleteregularpatrolreq_value_;
  deleteregularpatrolreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq& Request::deleteregularpatrolreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteRegularPatrolReq_Value)
  return deleteregularpatrolreq_value_ != NULL ? *deleteregularpatrolreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* Request::mutable_deleteregularpatrolreq_value() {
  
  if (deleteregularpatrolreq_value_ == NULL) {
    deleteregularpatrolreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteRegularPatrolReq_Value)
  return deleteregularpatrolreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* Request::release_deleteregularpatrolreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteRegularPatrolReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* temp = deleteregularpatrolreq_value_;
  deleteregularpatrolreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteregularpatrolreq_value(::CustomerFlow::Interactive::Message::DeleteRegularPatrolReq* deleteregularpatrolreq_value) {
  delete deleteregularpatrolreq_value_;
  deleteregularpatrolreq_value_ = deleteregularpatrolreq_value;
  if (deleteregularpatrolreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteRegularPatrolReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyRegularPatrolReq ModifyRegularPatrolReq_Value = 420;
inline bool Request::has_modifyregularpatrolreq_value() const {
  return this != internal_default_instance() && modifyregularpatrolreq_value_ != NULL;
}
inline void Request::clear_modifyregularpatrolreq_value() {
  if (GetArenaNoVirtual() == NULL && modifyregularpatrolreq_value_ != NULL) delete modifyregularpatrolreq_value_;
  modifyregularpatrolreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq& Request::modifyregularpatrolreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyRegularPatrolReq_Value)
  return modifyregularpatrolreq_value_ != NULL ? *modifyregularpatrolreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* Request::mutable_modifyregularpatrolreq_value() {
  
  if (modifyregularpatrolreq_value_ == NULL) {
    modifyregularpatrolreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyRegularPatrolReq_Value)
  return modifyregularpatrolreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* Request::release_modifyregularpatrolreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyRegularPatrolReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* temp = modifyregularpatrolreq_value_;
  modifyregularpatrolreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyregularpatrolreq_value(::CustomerFlow::Interactive::Message::ModifyRegularPatrolReq* modifyregularpatrolreq_value) {
  delete modifyregularpatrolreq_value_;
  modifyregularpatrolreq_value_ = modifyregularpatrolreq_value;
  if (modifyregularpatrolreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyRegularPatrolReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryRegularPatrolInfoReq QueryRegularPatrolInfoReq_Value = 430;
inline bool Request::has_queryregularpatrolinforeq_value() const {
  return this != internal_default_instance() && queryregularpatrolinforeq_value_ != NULL;
}
inline void Request::clear_queryregularpatrolinforeq_value() {
  if (GetArenaNoVirtual() == NULL && queryregularpatrolinforeq_value_ != NULL) delete queryregularpatrolinforeq_value_;
  queryregularpatrolinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq& Request::queryregularpatrolinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryRegularPatrolInfoReq_Value)
  return queryregularpatrolinforeq_value_ != NULL ? *queryregularpatrolinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* Request::mutable_queryregularpatrolinforeq_value() {
  
  if (queryregularpatrolinforeq_value_ == NULL) {
    queryregularpatrolinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryRegularPatrolInfoReq_Value)
  return queryregularpatrolinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* Request::release_queryregularpatrolinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryRegularPatrolInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* temp = queryregularpatrolinforeq_value_;
  queryregularpatrolinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryregularpatrolinforeq_value(::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoReq* queryregularpatrolinforeq_value) {
  delete queryregularpatrolinforeq_value_;
  queryregularpatrolinforeq_value_ = queryregularpatrolinforeq_value;
  if (queryregularpatrolinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryRegularPatrolInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllRegularPatrolReq QueryAllRegularPatrolReq_Value = 440;
inline bool Request::has_queryallregularpatrolreq_value() const {
  return this != internal_default_instance() && queryallregularpatrolreq_value_ != NULL;
}
inline void Request::clear_queryallregularpatrolreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallregularpatrolreq_value_ != NULL) delete queryallregularpatrolreq_value_;
  queryallregularpatrolreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq& Request::queryallregularpatrolreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllRegularPatrolReq_Value)
  return queryallregularpatrolreq_value_ != NULL ? *queryallregularpatrolreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* Request::mutable_queryallregularpatrolreq_value() {
  
  if (queryallregularpatrolreq_value_ == NULL) {
    queryallregularpatrolreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllRegularPatrolReq_Value)
  return queryallregularpatrolreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* Request::release_queryallregularpatrolreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllRegularPatrolReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* temp = queryallregularpatrolreq_value_;
  queryallregularpatrolreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallregularpatrolreq_value(::CustomerFlow::Interactive::Message::QueryAllRegularPatrolReq* queryallregularpatrolreq_value) {
  delete queryallregularpatrolreq_value_;
  queryallregularpatrolreq_value_ = queryallregularpatrolreq_value;
  if (queryallregularpatrolreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllRegularPatrolReq_Value)
}

// .CustomerFlow.Interactive.Message.UserJoinStoreReq UserJoinStoreReq_Value = 500;
inline bool Request::has_userjoinstorereq_value() const {
  return this != internal_default_instance() && userjoinstorereq_value_ != NULL;
}
inline void Request::clear_userjoinstorereq_value() {
  if (GetArenaNoVirtual() == NULL && userjoinstorereq_value_ != NULL) delete userjoinstorereq_value_;
  userjoinstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UserJoinStoreReq& Request::userjoinstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.UserJoinStoreReq_Value)
  return userjoinstorereq_value_ != NULL ? *userjoinstorereq_value_
                         : *::CustomerFlow::Interactive::Message::UserJoinStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UserJoinStoreReq* Request::mutable_userjoinstorereq_value() {
  
  if (userjoinstorereq_value_ == NULL) {
    userjoinstorereq_value_ = new ::CustomerFlow::Interactive::Message::UserJoinStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.UserJoinStoreReq_Value)
  return userjoinstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::UserJoinStoreReq* Request::release_userjoinstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.UserJoinStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::UserJoinStoreReq* temp = userjoinstorereq_value_;
  userjoinstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_userjoinstorereq_value(::CustomerFlow::Interactive::Message::UserJoinStoreReq* userjoinstorereq_value) {
  delete userjoinstorereq_value_;
  userjoinstorereq_value_ = userjoinstorereq_value;
  if (userjoinstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.UserJoinStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.UserQuitStoreReq UserQuitStoreReq_Value = 510;
inline bool Request::has_userquitstorereq_value() const {
  return this != internal_default_instance() && userquitstorereq_value_ != NULL;
}
inline void Request::clear_userquitstorereq_value() {
  if (GetArenaNoVirtual() == NULL && userquitstorereq_value_ != NULL) delete userquitstorereq_value_;
  userquitstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UserQuitStoreReq& Request::userquitstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.UserQuitStoreReq_Value)
  return userquitstorereq_value_ != NULL ? *userquitstorereq_value_
                         : *::CustomerFlow::Interactive::Message::UserQuitStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UserQuitStoreReq* Request::mutable_userquitstorereq_value() {
  
  if (userquitstorereq_value_ == NULL) {
    userquitstorereq_value_ = new ::CustomerFlow::Interactive::Message::UserQuitStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.UserQuitStoreReq_Value)
  return userquitstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::UserQuitStoreReq* Request::release_userquitstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.UserQuitStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::UserQuitStoreReq* temp = userquitstorereq_value_;
  userquitstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_userquitstorereq_value(::CustomerFlow::Interactive::Message::UserQuitStoreReq* userquitstorereq_value) {
  delete userquitstorereq_value_;
  userquitstorereq_value_ = userquitstorereq_value;
  if (userquitstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.UserQuitStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreAllUserReq QueryStoreAllUserReq_Value = 520;
inline bool Request::has_querystorealluserreq_value() const {
  return this != internal_default_instance() && querystorealluserreq_value_ != NULL;
}
inline void Request::clear_querystorealluserreq_value() {
  if (GetArenaNoVirtual() == NULL && querystorealluserreq_value_ != NULL) delete querystorealluserreq_value_;
  querystorealluserreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq& Request::querystorealluserreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryStoreAllUserReq_Value)
  return querystorealluserreq_value_ != NULL ? *querystorealluserreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreAllUserReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* Request::mutable_querystorealluserreq_value() {
  
  if (querystorealluserreq_value_ == NULL) {
    querystorealluserreq_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryStoreAllUserReq_Value)
  return querystorealluserreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* Request::release_querystorealluserreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryStoreAllUserReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* temp = querystorealluserreq_value_;
  querystorealluserreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querystorealluserreq_value(::CustomerFlow::Interactive::Message::QueryStoreAllUserReq* querystorealluserreq_value) {
  delete querystorealluserreq_value_;
  querystorealluserreq_value_ = querystorealluserreq_value;
  if (querystorealluserreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryStoreAllUserReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryCompanyAllUserReq QueryCompanyAllUserReq_Value = 530;
inline bool Request::has_querycompanyalluserreq_value() const {
  return this != internal_default_instance() && querycompanyalluserreq_value_ != NULL;
}
inline void Request::clear_querycompanyalluserreq_value() {
  if (GetArenaNoVirtual() == NULL && querycompanyalluserreq_value_ != NULL) delete querycompanyalluserreq_value_;
  querycompanyalluserreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq& Request::querycompanyalluserreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryCompanyAllUserReq_Value)
  return querycompanyalluserreq_value_ != NULL ? *querycompanyalluserreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* Request::mutable_querycompanyalluserreq_value() {
  
  if (querycompanyalluserreq_value_ == NULL) {
    querycompanyalluserreq_value_ = new ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryCompanyAllUserReq_Value)
  return querycompanyalluserreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* Request::release_querycompanyalluserreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryCompanyAllUserReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* temp = querycompanyalluserreq_value_;
  querycompanyalluserreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querycompanyalluserreq_value(::CustomerFlow::Interactive::Message::QueryCompanyAllUserReq* querycompanyalluserreq_value) {
  delete querycompanyalluserreq_value_;
  querycompanyalluserreq_value_ = querycompanyalluserreq_value;
  if (querycompanyalluserreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryCompanyAllUserReq_Value)
}

// .CustomerFlow.Interactive.Message.AddVIPCustomerReq AddVIPCustomerReq_Value = 800;
inline bool Request::has_addvipcustomerreq_value() const {
  return this != internal_default_instance() && addvipcustomerreq_value_ != NULL;
}
inline void Request::clear_addvipcustomerreq_value() {
  if (GetArenaNoVirtual() == NULL && addvipcustomerreq_value_ != NULL) delete addvipcustomerreq_value_;
  addvipcustomerreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddVIPCustomerReq& Request::addvipcustomerreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddVIPCustomerReq_Value)
  return addvipcustomerreq_value_ != NULL ? *addvipcustomerreq_value_
                         : *::CustomerFlow::Interactive::Message::AddVIPCustomerReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddVIPCustomerReq* Request::mutable_addvipcustomerreq_value() {
  
  if (addvipcustomerreq_value_ == NULL) {
    addvipcustomerreq_value_ = new ::CustomerFlow::Interactive::Message::AddVIPCustomerReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddVIPCustomerReq_Value)
  return addvipcustomerreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddVIPCustomerReq* Request::release_addvipcustomerreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddVIPCustomerReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddVIPCustomerReq* temp = addvipcustomerreq_value_;
  addvipcustomerreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addvipcustomerreq_value(::CustomerFlow::Interactive::Message::AddVIPCustomerReq* addvipcustomerreq_value) {
  delete addvipcustomerreq_value_;
  addvipcustomerreq_value_ = addvipcustomerreq_value;
  if (addvipcustomerreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddVIPCustomerReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteVIPCustomerReq DeleteVIPCustomerReq_Value = 810;
inline bool Request::has_deletevipcustomerreq_value() const {
  return this != internal_default_instance() && deletevipcustomerreq_value_ != NULL;
}
inline void Request::clear_deletevipcustomerreq_value() {
  if (GetArenaNoVirtual() == NULL && deletevipcustomerreq_value_ != NULL) delete deletevipcustomerreq_value_;
  deletevipcustomerreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq& Request::deletevipcustomerreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteVIPCustomerReq_Value)
  return deletevipcustomerreq_value_ != NULL ? *deletevipcustomerreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* Request::mutable_deletevipcustomerreq_value() {
  
  if (deletevipcustomerreq_value_ == NULL) {
    deletevipcustomerreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteVIPCustomerReq_Value)
  return deletevipcustomerreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* Request::release_deletevipcustomerreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteVIPCustomerReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* temp = deletevipcustomerreq_value_;
  deletevipcustomerreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletevipcustomerreq_value(::CustomerFlow::Interactive::Message::DeleteVIPCustomerReq* deletevipcustomerreq_value) {
  delete deletevipcustomerreq_value_;
  deletevipcustomerreq_value_ = deletevipcustomerreq_value;
  if (deletevipcustomerreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteVIPCustomerReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyVIPCustomerReq ModifyVIPCustomerReq_Value = 820;
inline bool Request::has_modifyvipcustomerreq_value() const {
  return this != internal_default_instance() && modifyvipcustomerreq_value_ != NULL;
}
inline void Request::clear_modifyvipcustomerreq_value() {
  if (GetArenaNoVirtual() == NULL && modifyvipcustomerreq_value_ != NULL) delete modifyvipcustomerreq_value_;
  modifyvipcustomerreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq& Request::modifyvipcustomerreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyVIPCustomerReq_Value)
  return modifyvipcustomerreq_value_ != NULL ? *modifyvipcustomerreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* Request::mutable_modifyvipcustomerreq_value() {
  
  if (modifyvipcustomerreq_value_ == NULL) {
    modifyvipcustomerreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyVIPCustomerReq_Value)
  return modifyvipcustomerreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* Request::release_modifyvipcustomerreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyVIPCustomerReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* temp = modifyvipcustomerreq_value_;
  modifyvipcustomerreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyvipcustomerreq_value(::CustomerFlow::Interactive::Message::ModifyVIPCustomerReq* modifyvipcustomerreq_value) {
  delete modifyvipcustomerreq_value_;
  modifyvipcustomerreq_value_ = modifyvipcustomerreq_value;
  if (modifyvipcustomerreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyVIPCustomerReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryVIPCustomerInfoReq QueryVIPCustomerInfoReq_Value = 830;
inline bool Request::has_queryvipcustomerinforeq_value() const {
  return this != internal_default_instance() && queryvipcustomerinforeq_value_ != NULL;
}
inline void Request::clear_queryvipcustomerinforeq_value() {
  if (GetArenaNoVirtual() == NULL && queryvipcustomerinforeq_value_ != NULL) delete queryvipcustomerinforeq_value_;
  queryvipcustomerinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq& Request::queryvipcustomerinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryVIPCustomerInfoReq_Value)
  return queryvipcustomerinforeq_value_ != NULL ? *queryvipcustomerinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* Request::mutable_queryvipcustomerinforeq_value() {
  
  if (queryvipcustomerinforeq_value_ == NULL) {
    queryvipcustomerinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryVIPCustomerInfoReq_Value)
  return queryvipcustomerinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* Request::release_queryvipcustomerinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryVIPCustomerInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* temp = queryvipcustomerinforeq_value_;
  queryvipcustomerinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryvipcustomerinforeq_value(::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoReq* queryvipcustomerinforeq_value) {
  delete queryvipcustomerinforeq_value_;
  queryvipcustomerinforeq_value_ = queryvipcustomerinforeq_value;
  if (queryvipcustomerinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryVIPCustomerInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllVIPCustomerReq QueryAllVIPCustomerReq_Value = 840;
inline bool Request::has_queryallvipcustomerreq_value() const {
  return this != internal_default_instance() && queryallvipcustomerreq_value_ != NULL;
}
inline void Request::clear_queryallvipcustomerreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallvipcustomerreq_value_ != NULL) delete queryallvipcustomerreq_value_;
  queryallvipcustomerreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq& Request::queryallvipcustomerreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllVIPCustomerReq_Value)
  return queryallvipcustomerreq_value_ != NULL ? *queryallvipcustomerreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* Request::mutable_queryallvipcustomerreq_value() {
  
  if (queryallvipcustomerreq_value_ == NULL) {
    queryallvipcustomerreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllVIPCustomerReq_Value)
  return queryallvipcustomerreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* Request::release_queryallvipcustomerreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllVIPCustomerReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* temp = queryallvipcustomerreq_value_;
  queryallvipcustomerreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallvipcustomerreq_value(::CustomerFlow::Interactive::Message::QueryAllVIPCustomerReq* queryallvipcustomerreq_value) {
  delete queryallvipcustomerreq_value_;
  queryallvipcustomerreq_value_ = queryallvipcustomerreq_value;
  if (queryallvipcustomerreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllVIPCustomerReq_Value)
}

// .CustomerFlow.Interactive.Message.AddVIPConsumeHistoryReq AddVIPConsumeHistoryReq_Value = 850;
inline bool Request::has_addvipconsumehistoryreq_value() const {
  return this != internal_default_instance() && addvipconsumehistoryreq_value_ != NULL;
}
inline void Request::clear_addvipconsumehistoryreq_value() {
  if (GetArenaNoVirtual() == NULL && addvipconsumehistoryreq_value_ != NULL) delete addvipconsumehistoryreq_value_;
  addvipconsumehistoryreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq& Request::addvipconsumehistoryreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddVIPConsumeHistoryReq_Value)
  return addvipconsumehistoryreq_value_ != NULL ? *addvipconsumehistoryreq_value_
                         : *::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* Request::mutable_addvipconsumehistoryreq_value() {
  
  if (addvipconsumehistoryreq_value_ == NULL) {
    addvipconsumehistoryreq_value_ = new ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddVIPConsumeHistoryReq_Value)
  return addvipconsumehistoryreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* Request::release_addvipconsumehistoryreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddVIPConsumeHistoryReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* temp = addvipconsumehistoryreq_value_;
  addvipconsumehistoryreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addvipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryReq* addvipconsumehistoryreq_value) {
  delete addvipconsumehistoryreq_value_;
  addvipconsumehistoryreq_value_ = addvipconsumehistoryreq_value;
  if (addvipconsumehistoryreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddVIPConsumeHistoryReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryReq DeleteVIPConsumeHistoryReq_Value = 860;
inline bool Request::has_deletevipconsumehistoryreq_value() const {
  return this != internal_default_instance() && deletevipconsumehistoryreq_value_ != NULL;
}
inline void Request::clear_deletevipconsumehistoryreq_value() {
  if (GetArenaNoVirtual() == NULL && deletevipconsumehistoryreq_value_ != NULL) delete deletevipconsumehistoryreq_value_;
  deletevipconsumehistoryreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq& Request::deletevipconsumehistoryreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteVIPConsumeHistoryReq_Value)
  return deletevipconsumehistoryreq_value_ != NULL ? *deletevipconsumehistoryreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* Request::mutable_deletevipconsumehistoryreq_value() {
  
  if (deletevipconsumehistoryreq_value_ == NULL) {
    deletevipconsumehistoryreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteVIPConsumeHistoryReq_Value)
  return deletevipconsumehistoryreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* Request::release_deletevipconsumehistoryreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteVIPConsumeHistoryReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* temp = deletevipconsumehistoryreq_value_;
  deletevipconsumehistoryreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletevipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryReq* deletevipconsumehistoryreq_value) {
  delete deletevipconsumehistoryreq_value_;
  deletevipconsumehistoryreq_value_ = deletevipconsumehistoryreq_value;
  if (deletevipconsumehistoryreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteVIPConsumeHistoryReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryReq ModifyVIPConsumeHistoryReq_Value = 870;
inline bool Request::has_modifyvipconsumehistoryreq_value() const {
  return this != internal_default_instance() && modifyvipconsumehistoryreq_value_ != NULL;
}
inline void Request::clear_modifyvipconsumehistoryreq_value() {
  if (GetArenaNoVirtual() == NULL && modifyvipconsumehistoryreq_value_ != NULL) delete modifyvipconsumehistoryreq_value_;
  modifyvipconsumehistoryreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq& Request::modifyvipconsumehistoryreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyVIPConsumeHistoryReq_Value)
  return modifyvipconsumehistoryreq_value_ != NULL ? *modifyvipconsumehistoryreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* Request::mutable_modifyvipconsumehistoryreq_value() {
  
  if (modifyvipconsumehistoryreq_value_ == NULL) {
    modifyvipconsumehistoryreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyVIPConsumeHistoryReq_Value)
  return modifyvipconsumehistoryreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* Request::release_modifyvipconsumehistoryreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyVIPConsumeHistoryReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* temp = modifyvipconsumehistoryreq_value_;
  modifyvipconsumehistoryreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyvipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryReq* modifyvipconsumehistoryreq_value) {
  delete modifyvipconsumehistoryreq_value_;
  modifyvipconsumehistoryreq_value_ = modifyvipconsumehistoryreq_value;
  if (modifyvipconsumehistoryreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyVIPConsumeHistoryReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryReq QueryAllVIPConsumeHistoryReq_Value = 880;
inline bool Request::has_queryallvipconsumehistoryreq_value() const {
  return this != internal_default_instance() && queryallvipconsumehistoryreq_value_ != NULL;
}
inline void Request::clear_queryallvipconsumehistoryreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallvipconsumehistoryreq_value_ != NULL) delete queryallvipconsumehistoryreq_value_;
  queryallvipconsumehistoryreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq& Request::queryallvipconsumehistoryreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllVIPConsumeHistoryReq_Value)
  return queryallvipconsumehistoryreq_value_ != NULL ? *queryallvipconsumehistoryreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* Request::mutable_queryallvipconsumehistoryreq_value() {
  
  if (queryallvipconsumehistoryreq_value_ == NULL) {
    queryallvipconsumehistoryreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllVIPConsumeHistoryReq_Value)
  return queryallvipconsumehistoryreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* Request::release_queryallvipconsumehistoryreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllVIPConsumeHistoryReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* temp = queryallvipconsumehistoryreq_value_;
  queryallvipconsumehistoryreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallvipconsumehistoryreq_value(::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryReq* queryallvipconsumehistoryreq_value) {
  delete queryallvipconsumehistoryreq_value_;
  queryallvipconsumehistoryreq_value_ = queryallvipconsumehistoryreq_value;
  if (queryallvipconsumehistoryreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllVIPConsumeHistoryReq_Value)
}

// .CustomerFlow.Interactive.Message.AddEvaluationTemplateReq AddEvaluationTemplateReq_Value = 900;
inline bool Request::has_addevaluationtemplatereq_value() const {
  return this != internal_default_instance() && addevaluationtemplatereq_value_ != NULL;
}
inline void Request::clear_addevaluationtemplatereq_value() {
  if (GetArenaNoVirtual() == NULL && addevaluationtemplatereq_value_ != NULL) delete addevaluationtemplatereq_value_;
  addevaluationtemplatereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq& Request::addevaluationtemplatereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddEvaluationTemplateReq_Value)
  return addevaluationtemplatereq_value_ != NULL ? *addevaluationtemplatereq_value_
                         : *::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* Request::mutable_addevaluationtemplatereq_value() {
  
  if (addevaluationtemplatereq_value_ == NULL) {
    addevaluationtemplatereq_value_ = new ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddEvaluationTemplateReq_Value)
  return addevaluationtemplatereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* Request::release_addevaluationtemplatereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddEvaluationTemplateReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* temp = addevaluationtemplatereq_value_;
  addevaluationtemplatereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::AddEvaluationTemplateReq* addevaluationtemplatereq_value) {
  delete addevaluationtemplatereq_value_;
  addevaluationtemplatereq_value_ = addevaluationtemplatereq_value;
  if (addevaluationtemplatereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddEvaluationTemplateReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEvaluationTemplateReq DeleteEvaluationTemplateReq_Value = 910;
inline bool Request::has_deleteevaluationtemplatereq_value() const {
  return this != internal_default_instance() && deleteevaluationtemplatereq_value_ != NULL;
}
inline void Request::clear_deleteevaluationtemplatereq_value() {
  if (GetArenaNoVirtual() == NULL && deleteevaluationtemplatereq_value_ != NULL) delete deleteevaluationtemplatereq_value_;
  deleteevaluationtemplatereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq& Request::deleteevaluationtemplatereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteEvaluationTemplateReq_Value)
  return deleteevaluationtemplatereq_value_ != NULL ? *deleteevaluationtemplatereq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* Request::mutable_deleteevaluationtemplatereq_value() {
  
  if (deleteevaluationtemplatereq_value_ == NULL) {
    deleteevaluationtemplatereq_value_ = new ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteEvaluationTemplateReq_Value)
  return deleteevaluationtemplatereq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* Request::release_deleteevaluationtemplatereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteEvaluationTemplateReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* temp = deleteevaluationtemplatereq_value_;
  deleteevaluationtemplatereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateReq* deleteevaluationtemplatereq_value) {
  delete deleteevaluationtemplatereq_value_;
  deleteevaluationtemplatereq_value_ = deleteevaluationtemplatereq_value;
  if (deleteevaluationtemplatereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteEvaluationTemplateReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyEvaluationTemplateReq ModifyEvaluationTemplateReq_Value = 920;
inline bool Request::has_modifyevaluationtemplatereq_value() const {
  return this != internal_default_instance() && modifyevaluationtemplatereq_value_ != NULL;
}
inline void Request::clear_modifyevaluationtemplatereq_value() {
  if (GetArenaNoVirtual() == NULL && modifyevaluationtemplatereq_value_ != NULL) delete modifyevaluationtemplatereq_value_;
  modifyevaluationtemplatereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq& Request::modifyevaluationtemplatereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyEvaluationTemplateReq_Value)
  return modifyevaluationtemplatereq_value_ != NULL ? *modifyevaluationtemplatereq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* Request::mutable_modifyevaluationtemplatereq_value() {
  
  if (modifyevaluationtemplatereq_value_ == NULL) {
    modifyevaluationtemplatereq_value_ = new ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyEvaluationTemplateReq_Value)
  return modifyevaluationtemplatereq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* Request::release_modifyevaluationtemplatereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyEvaluationTemplateReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* temp = modifyevaluationtemplatereq_value_;
  modifyevaluationtemplatereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateReq* modifyevaluationtemplatereq_value) {
  delete modifyevaluationtemplatereq_value_;
  modifyevaluationtemplatereq_value_ = modifyevaluationtemplatereq_value;
  if (modifyevaluationtemplatereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyEvaluationTemplateReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateReq QueryAllEvaluationTemplateReq_Value = 930;
inline bool Request::has_queryallevaluationtemplatereq_value() const {
  return this != internal_default_instance() && queryallevaluationtemplatereq_value_ != NULL;
}
inline void Request::clear_queryallevaluationtemplatereq_value() {
  if (GetArenaNoVirtual() == NULL && queryallevaluationtemplatereq_value_ != NULL) delete queryallevaluationtemplatereq_value_;
  queryallevaluationtemplatereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq& Request::queryallevaluationtemplatereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllEvaluationTemplateReq_Value)
  return queryallevaluationtemplatereq_value_ != NULL ? *queryallevaluationtemplatereq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* Request::mutable_queryallevaluationtemplatereq_value() {
  
  if (queryallevaluationtemplatereq_value_ == NULL) {
    queryallevaluationtemplatereq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllEvaluationTemplateReq_Value)
  return queryallevaluationtemplatereq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* Request::release_queryallevaluationtemplatereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllEvaluationTemplateReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* temp = queryallevaluationtemplatereq_value_;
  queryallevaluationtemplatereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallevaluationtemplatereq_value(::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateReq* queryallevaluationtemplatereq_value) {
  delete queryallevaluationtemplatereq_value_;
  queryallevaluationtemplatereq_value_ = queryallevaluationtemplatereq_value;
  if (queryallevaluationtemplatereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllEvaluationTemplateReq_Value)
}

// .CustomerFlow.Interactive.Message.AddStoreEvaluationReq AddStoreEvaluationReq_Value = 950;
inline bool Request::has_addstoreevaluationreq_value() const {
  return this != internal_default_instance() && addstoreevaluationreq_value_ != NULL;
}
inline void Request::clear_addstoreevaluationreq_value() {
  if (GetArenaNoVirtual() == NULL && addstoreevaluationreq_value_ != NULL) delete addstoreevaluationreq_value_;
  addstoreevaluationreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq& Request::addstoreevaluationreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddStoreEvaluationReq_Value)
  return addstoreevaluationreq_value_ != NULL ? *addstoreevaluationreq_value_
                         : *::CustomerFlow::Interactive::Message::AddStoreEvaluationReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* Request::mutable_addstoreevaluationreq_value() {
  
  if (addstoreevaluationreq_value_ == NULL) {
    addstoreevaluationreq_value_ = new ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddStoreEvaluationReq_Value)
  return addstoreevaluationreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* Request::release_addstoreevaluationreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddStoreEvaluationReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* temp = addstoreevaluationreq_value_;
  addstoreevaluationreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addstoreevaluationreq_value(::CustomerFlow::Interactive::Message::AddStoreEvaluationReq* addstoreevaluationreq_value) {
  delete addstoreevaluationreq_value_;
  addstoreevaluationreq_value_ = addstoreevaluationreq_value;
  if (addstoreevaluationreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddStoreEvaluationReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteStoreEvaluationReq DeleteStoreEvaluationReq_Value = 960;
inline bool Request::has_deletestoreevaluationreq_value() const {
  return this != internal_default_instance() && deletestoreevaluationreq_value_ != NULL;
}
inline void Request::clear_deletestoreevaluationreq_value() {
  if (GetArenaNoVirtual() == NULL && deletestoreevaluationreq_value_ != NULL) delete deletestoreevaluationreq_value_;
  deletestoreevaluationreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq& Request::deletestoreevaluationreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteStoreEvaluationReq_Value)
  return deletestoreevaluationreq_value_ != NULL ? *deletestoreevaluationreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* Request::mutable_deletestoreevaluationreq_value() {
  
  if (deletestoreevaluationreq_value_ == NULL) {
    deletestoreevaluationreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteStoreEvaluationReq_Value)
  return deletestoreevaluationreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* Request::release_deletestoreevaluationreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteStoreEvaluationReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* temp = deletestoreevaluationreq_value_;
  deletestoreevaluationreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletestoreevaluationreq_value(::CustomerFlow::Interactive::Message::DeleteStoreEvaluationReq* deletestoreevaluationreq_value) {
  delete deletestoreevaluationreq_value_;
  deletestoreevaluationreq_value_ = deletestoreevaluationreq_value;
  if (deletestoreevaluationreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteStoreEvaluationReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyStoreEvaluationReq ModifyStoreEvaluationReq_Value = 970;
inline bool Request::has_modifystoreevaluationreq_value() const {
  return this != internal_default_instance() && modifystoreevaluationreq_value_ != NULL;
}
inline void Request::clear_modifystoreevaluationreq_value() {
  if (GetArenaNoVirtual() == NULL && modifystoreevaluationreq_value_ != NULL) delete modifystoreevaluationreq_value_;
  modifystoreevaluationreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq& Request::modifystoreevaluationreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyStoreEvaluationReq_Value)
  return modifystoreevaluationreq_value_ != NULL ? *modifystoreevaluationreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* Request::mutable_modifystoreevaluationreq_value() {
  
  if (modifystoreevaluationreq_value_ == NULL) {
    modifystoreevaluationreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyStoreEvaluationReq_Value)
  return modifystoreevaluationreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* Request::release_modifystoreevaluationreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyStoreEvaluationReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* temp = modifystoreevaluationreq_value_;
  modifystoreevaluationreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifystoreevaluationreq_value(::CustomerFlow::Interactive::Message::ModifyStoreEvaluationReq* modifystoreevaluationreq_value) {
  delete modifystoreevaluationreq_value_;
  modifystoreevaluationreq_value_ = modifystoreevaluationreq_value;
  if (modifystoreevaluationreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyStoreEvaluationReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoReq QueryStoreEvaluationInfoReq_Value = 980;
inline bool Request::has_querystoreevaluationinforeq_value() const {
  return this != internal_default_instance() && querystoreevaluationinforeq_value_ != NULL;
}
inline void Request::clear_querystoreevaluationinforeq_value() {
  if (GetArenaNoVirtual() == NULL && querystoreevaluationinforeq_value_ != NULL) delete querystoreevaluationinforeq_value_;
  querystoreevaluationinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq& Request::querystoreevaluationinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryStoreEvaluationInfoReq_Value)
  return querystoreevaluationinforeq_value_ != NULL ? *querystoreevaluationinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* Request::mutable_querystoreevaluationinforeq_value() {
  
  if (querystoreevaluationinforeq_value_ == NULL) {
    querystoreevaluationinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryStoreEvaluationInfoReq_Value)
  return querystoreevaluationinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* Request::release_querystoreevaluationinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryStoreEvaluationInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* temp = querystoreevaluationinforeq_value_;
  querystoreevaluationinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querystoreevaluationinforeq_value(::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoReq* querystoreevaluationinforeq_value) {
  delete querystoreevaluationinforeq_value_;
  querystoreevaluationinforeq_value_ = querystoreevaluationinforeq_value;
  if (querystoreevaluationinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryStoreEvaluationInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllStoreEvaluationReq QueryAllStoreEvaluationReq_Value = 990;
inline bool Request::has_queryallstoreevaluationreq_value() const {
  return this != internal_default_instance() && queryallstoreevaluationreq_value_ != NULL;
}
inline void Request::clear_queryallstoreevaluationreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallstoreevaluationreq_value_ != NULL) delete queryallstoreevaluationreq_value_;
  queryallstoreevaluationreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq& Request::queryallstoreevaluationreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllStoreEvaluationReq_Value)
  return queryallstoreevaluationreq_value_ != NULL ? *queryallstoreevaluationreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* Request::mutable_queryallstoreevaluationreq_value() {
  
  if (queryallstoreevaluationreq_value_ == NULL) {
    queryallstoreevaluationreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllStoreEvaluationReq_Value)
  return queryallstoreevaluationreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* Request::release_queryallstoreevaluationreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllStoreEvaluationReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* temp = queryallstoreevaluationreq_value_;
  queryallstoreevaluationreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallstoreevaluationreq_value(::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationReq* queryallstoreevaluationreq_value) {
  delete queryallstoreevaluationreq_value_;
  queryallstoreevaluationreq_value_ = queryallstoreevaluationreq_value;
  if (queryallstoreevaluationreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllStoreEvaluationReq_Value)
}

// .CustomerFlow.Interactive.Message.AddRemotePatrolStoreReq AddRemotePatrolStoreReq_Value = 1000;
inline bool Request::has_addremotepatrolstorereq_value() const {
  return this != internal_default_instance() && addremotepatrolstorereq_value_ != NULL;
}
inline void Request::clear_addremotepatrolstorereq_value() {
  if (GetArenaNoVirtual() == NULL && addremotepatrolstorereq_value_ != NULL) delete addremotepatrolstorereq_value_;
  addremotepatrolstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq& Request::addremotepatrolstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddRemotePatrolStoreReq_Value)
  return addremotepatrolstorereq_value_ != NULL ? *addremotepatrolstorereq_value_
                         : *::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* Request::mutable_addremotepatrolstorereq_value() {
  
  if (addremotepatrolstorereq_value_ == NULL) {
    addremotepatrolstorereq_value_ = new ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddRemotePatrolStoreReq_Value)
  return addremotepatrolstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* Request::release_addremotepatrolstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddRemotePatrolStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* temp = addremotepatrolstorereq_value_;
  addremotepatrolstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::AddRemotePatrolStoreReq* addremotepatrolstorereq_value) {
  delete addremotepatrolstorereq_value_;
  addremotepatrolstorereq_value_ = addremotepatrolstorereq_value;
  if (addremotepatrolstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddRemotePatrolStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreReq DeleteRemotePatrolStoreReq_Value = 1010;
inline bool Request::has_deleteremotepatrolstorereq_value() const {
  return this != internal_default_instance() && deleteremotepatrolstorereq_value_ != NULL;
}
inline void Request::clear_deleteremotepatrolstorereq_value() {
  if (GetArenaNoVirtual() == NULL && deleteremotepatrolstorereq_value_ != NULL) delete deleteremotepatrolstorereq_value_;
  deleteremotepatrolstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq& Request::deleteremotepatrolstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteRemotePatrolStoreReq_Value)
  return deleteremotepatrolstorereq_value_ != NULL ? *deleteremotepatrolstorereq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* Request::mutable_deleteremotepatrolstorereq_value() {
  
  if (deleteremotepatrolstorereq_value_ == NULL) {
    deleteremotepatrolstorereq_value_ = new ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteRemotePatrolStoreReq_Value)
  return deleteremotepatrolstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* Request::release_deleteremotepatrolstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteRemotePatrolStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* temp = deleteremotepatrolstorereq_value_;
  deleteremotepatrolstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreReq* deleteremotepatrolstorereq_value) {
  delete deleteremotepatrolstorereq_value_;
  deleteremotepatrolstorereq_value_ = deleteremotepatrolstorereq_value;
  if (deleteremotepatrolstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteRemotePatrolStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreReq ModifyRemotePatrolStoreReq_Value = 1020;
inline bool Request::has_modifyremotepatrolstorereq_value() const {
  return this != internal_default_instance() && modifyremotepatrolstorereq_value_ != NULL;
}
inline void Request::clear_modifyremotepatrolstorereq_value() {
  if (GetArenaNoVirtual() == NULL && modifyremotepatrolstorereq_value_ != NULL) delete modifyremotepatrolstorereq_value_;
  modifyremotepatrolstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq& Request::modifyremotepatrolstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyRemotePatrolStoreReq_Value)
  return modifyremotepatrolstorereq_value_ != NULL ? *modifyremotepatrolstorereq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* Request::mutable_modifyremotepatrolstorereq_value() {
  
  if (modifyremotepatrolstorereq_value_ == NULL) {
    modifyremotepatrolstorereq_value_ = new ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyRemotePatrolStoreReq_Value)
  return modifyremotepatrolstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* Request::release_modifyremotepatrolstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyRemotePatrolStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* temp = modifyremotepatrolstorereq_value_;
  modifyremotepatrolstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreReq* modifyremotepatrolstorereq_value) {
  delete modifyremotepatrolstorereq_value_;
  modifyremotepatrolstorereq_value_ = modifyremotepatrolstorereq_value;
  if (modifyremotepatrolstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyRemotePatrolStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoReq QueryRemotePatrolStoreInfoReq_Value = 1030;
inline bool Request::has_queryremotepatrolstoreinforeq_value() const {
  return this != internal_default_instance() && queryremotepatrolstoreinforeq_value_ != NULL;
}
inline void Request::clear_queryremotepatrolstoreinforeq_value() {
  if (GetArenaNoVirtual() == NULL && queryremotepatrolstoreinforeq_value_ != NULL) delete queryremotepatrolstoreinforeq_value_;
  queryremotepatrolstoreinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq& Request::queryremotepatrolstoreinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryRemotePatrolStoreInfoReq_Value)
  return queryremotepatrolstoreinforeq_value_ != NULL ? *queryremotepatrolstoreinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* Request::mutable_queryremotepatrolstoreinforeq_value() {
  
  if (queryremotepatrolstoreinforeq_value_ == NULL) {
    queryremotepatrolstoreinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryRemotePatrolStoreInfoReq_Value)
  return queryremotepatrolstoreinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* Request::release_queryremotepatrolstoreinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryRemotePatrolStoreInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* temp = queryremotepatrolstoreinforeq_value_;
  queryremotepatrolstoreinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryremotepatrolstoreinforeq_value(::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoReq* queryremotepatrolstoreinforeq_value) {
  delete queryremotepatrolstoreinforeq_value_;
  queryremotepatrolstoreinforeq_value_ = queryremotepatrolstoreinforeq_value;
  if (queryremotepatrolstoreinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryRemotePatrolStoreInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreReq QueryAllRemotePatrolStoreReq_Value = 1040;
inline bool Request::has_queryallremotepatrolstorereq_value() const {
  return this != internal_default_instance() && queryallremotepatrolstorereq_value_ != NULL;
}
inline void Request::clear_queryallremotepatrolstorereq_value() {
  if (GetArenaNoVirtual() == NULL && queryallremotepatrolstorereq_value_ != NULL) delete queryallremotepatrolstorereq_value_;
  queryallremotepatrolstorereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq& Request::queryallremotepatrolstorereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllRemotePatrolStoreReq_Value)
  return queryallremotepatrolstorereq_value_ != NULL ? *queryallremotepatrolstorereq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* Request::mutable_queryallremotepatrolstorereq_value() {
  
  if (queryallremotepatrolstorereq_value_ == NULL) {
    queryallremotepatrolstorereq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllRemotePatrolStoreReq_Value)
  return queryallremotepatrolstorereq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* Request::release_queryallremotepatrolstorereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllRemotePatrolStoreReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* temp = queryallremotepatrolstorereq_value_;
  queryallremotepatrolstorereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallremotepatrolstorereq_value(::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreReq* queryallremotepatrolstorereq_value) {
  delete queryallremotepatrolstorereq_value_;
  queryallremotepatrolstorereq_value_ = queryallremotepatrolstorereq_value;
  if (queryallremotepatrolstorereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllRemotePatrolStoreReq_Value)
}

// .CustomerFlow.Interactive.Message.AddAreaReq AddAreaReq_Value = 1100;
inline bool Request::has_addareareq_value() const {
  return this != internal_default_instance() && addareareq_value_ != NULL;
}
inline void Request::clear_addareareq_value() {
  if (GetArenaNoVirtual() == NULL && addareareq_value_ != NULL) delete addareareq_value_;
  addareareq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddAreaReq& Request::addareareq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddAreaReq_Value)
  return addareareq_value_ != NULL ? *addareareq_value_
                         : *::CustomerFlow::Interactive::Message::AddAreaReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddAreaReq* Request::mutable_addareareq_value() {
  
  if (addareareq_value_ == NULL) {
    addareareq_value_ = new ::CustomerFlow::Interactive::Message::AddAreaReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddAreaReq_Value)
  return addareareq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddAreaReq* Request::release_addareareq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddAreaReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddAreaReq* temp = addareareq_value_;
  addareareq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addareareq_value(::CustomerFlow::Interactive::Message::AddAreaReq* addareareq_value) {
  delete addareareq_value_;
  addareareq_value_ = addareareq_value;
  if (addareareq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddAreaReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteAreaReq DeleteAreaReq_Value = 1110;
inline bool Request::has_deleteareareq_value() const {
  return this != internal_default_instance() && deleteareareq_value_ != NULL;
}
inline void Request::clear_deleteareareq_value() {
  if (GetArenaNoVirtual() == NULL && deleteareareq_value_ != NULL) delete deleteareareq_value_;
  deleteareareq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteAreaReq& Request::deleteareareq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteAreaReq_Value)
  return deleteareareq_value_ != NULL ? *deleteareareq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteAreaReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteAreaReq* Request::mutable_deleteareareq_value() {
  
  if (deleteareareq_value_ == NULL) {
    deleteareareq_value_ = new ::CustomerFlow::Interactive::Message::DeleteAreaReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteAreaReq_Value)
  return deleteareareq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteAreaReq* Request::release_deleteareareq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteAreaReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteAreaReq* temp = deleteareareq_value_;
  deleteareareq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deleteareareq_value(::CustomerFlow::Interactive::Message::DeleteAreaReq* deleteareareq_value) {
  delete deleteareareq_value_;
  deleteareareq_value_ = deleteareareq_value;
  if (deleteareareq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteAreaReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyAreaReq ModifyAreaReq_Value = 1120;
inline bool Request::has_modifyareareq_value() const {
  return this != internal_default_instance() && modifyareareq_value_ != NULL;
}
inline void Request::clear_modifyareareq_value() {
  if (GetArenaNoVirtual() == NULL && modifyareareq_value_ != NULL) delete modifyareareq_value_;
  modifyareareq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyAreaReq& Request::modifyareareq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyAreaReq_Value)
  return modifyareareq_value_ != NULL ? *modifyareareq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyAreaReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyAreaReq* Request::mutable_modifyareareq_value() {
  
  if (modifyareareq_value_ == NULL) {
    modifyareareq_value_ = new ::CustomerFlow::Interactive::Message::ModifyAreaReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyAreaReq_Value)
  return modifyareareq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyAreaReq* Request::release_modifyareareq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyAreaReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyAreaReq* temp = modifyareareq_value_;
  modifyareareq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyareareq_value(::CustomerFlow::Interactive::Message::ModifyAreaReq* modifyareareq_value) {
  delete modifyareareq_value_;
  modifyareareq_value_ = modifyareareq_value;
  if (modifyareareq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyAreaReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAreaInfoReq QueryAreaInfoReq_Value = 1130;
inline bool Request::has_queryareainforeq_value() const {
  return this != internal_default_instance() && queryareainforeq_value_ != NULL;
}
inline void Request::clear_queryareainforeq_value() {
  if (GetArenaNoVirtual() == NULL && queryareainforeq_value_ != NULL) delete queryareainforeq_value_;
  queryareainforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAreaInfoReq& Request::queryareainforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAreaInfoReq_Value)
  return queryareainforeq_value_ != NULL ? *queryareainforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAreaInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAreaInfoReq* Request::mutable_queryareainforeq_value() {
  
  if (queryareainforeq_value_ == NULL) {
    queryareainforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryAreaInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAreaInfoReq_Value)
  return queryareainforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAreaInfoReq* Request::release_queryareainforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAreaInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAreaInfoReq* temp = queryareainforeq_value_;
  queryareainforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryareainforeq_value(::CustomerFlow::Interactive::Message::QueryAreaInfoReq* queryareainforeq_value) {
  delete queryareainforeq_value_;
  queryareainforeq_value_ = queryareainforeq_value;
  if (queryareainforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAreaInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllAreaReq QueryAllAreaReq_Value = 1140;
inline bool Request::has_queryallareareq_value() const {
  return this != internal_default_instance() && queryallareareq_value_ != NULL;
}
inline void Request::clear_queryallareareq_value() {
  if (GetArenaNoVirtual() == NULL && queryallareareq_value_ != NULL) delete queryallareareq_value_;
  queryallareareq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllAreaReq& Request::queryallareareq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllAreaReq_Value)
  return queryallareareq_value_ != NULL ? *queryallareareq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllAreaReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllAreaReq* Request::mutable_queryallareareq_value() {
  
  if (queryallareareq_value_ == NULL) {
    queryallareareq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllAreaReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllAreaReq_Value)
  return queryallareareq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllAreaReq* Request::release_queryallareareq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllAreaReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllAreaReq* temp = queryallareareq_value_;
  queryallareareq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallareareq_value(::CustomerFlow::Interactive::Message::QueryAllAreaReq* queryallareareq_value) {
  delete queryallareareq_value_;
  queryallareareq_value_ = queryallareareq_value;
  if (queryallareareq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllAreaReq_Value)
}

// .CustomerFlow.Interactive.Message.BindPushClientIDReq BindPushClientIDReq_Value = 1150;
inline bool Request::has_bindpushclientidreq_value() const {
  return this != internal_default_instance() && bindpushclientidreq_value_ != NULL;
}
inline void Request::clear_bindpushclientidreq_value() {
  if (GetArenaNoVirtual() == NULL && bindpushclientidreq_value_ != NULL) delete bindpushclientidreq_value_;
  bindpushclientidreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::BindPushClientIDReq& Request::bindpushclientidreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.BindPushClientIDReq_Value)
  return bindpushclientidreq_value_ != NULL ? *bindpushclientidreq_value_
                         : *::CustomerFlow::Interactive::Message::BindPushClientIDReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::BindPushClientIDReq* Request::mutable_bindpushclientidreq_value() {
  
  if (bindpushclientidreq_value_ == NULL) {
    bindpushclientidreq_value_ = new ::CustomerFlow::Interactive::Message::BindPushClientIDReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.BindPushClientIDReq_Value)
  return bindpushclientidreq_value_;
}
inline ::CustomerFlow::Interactive::Message::BindPushClientIDReq* Request::release_bindpushclientidreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.BindPushClientIDReq_Value)
  
  ::CustomerFlow::Interactive::Message::BindPushClientIDReq* temp = bindpushclientidreq_value_;
  bindpushclientidreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_bindpushclientidreq_value(::CustomerFlow::Interactive::Message::BindPushClientIDReq* bindpushclientidreq_value) {
  delete bindpushclientidreq_value_;
  bindpushclientidreq_value_ = bindpushclientidreq_value;
  if (bindpushclientidreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.BindPushClientIDReq_Value)
}

// .CustomerFlow.Interactive.Message.UnbindPushClientIDReq UnbindPushClientIDReq_Value = 1160;
inline bool Request::has_unbindpushclientidreq_value() const {
  return this != internal_default_instance() && unbindpushclientidreq_value_ != NULL;
}
inline void Request::clear_unbindpushclientidreq_value() {
  if (GetArenaNoVirtual() == NULL && unbindpushclientidreq_value_ != NULL) delete unbindpushclientidreq_value_;
  unbindpushclientidreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq& Request::unbindpushclientidreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.UnbindPushClientIDReq_Value)
  return unbindpushclientidreq_value_ != NULL ? *unbindpushclientidreq_value_
                         : *::CustomerFlow::Interactive::Message::UnbindPushClientIDReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* Request::mutable_unbindpushclientidreq_value() {
  
  if (unbindpushclientidreq_value_ == NULL) {
    unbindpushclientidreq_value_ = new ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.UnbindPushClientIDReq_Value)
  return unbindpushclientidreq_value_;
}
inline ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* Request::release_unbindpushclientidreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.UnbindPushClientIDReq_Value)
  
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* temp = unbindpushclientidreq_value_;
  unbindpushclientidreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_unbindpushclientidreq_value(::CustomerFlow::Interactive::Message::UnbindPushClientIDReq* unbindpushclientidreq_value) {
  delete unbindpushclientidreq_value_;
  unbindpushclientidreq_value_ = unbindpushclientidreq_value;
  if (unbindpushclientidreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.UnbindPushClientIDReq_Value)
}

// .CustomerFlow.Interactive.Message.AddStoreSensorReq AddStoreSensorReq_Value = 1200;
inline bool Request::has_addstoresensorreq_value() const {
  return this != internal_default_instance() && addstoresensorreq_value_ != NULL;
}
inline void Request::clear_addstoresensorreq_value() {
  if (GetArenaNoVirtual() == NULL && addstoresensorreq_value_ != NULL) delete addstoresensorreq_value_;
  addstoresensorreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddStoreSensorReq& Request::addstoresensorreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddStoreSensorReq_Value)
  return addstoresensorreq_value_ != NULL ? *addstoresensorreq_value_
                         : *::CustomerFlow::Interactive::Message::AddStoreSensorReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddStoreSensorReq* Request::mutable_addstoresensorreq_value() {
  
  if (addstoresensorreq_value_ == NULL) {
    addstoresensorreq_value_ = new ::CustomerFlow::Interactive::Message::AddStoreSensorReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddStoreSensorReq_Value)
  return addstoresensorreq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddStoreSensorReq* Request::release_addstoresensorreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddStoreSensorReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddStoreSensorReq* temp = addstoresensorreq_value_;
  addstoresensorreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addstoresensorreq_value(::CustomerFlow::Interactive::Message::AddStoreSensorReq* addstoresensorreq_value) {
  delete addstoresensorreq_value_;
  addstoresensorreq_value_ = addstoresensorreq_value;
  if (addstoresensorreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddStoreSensorReq_Value)
}

// .CustomerFlow.Interactive.Message.DeleteStoreSensorReq DeleteStoreSensorReq_Value = 1210;
inline bool Request::has_deletestoresensorreq_value() const {
  return this != internal_default_instance() && deletestoresensorreq_value_ != NULL;
}
inline void Request::clear_deletestoresensorreq_value() {
  if (GetArenaNoVirtual() == NULL && deletestoresensorreq_value_ != NULL) delete deletestoresensorreq_value_;
  deletestoresensorreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq& Request::deletestoresensorreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.DeleteStoreSensorReq_Value)
  return deletestoresensorreq_value_ != NULL ? *deletestoresensorreq_value_
                         : *::CustomerFlow::Interactive::Message::DeleteStoreSensorReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* Request::mutable_deletestoresensorreq_value() {
  
  if (deletestoresensorreq_value_ == NULL) {
    deletestoresensorreq_value_ = new ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.DeleteStoreSensorReq_Value)
  return deletestoresensorreq_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* Request::release_deletestoresensorreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.DeleteStoreSensorReq_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* temp = deletestoresensorreq_value_;
  deletestoresensorreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_deletestoresensorreq_value(::CustomerFlow::Interactive::Message::DeleteStoreSensorReq* deletestoresensorreq_value) {
  delete deletestoresensorreq_value_;
  deletestoresensorreq_value_ = deletestoresensorreq_value;
  if (deletestoresensorreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.DeleteStoreSensorReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyStoreSensorReq ModifyStoreSensorReq_Value = 1220;
inline bool Request::has_modifystoresensorreq_value() const {
  return this != internal_default_instance() && modifystoresensorreq_value_ != NULL;
}
inline void Request::clear_modifystoresensorreq_value() {
  if (GetArenaNoVirtual() == NULL && modifystoresensorreq_value_ != NULL) delete modifystoresensorreq_value_;
  modifystoresensorreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq& Request::modifystoresensorreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyStoreSensorReq_Value)
  return modifystoresensorreq_value_ != NULL ? *modifystoresensorreq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyStoreSensorReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* Request::mutable_modifystoresensorreq_value() {
  
  if (modifystoresensorreq_value_ == NULL) {
    modifystoresensorreq_value_ = new ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyStoreSensorReq_Value)
  return modifystoresensorreq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* Request::release_modifystoresensorreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyStoreSensorReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* temp = modifystoresensorreq_value_;
  modifystoresensorreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifystoresensorreq_value(::CustomerFlow::Interactive::Message::ModifyStoreSensorReq* modifystoresensorreq_value) {
  delete modifystoresensorreq_value_;
  modifystoresensorreq_value_ = modifystoresensorreq_value;
  if (modifystoresensorreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyStoreSensorReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreSensorInfoReq QueryStoreSensorInfoReq_Value = 1230;
inline bool Request::has_querystoresensorinforeq_value() const {
  return this != internal_default_instance() && querystoresensorinforeq_value_ != NULL;
}
inline void Request::clear_querystoresensorinforeq_value() {
  if (GetArenaNoVirtual() == NULL && querystoresensorinforeq_value_ != NULL) delete querystoresensorinforeq_value_;
  querystoresensorinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq& Request::querystoresensorinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryStoreSensorInfoReq_Value)
  return querystoresensorinforeq_value_ != NULL ? *querystoresensorinforeq_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* Request::mutable_querystoresensorinforeq_value() {
  
  if (querystoresensorinforeq_value_ == NULL) {
    querystoresensorinforeq_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryStoreSensorInfoReq_Value)
  return querystoresensorinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* Request::release_querystoresensorinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryStoreSensorInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* temp = querystoresensorinforeq_value_;
  querystoresensorinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querystoresensorinforeq_value(::CustomerFlow::Interactive::Message::QueryStoreSensorInfoReq* querystoresensorinforeq_value) {
  delete querystoresensorinforeq_value_;
  querystoresensorinforeq_value_ = querystoresensorinforeq_value;
  if (querystoresensorinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryStoreSensorInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllStoreSensorReq QueryAllStoreSensorReq_Value = 1240;
inline bool Request::has_queryallstoresensorreq_value() const {
  return this != internal_default_instance() && queryallstoresensorreq_value_ != NULL;
}
inline void Request::clear_queryallstoresensorreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallstoresensorreq_value_ != NULL) delete queryallstoresensorreq_value_;
  queryallstoresensorreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq& Request::queryallstoresensorreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllStoreSensorReq_Value)
  return queryallstoresensorreq_value_ != NULL ? *queryallstoresensorreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* Request::mutable_queryallstoresensorreq_value() {
  
  if (queryallstoresensorreq_value_ == NULL) {
    queryallstoresensorreq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllStoreSensorReq_Value)
  return queryallstoresensorreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* Request::release_queryallstoresensorreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllStoreSensorReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* temp = queryallstoresensorreq_value_;
  queryallstoresensorreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallstoresensorreq_value(::CustomerFlow::Interactive::Message::QueryAllStoreSensorReq* queryallstoresensorreq_value) {
  delete queryallstoresensorreq_value_;
  queryallstoresensorreq_value_ = queryallstoresensorreq_value;
  if (queryallstoresensorreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllStoreSensorReq_Value)
}

// .CustomerFlow.Interactive.Message.ImportPOSDataReq ImportPOSDataReq_Value = 2000;
inline bool Request::has_importposdatareq_value() const {
  return this != internal_default_instance() && importposdatareq_value_ != NULL;
}
inline void Request::clear_importposdatareq_value() {
  if (GetArenaNoVirtual() == NULL && importposdatareq_value_ != NULL) delete importposdatareq_value_;
  importposdatareq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ImportPOSDataReq& Request::importposdatareq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ImportPOSDataReq_Value)
  return importposdatareq_value_ != NULL ? *importposdatareq_value_
                         : *::CustomerFlow::Interactive::Message::ImportPOSDataReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ImportPOSDataReq* Request::mutable_importposdatareq_value() {
  
  if (importposdatareq_value_ == NULL) {
    importposdatareq_value_ = new ::CustomerFlow::Interactive::Message::ImportPOSDataReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ImportPOSDataReq_Value)
  return importposdatareq_value_;
}
inline ::CustomerFlow::Interactive::Message::ImportPOSDataReq* Request::release_importposdatareq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ImportPOSDataReq_Value)
  
  ::CustomerFlow::Interactive::Message::ImportPOSDataReq* temp = importposdatareq_value_;
  importposdatareq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_importposdatareq_value(::CustomerFlow::Interactive::Message::ImportPOSDataReq* importposdatareq_value) {
  delete importposdatareq_value_;
  importposdatareq_value_ = importposdatareq_value;
  if (importposdatareq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ImportPOSDataReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticReq QueryCustomerFlowStatisticReq_Value = 2900;
inline bool Request::has_querycustomerflowstatisticreq_value() const {
  return this != internal_default_instance() && querycustomerflowstatisticreq_value_ != NULL;
}
inline void Request::clear_querycustomerflowstatisticreq_value() {
  if (GetArenaNoVirtual() == NULL && querycustomerflowstatisticreq_value_ != NULL) delete querycustomerflowstatisticreq_value_;
  querycustomerflowstatisticreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq& Request::querycustomerflowstatisticreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryCustomerFlowStatisticReq_Value)
  return querycustomerflowstatisticreq_value_ != NULL ? *querycustomerflowstatisticreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* Request::mutable_querycustomerflowstatisticreq_value() {
  
  if (querycustomerflowstatisticreq_value_ == NULL) {
    querycustomerflowstatisticreq_value_ = new ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryCustomerFlowStatisticReq_Value)
  return querycustomerflowstatisticreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* Request::release_querycustomerflowstatisticreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryCustomerFlowStatisticReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* temp = querycustomerflowstatisticreq_value_;
  querycustomerflowstatisticreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querycustomerflowstatisticreq_value(::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticReq* querycustomerflowstatisticreq_value) {
  delete querycustomerflowstatisticreq_value_;
  querycustomerflowstatisticreq_value_ = querycustomerflowstatisticreq_value;
  if (querycustomerflowstatisticreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryCustomerFlowStatisticReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryPatrolResultReportReq QueryPatrolResultReportReq_Value = 3000;
inline bool Request::has_querypatrolresultreportreq_value() const {
  return this != internal_default_instance() && querypatrolresultreportreq_value_ != NULL;
}
inline void Request::clear_querypatrolresultreportreq_value() {
  if (GetArenaNoVirtual() == NULL && querypatrolresultreportreq_value_ != NULL) delete querypatrolresultreportreq_value_;
  querypatrolresultreportreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq& Request::querypatrolresultreportreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryPatrolResultReportReq_Value)
  return querypatrolresultreportreq_value_ != NULL ? *querypatrolresultreportreq_value_
                         : *::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* Request::mutable_querypatrolresultreportreq_value() {
  
  if (querypatrolresultreportreq_value_ == NULL) {
    querypatrolresultreportreq_value_ = new ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryPatrolResultReportReq_Value)
  return querypatrolresultreportreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* Request::release_querypatrolresultreportreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryPatrolResultReportReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* temp = querypatrolresultreportreq_value_;
  querypatrolresultreportreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querypatrolresultreportreq_value(::CustomerFlow::Interactive::Message::QueryPatrolResultReportReq* querypatrolresultreportreq_value) {
  delete querypatrolresultreportreq_value_;
  querypatrolresultreportreq_value_ = querypatrolresultreportreq_value;
  if (querypatrolresultreportreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryPatrolResultReportReq_Value)
}

// .CustomerFlow.Interactive.Message.ReportCustomerFlowDataReq ReportCustomerFlowDataReq_Value = 5000;
inline bool Request::has_reportcustomerflowdatareq_value() const {
  return this != internal_default_instance() && reportcustomerflowdatareq_value_ != NULL;
}
inline void Request::clear_reportcustomerflowdatareq_value() {
  if (GetArenaNoVirtual() == NULL && reportcustomerflowdatareq_value_ != NULL) delete reportcustomerflowdatareq_value_;
  reportcustomerflowdatareq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq& Request::reportcustomerflowdatareq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ReportCustomerFlowDataReq_Value)
  return reportcustomerflowdatareq_value_ != NULL ? *reportcustomerflowdatareq_value_
                         : *::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* Request::mutable_reportcustomerflowdatareq_value() {
  
  if (reportcustomerflowdatareq_value_ == NULL) {
    reportcustomerflowdatareq_value_ = new ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ReportCustomerFlowDataReq_Value)
  return reportcustomerflowdatareq_value_;
}
inline ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* Request::release_reportcustomerflowdatareq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ReportCustomerFlowDataReq_Value)
  
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* temp = reportcustomerflowdatareq_value_;
  reportcustomerflowdatareq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_reportcustomerflowdatareq_value(::CustomerFlow::Interactive::Message::ReportCustomerFlowDataReq* reportcustomerflowdatareq_value) {
  delete reportcustomerflowdatareq_value_;
  reportcustomerflowdatareq_value_ = reportcustomerflowdatareq_value;
  if (reportcustomerflowdatareq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ReportCustomerFlowDataReq_Value)
}

// .CustomerFlow.Interactive.Message.ReportSensorInfoReq ReportSensorInfoReq_Value = 5100;
inline bool Request::has_reportsensorinforeq_value() const {
  return this != internal_default_instance() && reportsensorinforeq_value_ != NULL;
}
inline void Request::clear_reportsensorinforeq_value() {
  if (GetArenaNoVirtual() == NULL && reportsensorinforeq_value_ != NULL) delete reportsensorinforeq_value_;
  reportsensorinforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ReportSensorInfoReq& Request::reportsensorinforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ReportSensorInfoReq_Value)
  return reportsensorinforeq_value_ != NULL ? *reportsensorinforeq_value_
                         : *::CustomerFlow::Interactive::Message::ReportSensorInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ReportSensorInfoReq* Request::mutable_reportsensorinforeq_value() {
  
  if (reportsensorinforeq_value_ == NULL) {
    reportsensorinforeq_value_ = new ::CustomerFlow::Interactive::Message::ReportSensorInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ReportSensorInfoReq_Value)
  return reportsensorinforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::ReportSensorInfoReq* Request::release_reportsensorinforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ReportSensorInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::ReportSensorInfoReq* temp = reportsensorinforeq_value_;
  reportsensorinforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_reportsensorinforeq_value(::CustomerFlow::Interactive::Message::ReportSensorInfoReq* reportsensorinforeq_value) {
  delete reportsensorinforeq_value_;
  reportsensorinforeq_value_ = reportsensorinforeq_value;
  if (reportsensorinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ReportSensorInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.ReportSensorAlarmInfoReq ReportSensorAlarmInfoReq_Value = 5110;
inline bool Request::has_reportsensoralarminforeq_value() const {
  return this != internal_default_instance() && reportsensoralarminforeq_value_ != NULL;
}
inline void Request::clear_reportsensoralarminforeq_value() {
  if (GetArenaNoVirtual() == NULL && reportsensoralarminforeq_value_ != NULL) delete reportsensoralarminforeq_value_;
  reportsensoralarminforeq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq& Request::reportsensoralarminforeq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ReportSensorAlarmInfoReq_Value)
  return reportsensoralarminforeq_value_ != NULL ? *reportsensoralarminforeq_value_
                         : *::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* Request::mutable_reportsensoralarminforeq_value() {
  
  if (reportsensoralarminforeq_value_ == NULL) {
    reportsensoralarminforeq_value_ = new ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ReportSensorAlarmInfoReq_Value)
  return reportsensoralarminforeq_value_;
}
inline ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* Request::release_reportsensoralarminforeq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ReportSensorAlarmInfoReq_Value)
  
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* temp = reportsensoralarminforeq_value_;
  reportsensoralarminforeq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_reportsensoralarminforeq_value(::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoReq* reportsensoralarminforeq_value) {
  delete reportsensoralarminforeq_value_;
  reportsensoralarminforeq_value_ = reportsensoralarminforeq_value;
  if (reportsensoralarminforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ReportSensorAlarmInfoReq_Value)
}

// .CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdReq QuerySensorAlarmThresholdReq_Value = 5120;
inline bool Request::has_querysensoralarmthresholdreq_value() const {
  return this != internal_default_instance() && querysensoralarmthresholdreq_value_ != NULL;
}
inline void Request::clear_querysensoralarmthresholdreq_value() {
  if (GetArenaNoVirtual() == NULL && querysensoralarmthresholdreq_value_ != NULL) delete querysensoralarmthresholdreq_value_;
  querysensoralarmthresholdreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq& Request::querysensoralarmthresholdreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmThresholdReq_Value)
  return querysensoralarmthresholdreq_value_ != NULL ? *querysensoralarmthresholdreq_value_
                         : *::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* Request::mutable_querysensoralarmthresholdreq_value() {
  
  if (querysensoralarmthresholdreq_value_ == NULL) {
    querysensoralarmthresholdreq_value_ = new ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmThresholdReq_Value)
  return querysensoralarmthresholdreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* Request::release_querysensoralarmthresholdreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmThresholdReq_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* temp = querysensoralarmthresholdreq_value_;
  querysensoralarmthresholdreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querysensoralarmthresholdreq_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdReq* querysensoralarmthresholdreq_value) {
  delete querysensoralarmthresholdreq_value_;
  querysensoralarmthresholdreq_value_ = querysensoralarmthresholdreq_value;
  if (querysensoralarmthresholdreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmThresholdReq_Value)
}

// .CustomerFlow.Interactive.Message.RemoveSensorRecordsReq RemoveSensorRecordsReq_Value = 5130;
inline bool Request::has_removesensorrecordsreq_value() const {
  return this != internal_default_instance() && removesensorrecordsreq_value_ != NULL;
}
inline void Request::clear_removesensorrecordsreq_value() {
  if (GetArenaNoVirtual() == NULL && removesensorrecordsreq_value_ != NULL) delete removesensorrecordsreq_value_;
  removesensorrecordsreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq& Request::removesensorrecordsreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.RemoveSensorRecordsReq_Value)
  return removesensorrecordsreq_value_ != NULL ? *removesensorrecordsreq_value_
                         : *::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* Request::mutable_removesensorrecordsreq_value() {
  
  if (removesensorrecordsreq_value_ == NULL) {
    removesensorrecordsreq_value_ = new ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.RemoveSensorRecordsReq_Value)
  return removesensorrecordsreq_value_;
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* Request::release_removesensorrecordsreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.RemoveSensorRecordsReq_Value)
  
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* temp = removesensorrecordsreq_value_;
  removesensorrecordsreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_removesensorrecordsreq_value(::CustomerFlow::Interactive::Message::RemoveSensorRecordsReq* removesensorrecordsreq_value) {
  delete removesensorrecordsreq_value_;
  removesensorrecordsreq_value_ = removesensorrecordsreq_value;
  if (removesensorrecordsreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.RemoveSensorRecordsReq_Value)
}

// .CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsReq RemoveSensorAlarmRecordsReq_Value = 5140;
inline bool Request::has_removesensoralarmrecordsreq_value() const {
  return this != internal_default_instance() && removesensoralarmrecordsreq_value_ != NULL;
}
inline void Request::clear_removesensoralarmrecordsreq_value() {
  if (GetArenaNoVirtual() == NULL && removesensoralarmrecordsreq_value_ != NULL) delete removesensoralarmrecordsreq_value_;
  removesensoralarmrecordsreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq& Request::removesensoralarmrecordsreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.RemoveSensorAlarmRecordsReq_Value)
  return removesensoralarmrecordsreq_value_ != NULL ? *removesensoralarmrecordsreq_value_
                         : *::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* Request::mutable_removesensoralarmrecordsreq_value() {
  
  if (removesensoralarmrecordsreq_value_ == NULL) {
    removesensoralarmrecordsreq_value_ = new ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.RemoveSensorAlarmRecordsReq_Value)
  return removesensoralarmrecordsreq_value_;
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* Request::release_removesensoralarmrecordsreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.RemoveSensorAlarmRecordsReq_Value)
  
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* temp = removesensoralarmrecordsreq_value_;
  removesensoralarmrecordsreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_removesensoralarmrecordsreq_value(::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsReq* removesensoralarmrecordsreq_value) {
  delete removesensoralarmrecordsreq_value_;
  removesensoralarmrecordsreq_value_ = removesensoralarmrecordsreq_value;
  if (removesensoralarmrecordsreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.RemoveSensorAlarmRecordsReq_Value)
}

// .CustomerFlow.Interactive.Message.QuerySensorRecordsReq QuerySensorRecordsReq_Value = 5150;
inline bool Request::has_querysensorrecordsreq_value() const {
  return this != internal_default_instance() && querysensorrecordsreq_value_ != NULL;
}
inline void Request::clear_querysensorrecordsreq_value() {
  if (GetArenaNoVirtual() == NULL && querysensorrecordsreq_value_ != NULL) delete querysensorrecordsreq_value_;
  querysensorrecordsreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq& Request::querysensorrecordsreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QuerySensorRecordsReq_Value)
  return querysensorrecordsreq_value_ != NULL ? *querysensorrecordsreq_value_
                         : *::CustomerFlow::Interactive::Message::QuerySensorRecordsReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* Request::mutable_querysensorrecordsreq_value() {
  
  if (querysensorrecordsreq_value_ == NULL) {
    querysensorrecordsreq_value_ = new ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QuerySensorRecordsReq_Value)
  return querysensorrecordsreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* Request::release_querysensorrecordsreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QuerySensorRecordsReq_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* temp = querysensorrecordsreq_value_;
  querysensorrecordsreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querysensorrecordsreq_value(::CustomerFlow::Interactive::Message::QuerySensorRecordsReq* querysensorrecordsreq_value) {
  delete querysensorrecordsreq_value_;
  querysensorrecordsreq_value_ = querysensorrecordsreq_value;
  if (querysensorrecordsreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QuerySensorRecordsReq_Value)
}

// .CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsReq QuerySensorAlarmRecordsReq_Value = 5160;
inline bool Request::has_querysensoralarmrecordsreq_value() const {
  return this != internal_default_instance() && querysensoralarmrecordsreq_value_ != NULL;
}
inline void Request::clear_querysensoralarmrecordsreq_value() {
  if (GetArenaNoVirtual() == NULL && querysensoralarmrecordsreq_value_ != NULL) delete querysensoralarmrecordsreq_value_;
  querysensoralarmrecordsreq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq& Request::querysensoralarmrecordsreq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmRecordsReq_Value)
  return querysensoralarmrecordsreq_value_ != NULL ? *querysensoralarmrecordsreq_value_
                         : *::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* Request::mutable_querysensoralarmrecordsreq_value() {
  
  if (querysensoralarmrecordsreq_value_ == NULL) {
    querysensoralarmrecordsreq_value_ = new ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmRecordsReq_Value)
  return querysensoralarmrecordsreq_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* Request::release_querysensoralarmrecordsreq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmRecordsReq_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* temp = querysensoralarmrecordsreq_value_;
  querysensoralarmrecordsreq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_querysensoralarmrecordsreq_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsReq* querysensoralarmrecordsreq_value) {
  delete querysensoralarmrecordsreq_value_;
  querysensoralarmrecordsreq_value_ = querysensoralarmrecordsreq_value;
  if (querysensoralarmrecordsreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QuerySensorAlarmRecordsReq_Value)
}

// .CustomerFlow.Interactive.Message.AddRoleReq AddRoleReq_Value = 5170;
inline bool Request::has_addrolereq_value() const {
  return this != internal_default_instance() && addrolereq_value_ != NULL;
}
inline void Request::clear_addrolereq_value() {
  if (GetArenaNoVirtual() == NULL && addrolereq_value_ != NULL) delete addrolereq_value_;
  addrolereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddRoleReq& Request::addrolereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.AddRoleReq_Value)
  return addrolereq_value_ != NULL ? *addrolereq_value_
                         : *::CustomerFlow::Interactive::Message::AddRoleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddRoleReq* Request::mutable_addrolereq_value() {
  
  if (addrolereq_value_ == NULL) {
    addrolereq_value_ = new ::CustomerFlow::Interactive::Message::AddRoleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.AddRoleReq_Value)
  return addrolereq_value_;
}
inline ::CustomerFlow::Interactive::Message::AddRoleReq* Request::release_addrolereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.AddRoleReq_Value)
  
  ::CustomerFlow::Interactive::Message::AddRoleReq* temp = addrolereq_value_;
  addrolereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_addrolereq_value(::CustomerFlow::Interactive::Message::AddRoleReq* addrolereq_value) {
  delete addrolereq_value_;
  addrolereq_value_ = addrolereq_value;
  if (addrolereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.AddRoleReq_Value)
}

// .CustomerFlow.Interactive.Message.RemoveRoleReq RemoveRoleReq_Value = 5180;
inline bool Request::has_removerolereq_value() const {
  return this != internal_default_instance() && removerolereq_value_ != NULL;
}
inline void Request::clear_removerolereq_value() {
  if (GetArenaNoVirtual() == NULL && removerolereq_value_ != NULL) delete removerolereq_value_;
  removerolereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemoveRoleReq& Request::removerolereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.RemoveRoleReq_Value)
  return removerolereq_value_ != NULL ? *removerolereq_value_
                         : *::CustomerFlow::Interactive::Message::RemoveRoleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemoveRoleReq* Request::mutable_removerolereq_value() {
  
  if (removerolereq_value_ == NULL) {
    removerolereq_value_ = new ::CustomerFlow::Interactive::Message::RemoveRoleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.RemoveRoleReq_Value)
  return removerolereq_value_;
}
inline ::CustomerFlow::Interactive::Message::RemoveRoleReq* Request::release_removerolereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.RemoveRoleReq_Value)
  
  ::CustomerFlow::Interactive::Message::RemoveRoleReq* temp = removerolereq_value_;
  removerolereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_removerolereq_value(::CustomerFlow::Interactive::Message::RemoveRoleReq* removerolereq_value) {
  delete removerolereq_value_;
  removerolereq_value_ = removerolereq_value;
  if (removerolereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.RemoveRoleReq_Value)
}

// .CustomerFlow.Interactive.Message.ModifyRoleReq ModifyRoleReq_Value = 5190;
inline bool Request::has_modifyrolereq_value() const {
  return this != internal_default_instance() && modifyrolereq_value_ != NULL;
}
inline void Request::clear_modifyrolereq_value() {
  if (GetArenaNoVirtual() == NULL && modifyrolereq_value_ != NULL) delete modifyrolereq_value_;
  modifyrolereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyRoleReq& Request::modifyrolereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.ModifyRoleReq_Value)
  return modifyrolereq_value_ != NULL ? *modifyrolereq_value_
                         : *::CustomerFlow::Interactive::Message::ModifyRoleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyRoleReq* Request::mutable_modifyrolereq_value() {
  
  if (modifyrolereq_value_ == NULL) {
    modifyrolereq_value_ = new ::CustomerFlow::Interactive::Message::ModifyRoleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.ModifyRoleReq_Value)
  return modifyrolereq_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyRoleReq* Request::release_modifyrolereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.ModifyRoleReq_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyRoleReq* temp = modifyrolereq_value_;
  modifyrolereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_modifyrolereq_value(::CustomerFlow::Interactive::Message::ModifyRoleReq* modifyrolereq_value) {
  delete modifyrolereq_value_;
  modifyrolereq_value_ = modifyrolereq_value;
  if (modifyrolereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.ModifyRoleReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryRoleReq QueryRoleReq_Value = 5200;
inline bool Request::has_queryrolereq_value() const {
  return this != internal_default_instance() && queryrolereq_value_ != NULL;
}
inline void Request::clear_queryrolereq_value() {
  if (GetArenaNoVirtual() == NULL && queryrolereq_value_ != NULL) delete queryrolereq_value_;
  queryrolereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryRoleReq& Request::queryrolereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryRoleReq_Value)
  return queryrolereq_value_ != NULL ? *queryrolereq_value_
                         : *::CustomerFlow::Interactive::Message::QueryRoleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryRoleReq* Request::mutable_queryrolereq_value() {
  
  if (queryrolereq_value_ == NULL) {
    queryrolereq_value_ = new ::CustomerFlow::Interactive::Message::QueryRoleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryRoleReq_Value)
  return queryrolereq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryRoleReq* Request::release_queryrolereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryRoleReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryRoleReq* temp = queryrolereq_value_;
  queryrolereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryrolereq_value(::CustomerFlow::Interactive::Message::QueryRoleReq* queryrolereq_value) {
  delete queryrolereq_value_;
  queryrolereq_value_ = queryrolereq_value;
  if (queryrolereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryRoleReq_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllRoleReq QueryAllRoleReq_Value = 5210;
inline bool Request::has_queryallrolereq_value() const {
  return this != internal_default_instance() && queryallrolereq_value_ != NULL;
}
inline void Request::clear_queryallrolereq_value() {
  if (GetArenaNoVirtual() == NULL && queryallrolereq_value_ != NULL) delete queryallrolereq_value_;
  queryallrolereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllRoleReq& Request::queryallrolereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.QueryAllRoleReq_Value)
  return queryallrolereq_value_ != NULL ? *queryallrolereq_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllRoleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllRoleReq* Request::mutable_queryallrolereq_value() {
  
  if (queryallrolereq_value_ == NULL) {
    queryallrolereq_value_ = new ::CustomerFlow::Interactive::Message::QueryAllRoleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.QueryAllRoleReq_Value)
  return queryallrolereq_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllRoleReq* Request::release_queryallrolereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.QueryAllRoleReq_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllRoleReq* temp = queryallrolereq_value_;
  queryallrolereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_queryallrolereq_value(::CustomerFlow::Interactive::Message::QueryAllRoleReq* queryallrolereq_value) {
  delete queryallrolereq_value_;
  queryallrolereq_value_ = queryallrolereq_value;
  if (queryallrolereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.QueryAllRoleReq_Value)
}

// .CustomerFlow.Interactive.Message.UserBindRoleReq UserBindRoleReq_Value = 5220;
inline bool Request::has_userbindrolereq_value() const {
  return this != internal_default_instance() && userbindrolereq_value_ != NULL;
}
inline void Request::clear_userbindrolereq_value() {
  if (GetArenaNoVirtual() == NULL && userbindrolereq_value_ != NULL) delete userbindrolereq_value_;
  userbindrolereq_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UserBindRoleReq& Request::userbindrolereq_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Request.UserBindRoleReq_Value)
  return userbindrolereq_value_ != NULL ? *userbindrolereq_value_
                         : *::CustomerFlow::Interactive::Message::UserBindRoleReq::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UserBindRoleReq* Request::mutable_userbindrolereq_value() {
  
  if (userbindrolereq_value_ == NULL) {
    userbindrolereq_value_ = new ::CustomerFlow::Interactive::Message::UserBindRoleReq;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Request.UserBindRoleReq_Value)
  return userbindrolereq_value_;
}
inline ::CustomerFlow::Interactive::Message::UserBindRoleReq* Request::release_userbindrolereq_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Request.UserBindRoleReq_Value)
  
  ::CustomerFlow::Interactive::Message::UserBindRoleReq* temp = userbindrolereq_value_;
  userbindrolereq_value_ = NULL;
  return temp;
}
inline void Request::set_allocated_userbindrolereq_value(::CustomerFlow::Interactive::Message::UserBindRoleReq* userbindrolereq_value) {
  delete userbindrolereq_value_;
  userbindrolereq_value_ = userbindrolereq_value;
  if (userbindrolereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Request.UserBindRoleReq_Value)
}

// -------------------------------------------------------------------

// Response

// int32 iRetcode = 1;
inline void Response::clear_iretcode() {
  iretcode_ = 0;
}
inline ::google::protobuf::int32 Response::iretcode() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.iRetcode)
  return iretcode_;
}
inline void Response::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Response.iRetcode)
}

// string strRetMsg = 2;
inline void Response::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::strretmsg() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.strRetMsg)
  return strretmsg_.GetNoArena();
}
inline void Response::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.Response.strRetMsg)
}
#if LANG_CXX11
inline void Response::set_strretmsg(::std::string&& value) {
  
  strretmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.Response.strRetMsg)
}
#endif
inline void Response::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.Response.strRetMsg)
}
inline void Response::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.Response.strRetMsg)
}
inline ::std::string* Response::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_strretmsg() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.strRetMsg)
}

// .CustomerFlow.Interactive.Message.CustomerFlowPreHandleRsp CustomerFlowPreHandleRsp_Value = 10;
inline bool Response::has_customerflowprehandlersp_value() const {
  return this != internal_default_instance() && customerflowprehandlersp_value_ != NULL;
}
inline void Response::clear_customerflowprehandlersp_value() {
  if (GetArenaNoVirtual() == NULL && customerflowprehandlersp_value_ != NULL) delete customerflowprehandlersp_value_;
  customerflowprehandlersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp& Response::customerflowprehandlersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.CustomerFlowPreHandleRsp_Value)
  return customerflowprehandlersp_value_ != NULL ? *customerflowprehandlersp_value_
                         : *::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* Response::mutable_customerflowprehandlersp_value() {
  
  if (customerflowprehandlersp_value_ == NULL) {
    customerflowprehandlersp_value_ = new ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.CustomerFlowPreHandleRsp_Value)
  return customerflowprehandlersp_value_;
}
inline ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* Response::release_customerflowprehandlersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.CustomerFlowPreHandleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* temp = customerflowprehandlersp_value_;
  customerflowprehandlersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_customerflowprehandlersp_value(::CustomerFlow::Interactive::Message::CustomerFlowPreHandleRsp* customerflowprehandlersp_value) {
  delete customerflowprehandlersp_value_;
  customerflowprehandlersp_value_ = customerflowprehandlersp_value;
  if (customerflowprehandlersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.CustomerFlowPreHandleRsp_Value)
}

// .CustomerFlow.Interactive.Message.ShakehandRsp ShakehandRsp_Value = 50;
inline bool Response::has_shakehandrsp_value() const {
  return this != internal_default_instance() && shakehandrsp_value_ != NULL;
}
inline void Response::clear_shakehandrsp_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_value_ != NULL) delete shakehandrsp_value_;
  shakehandrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ShakehandRsp& Response::shakehandrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ShakehandRsp_Value)
  return shakehandrsp_value_ != NULL ? *shakehandrsp_value_
                         : *::CustomerFlow::Interactive::Message::ShakehandRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ShakehandRsp* Response::mutable_shakehandrsp_value() {
  
  if (shakehandrsp_value_ == NULL) {
    shakehandrsp_value_ = new ::CustomerFlow::Interactive::Message::ShakehandRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ShakehandRsp_Value)
  return shakehandrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ShakehandRsp* Response::release_shakehandrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ShakehandRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ShakehandRsp* temp = shakehandrsp_value_;
  shakehandrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_shakehandrsp_value(::CustomerFlow::Interactive::Message::ShakehandRsp* shakehandrsp_value) {
  delete shakehandrsp_value_;
  shakehandrsp_value_ = shakehandrsp_value;
  if (shakehandrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ShakehandRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddGroupRsp AddGroupRsp_Value = 100;
inline bool Response::has_addgrouprsp_value() const {
  return this != internal_default_instance() && addgrouprsp_value_ != NULL;
}
inline void Response::clear_addgrouprsp_value() {
  if (GetArenaNoVirtual() == NULL && addgrouprsp_value_ != NULL) delete addgrouprsp_value_;
  addgrouprsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddGroupRsp& Response::addgrouprsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddGroupRsp_Value)
  return addgrouprsp_value_ != NULL ? *addgrouprsp_value_
                         : *::CustomerFlow::Interactive::Message::AddGroupRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddGroupRsp* Response::mutable_addgrouprsp_value() {
  
  if (addgrouprsp_value_ == NULL) {
    addgrouprsp_value_ = new ::CustomerFlow::Interactive::Message::AddGroupRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddGroupRsp_Value)
  return addgrouprsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddGroupRsp* Response::release_addgrouprsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddGroupRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddGroupRsp* temp = addgrouprsp_value_;
  addgrouprsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addgrouprsp_value(::CustomerFlow::Interactive::Message::AddGroupRsp* addgrouprsp_value) {
  delete addgrouprsp_value_;
  addgrouprsp_value_ = addgrouprsp_value;
  if (addgrouprsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddGroupRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteGroupRsp DeleteGroupRsp_Value = 110;
inline bool Response::has_deletegrouprsp_value() const {
  return this != internal_default_instance() && deletegrouprsp_value_ != NULL;
}
inline void Response::clear_deletegrouprsp_value() {
  if (GetArenaNoVirtual() == NULL && deletegrouprsp_value_ != NULL) delete deletegrouprsp_value_;
  deletegrouprsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteGroupRsp& Response::deletegrouprsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteGroupRsp_Value)
  return deletegrouprsp_value_ != NULL ? *deletegrouprsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteGroupRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteGroupRsp* Response::mutable_deletegrouprsp_value() {
  
  if (deletegrouprsp_value_ == NULL) {
    deletegrouprsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteGroupRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteGroupRsp_Value)
  return deletegrouprsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteGroupRsp* Response::release_deletegrouprsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteGroupRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteGroupRsp* temp = deletegrouprsp_value_;
  deletegrouprsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletegrouprsp_value(::CustomerFlow::Interactive::Message::DeleteGroupRsp* deletegrouprsp_value) {
  delete deletegrouprsp_value_;
  deletegrouprsp_value_ = deletegrouprsp_value;
  if (deletegrouprsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteGroupRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyGroupRsp ModifyGroupRsp_Value = 120;
inline bool Response::has_modifygrouprsp_value() const {
  return this != internal_default_instance() && modifygrouprsp_value_ != NULL;
}
inline void Response::clear_modifygrouprsp_value() {
  if (GetArenaNoVirtual() == NULL && modifygrouprsp_value_ != NULL) delete modifygrouprsp_value_;
  modifygrouprsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyGroupRsp& Response::modifygrouprsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyGroupRsp_Value)
  return modifygrouprsp_value_ != NULL ? *modifygrouprsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyGroupRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyGroupRsp* Response::mutable_modifygrouprsp_value() {
  
  if (modifygrouprsp_value_ == NULL) {
    modifygrouprsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyGroupRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyGroupRsp_Value)
  return modifygrouprsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyGroupRsp* Response::release_modifygrouprsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyGroupRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyGroupRsp* temp = modifygrouprsp_value_;
  modifygrouprsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifygrouprsp_value(::CustomerFlow::Interactive::Message::ModifyGroupRsp* modifygrouprsp_value) {
  delete modifygrouprsp_value_;
  modifygrouprsp_value_ = modifygrouprsp_value;
  if (modifygrouprsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyGroupRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryGroupInfoRsp QueryGroupInfoRsp_Value = 130;
inline bool Response::has_querygroupinforsp_value() const {
  return this != internal_default_instance() && querygroupinforsp_value_ != NULL;
}
inline void Response::clear_querygroupinforsp_value() {
  if (GetArenaNoVirtual() == NULL && querygroupinforsp_value_ != NULL) delete querygroupinforsp_value_;
  querygroupinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp& Response::querygroupinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryGroupInfoRsp_Value)
  return querygroupinforsp_value_ != NULL ? *querygroupinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryGroupInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* Response::mutable_querygroupinforsp_value() {
  
  if (querygroupinforsp_value_ == NULL) {
    querygroupinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryGroupInfoRsp_Value)
  return querygroupinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* Response::release_querygroupinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryGroupInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* temp = querygroupinforsp_value_;
  querygroupinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querygroupinforsp_value(::CustomerFlow::Interactive::Message::QueryGroupInfoRsp* querygroupinforsp_value) {
  delete querygroupinforsp_value_;
  querygroupinforsp_value_ = querygroupinforsp_value;
  if (querygroupinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryGroupInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllGroupRsp QueryAllGroupRsp_Value = 140;
inline bool Response::has_queryallgrouprsp_value() const {
  return this != internal_default_instance() && queryallgrouprsp_value_ != NULL;
}
inline void Response::clear_queryallgrouprsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallgrouprsp_value_ != NULL) delete queryallgrouprsp_value_;
  queryallgrouprsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllGroupRsp& Response::queryallgrouprsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllGroupRsp_Value)
  return queryallgrouprsp_value_ != NULL ? *queryallgrouprsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllGroupRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllGroupRsp* Response::mutable_queryallgrouprsp_value() {
  
  if (queryallgrouprsp_value_ == NULL) {
    queryallgrouprsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllGroupRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllGroupRsp_Value)
  return queryallgrouprsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllGroupRsp* Response::release_queryallgrouprsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllGroupRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllGroupRsp* temp = queryallgrouprsp_value_;
  queryallgrouprsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallgrouprsp_value(::CustomerFlow::Interactive::Message::QueryAllGroupRsp* queryallgrouprsp_value) {
  delete queryallgrouprsp_value_;
  queryallgrouprsp_value_ = queryallgrouprsp_value;
  if (queryallgrouprsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllGroupRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddStoreRsp AddStoreRsp_Value = 150;
inline bool Response::has_addstorersp_value() const {
  return this != internal_default_instance() && addstorersp_value_ != NULL;
}
inline void Response::clear_addstorersp_value() {
  if (GetArenaNoVirtual() == NULL && addstorersp_value_ != NULL) delete addstorersp_value_;
  addstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddStoreRsp& Response::addstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddStoreRsp_Value)
  return addstorersp_value_ != NULL ? *addstorersp_value_
                         : *::CustomerFlow::Interactive::Message::AddStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddStoreRsp* Response::mutable_addstorersp_value() {
  
  if (addstorersp_value_ == NULL) {
    addstorersp_value_ = new ::CustomerFlow::Interactive::Message::AddStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddStoreRsp_Value)
  return addstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddStoreRsp* Response::release_addstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddStoreRsp* temp = addstorersp_value_;
  addstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addstorersp_value(::CustomerFlow::Interactive::Message::AddStoreRsp* addstorersp_value) {
  delete addstorersp_value_;
  addstorersp_value_ = addstorersp_value;
  if (addstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteStoreRsp DeleteStoreRsp_Value = 160;
inline bool Response::has_deletestorersp_value() const {
  return this != internal_default_instance() && deletestorersp_value_ != NULL;
}
inline void Response::clear_deletestorersp_value() {
  if (GetArenaNoVirtual() == NULL && deletestorersp_value_ != NULL) delete deletestorersp_value_;
  deletestorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteStoreRsp& Response::deletestorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteStoreRsp_Value)
  return deletestorersp_value_ != NULL ? *deletestorersp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreRsp* Response::mutable_deletestorersp_value() {
  
  if (deletestorersp_value_ == NULL) {
    deletestorersp_value_ = new ::CustomerFlow::Interactive::Message::DeleteStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteStoreRsp_Value)
  return deletestorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreRsp* Response::release_deletestorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteStoreRsp* temp = deletestorersp_value_;
  deletestorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletestorersp_value(::CustomerFlow::Interactive::Message::DeleteStoreRsp* deletestorersp_value) {
  delete deletestorersp_value_;
  deletestorersp_value_ = deletestorersp_value;
  if (deletestorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyStoreRsp ModifyStoreRsp_Value = 170;
inline bool Response::has_modifystorersp_value() const {
  return this != internal_default_instance() && modifystorersp_value_ != NULL;
}
inline void Response::clear_modifystorersp_value() {
  if (GetArenaNoVirtual() == NULL && modifystorersp_value_ != NULL) delete modifystorersp_value_;
  modifystorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyStoreRsp& Response::modifystorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyStoreRsp_Value)
  return modifystorersp_value_ != NULL ? *modifystorersp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreRsp* Response::mutable_modifystorersp_value() {
  
  if (modifystorersp_value_ == NULL) {
    modifystorersp_value_ = new ::CustomerFlow::Interactive::Message::ModifyStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyStoreRsp_Value)
  return modifystorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreRsp* Response::release_modifystorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyStoreRsp* temp = modifystorersp_value_;
  modifystorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifystorersp_value(::CustomerFlow::Interactive::Message::ModifyStoreRsp* modifystorersp_value) {
  delete modifystorersp_value_;
  modifystorersp_value_ = modifystorersp_value;
  if (modifystorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreInfoRsp QueryStoreInfoRsp_Value = 180;
inline bool Response::has_querystoreinforsp_value() const {
  return this != internal_default_instance() && querystoreinforsp_value_ != NULL;
}
inline void Response::clear_querystoreinforsp_value() {
  if (GetArenaNoVirtual() == NULL && querystoreinforsp_value_ != NULL) delete querystoreinforsp_value_;
  querystoreinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp& Response::querystoreinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryStoreInfoRsp_Value)
  return querystoreinforsp_value_ != NULL ? *querystoreinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* Response::mutable_querystoreinforsp_value() {
  
  if (querystoreinforsp_value_ == NULL) {
    querystoreinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryStoreInfoRsp_Value)
  return querystoreinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* Response::release_querystoreinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryStoreInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* temp = querystoreinforsp_value_;
  querystoreinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querystoreinforsp_value(::CustomerFlow::Interactive::Message::QueryStoreInfoRsp* querystoreinforsp_value) {
  delete querystoreinforsp_value_;
  querystoreinforsp_value_ = querystoreinforsp_value;
  if (querystoreinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryStoreInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllStoreRsp QueryAllStoreRsp_Value = 190;
inline bool Response::has_queryallstorersp_value() const {
  return this != internal_default_instance() && queryallstorersp_value_ != NULL;
}
inline void Response::clear_queryallstorersp_value() {
  if (GetArenaNoVirtual() == NULL && queryallstorersp_value_ != NULL) delete queryallstorersp_value_;
  queryallstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllStoreRsp& Response::queryallstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllStoreRsp_Value)
  return queryallstorersp_value_ != NULL ? *queryallstorersp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreRsp* Response::mutable_queryallstorersp_value() {
  
  if (queryallstorersp_value_ == NULL) {
    queryallstorersp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllStoreRsp_Value)
  return queryallstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreRsp* Response::release_queryallstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllStoreRsp* temp = queryallstorersp_value_;
  queryallstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallstorersp_value(::CustomerFlow::Interactive::Message::QueryAllStoreRsp* queryallstorersp_value) {
  delete queryallstorersp_value_;
  queryallstorersp_value_ = queryallstorersp_value;
  if (queryallstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddEntranceRsp AddEntranceRsp_Value = 200;
inline bool Response::has_addentrancersp_value() const {
  return this != internal_default_instance() && addentrancersp_value_ != NULL;
}
inline void Response::clear_addentrancersp_value() {
  if (GetArenaNoVirtual() == NULL && addentrancersp_value_ != NULL) delete addentrancersp_value_;
  addentrancersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEntranceRsp& Response::addentrancersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddEntranceRsp_Value)
  return addentrancersp_value_ != NULL ? *addentrancersp_value_
                         : *::CustomerFlow::Interactive::Message::AddEntranceRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEntranceRsp* Response::mutable_addentrancersp_value() {
  
  if (addentrancersp_value_ == NULL) {
    addentrancersp_value_ = new ::CustomerFlow::Interactive::Message::AddEntranceRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddEntranceRsp_Value)
  return addentrancersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEntranceRsp* Response::release_addentrancersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddEntranceRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddEntranceRsp* temp = addentrancersp_value_;
  addentrancersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addentrancersp_value(::CustomerFlow::Interactive::Message::AddEntranceRsp* addentrancersp_value) {
  delete addentrancersp_value_;
  addentrancersp_value_ = addentrancersp_value;
  if (addentrancersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddEntranceRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEntranceRsp DeleteEntranceRsp_Value = 210;
inline bool Response::has_deleteentrancersp_value() const {
  return this != internal_default_instance() && deleteentrancersp_value_ != NULL;
}
inline void Response::clear_deleteentrancersp_value() {
  if (GetArenaNoVirtual() == NULL && deleteentrancersp_value_ != NULL) delete deleteentrancersp_value_;
  deleteentrancersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEntranceRsp& Response::deleteentrancersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteEntranceRsp_Value)
  return deleteentrancersp_value_ != NULL ? *deleteentrancersp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEntranceRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceRsp* Response::mutable_deleteentrancersp_value() {
  
  if (deleteentrancersp_value_ == NULL) {
    deleteentrancersp_value_ = new ::CustomerFlow::Interactive::Message::DeleteEntranceRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteEntranceRsp_Value)
  return deleteentrancersp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceRsp* Response::release_deleteentrancersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteEntranceRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEntranceRsp* temp = deleteentrancersp_value_;
  deleteentrancersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deleteentrancersp_value(::CustomerFlow::Interactive::Message::DeleteEntranceRsp* deleteentrancersp_value) {
  delete deleteentrancersp_value_;
  deleteentrancersp_value_ = deleteentrancersp_value;
  if (deleteentrancersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteEntranceRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyEntranceRsp ModifyEntranceRsp_Value = 220;
inline bool Response::has_modifyentrancersp_value() const {
  return this != internal_default_instance() && modifyentrancersp_value_ != NULL;
}
inline void Response::clear_modifyentrancersp_value() {
  if (GetArenaNoVirtual() == NULL && modifyentrancersp_value_ != NULL) delete modifyentrancersp_value_;
  modifyentrancersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyEntranceRsp& Response::modifyentrancersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyEntranceRsp_Value)
  return modifyentrancersp_value_ != NULL ? *modifyentrancersp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyEntranceRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyEntranceRsp* Response::mutable_modifyentrancersp_value() {
  
  if (modifyentrancersp_value_ == NULL) {
    modifyentrancersp_value_ = new ::CustomerFlow::Interactive::Message::ModifyEntranceRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyEntranceRsp_Value)
  return modifyentrancersp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyEntranceRsp* Response::release_modifyentrancersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyEntranceRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyEntranceRsp* temp = modifyentrancersp_value_;
  modifyentrancersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyentrancersp_value(::CustomerFlow::Interactive::Message::ModifyEntranceRsp* modifyentrancersp_value) {
  delete modifyentrancersp_value_;
  modifyentrancersp_value_ = modifyentrancersp_value;
  if (modifyentrancersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyEntranceRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddEntranceDeviceRsp AddEntranceDeviceRsp_Value = 230;
inline bool Response::has_addentrancedevicersp_value() const {
  return this != internal_default_instance() && addentrancedevicersp_value_ != NULL;
}
inline void Response::clear_addentrancedevicersp_value() {
  if (GetArenaNoVirtual() == NULL && addentrancedevicersp_value_ != NULL) delete addentrancedevicersp_value_;
  addentrancedevicersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp& Response::addentrancedevicersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddEntranceDeviceRsp_Value)
  return addentrancedevicersp_value_ != NULL ? *addentrancedevicersp_value_
                         : *::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* Response::mutable_addentrancedevicersp_value() {
  
  if (addentrancedevicersp_value_ == NULL) {
    addentrancedevicersp_value_ = new ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddEntranceDeviceRsp_Value)
  return addentrancedevicersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* Response::release_addentrancedevicersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddEntranceDeviceRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* temp = addentrancedevicersp_value_;
  addentrancedevicersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addentrancedevicersp_value(::CustomerFlow::Interactive::Message::AddEntranceDeviceRsp* addentrancedevicersp_value) {
  delete addentrancedevicersp_value_;
  addentrancedevicersp_value_ = addentrancedevicersp_value;
  if (addentrancedevicersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddEntranceDeviceRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEntranceDeviceRsp DeleteEntranceDeviceRsp_Value = 240;
inline bool Response::has_deleteentrancedevicersp_value() const {
  return this != internal_default_instance() && deleteentrancedevicersp_value_ != NULL;
}
inline void Response::clear_deleteentrancedevicersp_value() {
  if (GetArenaNoVirtual() == NULL && deleteentrancedevicersp_value_ != NULL) delete deleteentrancedevicersp_value_;
  deleteentrancedevicersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp& Response::deleteentrancedevicersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteEntranceDeviceRsp_Value)
  return deleteentrancedevicersp_value_ != NULL ? *deleteentrancedevicersp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* Response::mutable_deleteentrancedevicersp_value() {
  
  if (deleteentrancedevicersp_value_ == NULL) {
    deleteentrancedevicersp_value_ = new ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteEntranceDeviceRsp_Value)
  return deleteentrancedevicersp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* Response::release_deleteentrancedevicersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteEntranceDeviceRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* temp = deleteentrancedevicersp_value_;
  deleteentrancedevicersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deleteentrancedevicersp_value(::CustomerFlow::Interactive::Message::DeleteEntranceDeviceRsp* deleteentrancedevicersp_value) {
  delete deleteentrancedevicersp_value_;
  deleteentrancedevicersp_value_ = deleteentrancedevicersp_value;
  if (deleteentrancedevicersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteEntranceDeviceRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddEventRsp AddEventRsp_Value = 300;
inline bool Response::has_addeventrsp_value() const {
  return this != internal_default_instance() && addeventrsp_value_ != NULL;
}
inline void Response::clear_addeventrsp_value() {
  if (GetArenaNoVirtual() == NULL && addeventrsp_value_ != NULL) delete addeventrsp_value_;
  addeventrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEventRsp& Response::addeventrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddEventRsp_Value)
  return addeventrsp_value_ != NULL ? *addeventrsp_value_
                         : *::CustomerFlow::Interactive::Message::AddEventRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEventRsp* Response::mutable_addeventrsp_value() {
  
  if (addeventrsp_value_ == NULL) {
    addeventrsp_value_ = new ::CustomerFlow::Interactive::Message::AddEventRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddEventRsp_Value)
  return addeventrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEventRsp* Response::release_addeventrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddEventRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddEventRsp* temp = addeventrsp_value_;
  addeventrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addeventrsp_value(::CustomerFlow::Interactive::Message::AddEventRsp* addeventrsp_value) {
  delete addeventrsp_value_;
  addeventrsp_value_ = addeventrsp_value;
  if (addeventrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddEventRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEventRsp DeleteEventRsp_Value = 310;
inline bool Response::has_deleteeventrsp_value() const {
  return this != internal_default_instance() && deleteeventrsp_value_ != NULL;
}
inline void Response::clear_deleteeventrsp_value() {
  if (GetArenaNoVirtual() == NULL && deleteeventrsp_value_ != NULL) delete deleteeventrsp_value_;
  deleteeventrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEventRsp& Response::deleteeventrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteEventRsp_Value)
  return deleteeventrsp_value_ != NULL ? *deleteeventrsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEventRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEventRsp* Response::mutable_deleteeventrsp_value() {
  
  if (deleteeventrsp_value_ == NULL) {
    deleteeventrsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteEventRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteEventRsp_Value)
  return deleteeventrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEventRsp* Response::release_deleteeventrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteEventRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEventRsp* temp = deleteeventrsp_value_;
  deleteeventrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deleteeventrsp_value(::CustomerFlow::Interactive::Message::DeleteEventRsp* deleteeventrsp_value) {
  delete deleteeventrsp_value_;
  deleteeventrsp_value_ = deleteeventrsp_value;
  if (deleteeventrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteEventRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyEventRsp ModifyEventRsp_Value = 320;
inline bool Response::has_modifyeventrsp_value() const {
  return this != internal_default_instance() && modifyeventrsp_value_ != NULL;
}
inline void Response::clear_modifyeventrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifyeventrsp_value_ != NULL) delete modifyeventrsp_value_;
  modifyeventrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyEventRsp& Response::modifyeventrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyEventRsp_Value)
  return modifyeventrsp_value_ != NULL ? *modifyeventrsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyEventRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyEventRsp* Response::mutable_modifyeventrsp_value() {
  
  if (modifyeventrsp_value_ == NULL) {
    modifyeventrsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyEventRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyEventRsp_Value)
  return modifyeventrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyEventRsp* Response::release_modifyeventrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyEventRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyEventRsp* temp = modifyeventrsp_value_;
  modifyeventrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyeventrsp_value(::CustomerFlow::Interactive::Message::ModifyEventRsp* modifyeventrsp_value) {
  delete modifyeventrsp_value_;
  modifyeventrsp_value_ = modifyeventrsp_value;
  if (modifyeventrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyEventRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryEventInfoRsp QueryEventInfoRsp_Value = 330;
inline bool Response::has_queryeventinforsp_value() const {
  return this != internal_default_instance() && queryeventinforsp_value_ != NULL;
}
inline void Response::clear_queryeventinforsp_value() {
  if (GetArenaNoVirtual() == NULL && queryeventinforsp_value_ != NULL) delete queryeventinforsp_value_;
  queryeventinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryEventInfoRsp& Response::queryeventinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryEventInfoRsp_Value)
  return queryeventinforsp_value_ != NULL ? *queryeventinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryEventInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryEventInfoRsp* Response::mutable_queryeventinforsp_value() {
  
  if (queryeventinforsp_value_ == NULL) {
    queryeventinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryEventInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryEventInfoRsp_Value)
  return queryeventinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryEventInfoRsp* Response::release_queryeventinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryEventInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryEventInfoRsp* temp = queryeventinforsp_value_;
  queryeventinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryeventinforsp_value(::CustomerFlow::Interactive::Message::QueryEventInfoRsp* queryeventinforsp_value) {
  delete queryeventinforsp_value_;
  queryeventinforsp_value_ = queryeventinforsp_value;
  if (queryeventinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryEventInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllEventRsp QueryAllEventRsp_Value = 340;
inline bool Response::has_queryalleventrsp_value() const {
  return this != internal_default_instance() && queryalleventrsp_value_ != NULL;
}
inline void Response::clear_queryalleventrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryalleventrsp_value_ != NULL) delete queryalleventrsp_value_;
  queryalleventrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllEventRsp& Response::queryalleventrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllEventRsp_Value)
  return queryalleventrsp_value_ != NULL ? *queryalleventrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllEventRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllEventRsp* Response::mutable_queryalleventrsp_value() {
  
  if (queryalleventrsp_value_ == NULL) {
    queryalleventrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllEventRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllEventRsp_Value)
  return queryalleventrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllEventRsp* Response::release_queryalleventrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllEventRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllEventRsp* temp = queryalleventrsp_value_;
  queryalleventrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryalleventrsp_value(::CustomerFlow::Interactive::Message::QueryAllEventRsp* queryalleventrsp_value) {
  delete queryalleventrsp_value_;
  queryalleventrsp_value_ = queryalleventrsp_value;
  if (queryalleventrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllEventRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddSmartGuardStoreRsp AddSmartGuardStoreRsp_Value = 350;
inline bool Response::has_addsmartguardstorersp_value() const {
  return this != internal_default_instance() && addsmartguardstorersp_value_ != NULL;
}
inline void Response::clear_addsmartguardstorersp_value() {
  if (GetArenaNoVirtual() == NULL && addsmartguardstorersp_value_ != NULL) delete addsmartguardstorersp_value_;
  addsmartguardstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp& Response::addsmartguardstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddSmartGuardStoreRsp_Value)
  return addsmartguardstorersp_value_ != NULL ? *addsmartguardstorersp_value_
                         : *::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* Response::mutable_addsmartguardstorersp_value() {
  
  if (addsmartguardstorersp_value_ == NULL) {
    addsmartguardstorersp_value_ = new ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddSmartGuardStoreRsp_Value)
  return addsmartguardstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* Response::release_addsmartguardstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddSmartGuardStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* temp = addsmartguardstorersp_value_;
  addsmartguardstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addsmartguardstorersp_value(::CustomerFlow::Interactive::Message::AddSmartGuardStoreRsp* addsmartguardstorersp_value) {
  delete addsmartguardstorersp_value_;
  addsmartguardstorersp_value_ = addsmartguardstorersp_value;
  if (addsmartguardstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddSmartGuardStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteSmartGuardStoreRsp DeleteSmartGuardStoreRsp_Value = 360;
inline bool Response::has_deletesmartguardstorersp_value() const {
  return this != internal_default_instance() && deletesmartguardstorersp_value_ != NULL;
}
inline void Response::clear_deletesmartguardstorersp_value() {
  if (GetArenaNoVirtual() == NULL && deletesmartguardstorersp_value_ != NULL) delete deletesmartguardstorersp_value_;
  deletesmartguardstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp& Response::deletesmartguardstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteSmartGuardStoreRsp_Value)
  return deletesmartguardstorersp_value_ != NULL ? *deletesmartguardstorersp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* Response::mutable_deletesmartguardstorersp_value() {
  
  if (deletesmartguardstorersp_value_ == NULL) {
    deletesmartguardstorersp_value_ = new ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteSmartGuardStoreRsp_Value)
  return deletesmartguardstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* Response::release_deletesmartguardstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteSmartGuardStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* temp = deletesmartguardstorersp_value_;
  deletesmartguardstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletesmartguardstorersp_value(::CustomerFlow::Interactive::Message::DeleteSmartGuardStoreRsp* deletesmartguardstorersp_value) {
  delete deletesmartguardstorersp_value_;
  deletesmartguardstorersp_value_ = deletesmartguardstorersp_value;
  if (deletesmartguardstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteSmartGuardStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifySmartGuardStoreRsp ModifySmartGuardStoreRsp_Value = 370;
inline bool Response::has_modifysmartguardstorersp_value() const {
  return this != internal_default_instance() && modifysmartguardstorersp_value_ != NULL;
}
inline void Response::clear_modifysmartguardstorersp_value() {
  if (GetArenaNoVirtual() == NULL && modifysmartguardstorersp_value_ != NULL) delete modifysmartguardstorersp_value_;
  modifysmartguardstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp& Response::modifysmartguardstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifySmartGuardStoreRsp_Value)
  return modifysmartguardstorersp_value_ != NULL ? *modifysmartguardstorersp_value_
                         : *::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* Response::mutable_modifysmartguardstorersp_value() {
  
  if (modifysmartguardstorersp_value_ == NULL) {
    modifysmartguardstorersp_value_ = new ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifySmartGuardStoreRsp_Value)
  return modifysmartguardstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* Response::release_modifysmartguardstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifySmartGuardStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* temp = modifysmartguardstorersp_value_;
  modifysmartguardstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifysmartguardstorersp_value(::CustomerFlow::Interactive::Message::ModifySmartGuardStoreRsp* modifysmartguardstorersp_value) {
  delete modifysmartguardstorersp_value_;
  modifysmartguardstorersp_value_ = modifysmartguardstorersp_value;
  if (modifysmartguardstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifySmartGuardStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.QuerySmartGuardStoreInfoRsp QuerySmartGuardStoreInfoRsp_Value = 380;
inline bool Response::has_querysmartguardstoreinforsp_value() const {
  return this != internal_default_instance() && querysmartguardstoreinforsp_value_ != NULL;
}
inline void Response::clear_querysmartguardstoreinforsp_value() {
  if (GetArenaNoVirtual() == NULL && querysmartguardstoreinforsp_value_ != NULL) delete querysmartguardstoreinforsp_value_;
  querysmartguardstoreinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp& Response::querysmartguardstoreinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QuerySmartGuardStoreInfoRsp_Value)
  return querysmartguardstoreinforsp_value_ != NULL ? *querysmartguardstoreinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* Response::mutable_querysmartguardstoreinforsp_value() {
  
  if (querysmartguardstoreinforsp_value_ == NULL) {
    querysmartguardstoreinforsp_value_ = new ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QuerySmartGuardStoreInfoRsp_Value)
  return querysmartguardstoreinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* Response::release_querysmartguardstoreinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QuerySmartGuardStoreInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* temp = querysmartguardstoreinforsp_value_;
  querysmartguardstoreinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querysmartguardstoreinforsp_value(::CustomerFlow::Interactive::Message::QuerySmartGuardStoreInfoRsp* querysmartguardstoreinforsp_value) {
  delete querysmartguardstoreinforsp_value_;
  querysmartguardstoreinforsp_value_ = querysmartguardstoreinforsp_value;
  if (querysmartguardstoreinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QuerySmartGuardStoreInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllSmartGuardStoreRsp QueryAllSmartGuardStoreRsp_Value = 390;
inline bool Response::has_queryallsmartguardstorersp_value() const {
  return this != internal_default_instance() && queryallsmartguardstorersp_value_ != NULL;
}
inline void Response::clear_queryallsmartguardstorersp_value() {
  if (GetArenaNoVirtual() == NULL && queryallsmartguardstorersp_value_ != NULL) delete queryallsmartguardstorersp_value_;
  queryallsmartguardstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp& Response::queryallsmartguardstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllSmartGuardStoreRsp_Value)
  return queryallsmartguardstorersp_value_ != NULL ? *queryallsmartguardstorersp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* Response::mutable_queryallsmartguardstorersp_value() {
  
  if (queryallsmartguardstorersp_value_ == NULL) {
    queryallsmartguardstorersp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllSmartGuardStoreRsp_Value)
  return queryallsmartguardstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* Response::release_queryallsmartguardstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllSmartGuardStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* temp = queryallsmartguardstorersp_value_;
  queryallsmartguardstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallsmartguardstorersp_value(::CustomerFlow::Interactive::Message::QueryAllSmartGuardStoreRsp* queryallsmartguardstorersp_value) {
  delete queryallsmartguardstorersp_value_;
  queryallsmartguardstorersp_value_ = queryallsmartguardstorersp_value;
  if (queryallsmartguardstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllSmartGuardStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddRegularPatrolRsp AddRegularPatrolRsp_Value = 400;
inline bool Response::has_addregularpatrolrsp_value() const {
  return this != internal_default_instance() && addregularpatrolrsp_value_ != NULL;
}
inline void Response::clear_addregularpatrolrsp_value() {
  if (GetArenaNoVirtual() == NULL && addregularpatrolrsp_value_ != NULL) delete addregularpatrolrsp_value_;
  addregularpatrolrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp& Response::addregularpatrolrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddRegularPatrolRsp_Value)
  return addregularpatrolrsp_value_ != NULL ? *addregularpatrolrsp_value_
                         : *::CustomerFlow::Interactive::Message::AddRegularPatrolRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* Response::mutable_addregularpatrolrsp_value() {
  
  if (addregularpatrolrsp_value_ == NULL) {
    addregularpatrolrsp_value_ = new ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddRegularPatrolRsp_Value)
  return addregularpatrolrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* Response::release_addregularpatrolrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddRegularPatrolRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* temp = addregularpatrolrsp_value_;
  addregularpatrolrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addregularpatrolrsp_value(::CustomerFlow::Interactive::Message::AddRegularPatrolRsp* addregularpatrolrsp_value) {
  delete addregularpatrolrsp_value_;
  addregularpatrolrsp_value_ = addregularpatrolrsp_value;
  if (addregularpatrolrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddRegularPatrolRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteRegularPatrolRsp DeleteRegularPatrolRsp_Value = 410;
inline bool Response::has_deleteregularpatrolrsp_value() const {
  return this != internal_default_instance() && deleteregularpatrolrsp_value_ != NULL;
}
inline void Response::clear_deleteregularpatrolrsp_value() {
  if (GetArenaNoVirtual() == NULL && deleteregularpatrolrsp_value_ != NULL) delete deleteregularpatrolrsp_value_;
  deleteregularpatrolrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp& Response::deleteregularpatrolrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteRegularPatrolRsp_Value)
  return deleteregularpatrolrsp_value_ != NULL ? *deleteregularpatrolrsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* Response::mutable_deleteregularpatrolrsp_value() {
  
  if (deleteregularpatrolrsp_value_ == NULL) {
    deleteregularpatrolrsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteRegularPatrolRsp_Value)
  return deleteregularpatrolrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* Response::release_deleteregularpatrolrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteRegularPatrolRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* temp = deleteregularpatrolrsp_value_;
  deleteregularpatrolrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deleteregularpatrolrsp_value(::CustomerFlow::Interactive::Message::DeleteRegularPatrolRsp* deleteregularpatrolrsp_value) {
  delete deleteregularpatrolrsp_value_;
  deleteregularpatrolrsp_value_ = deleteregularpatrolrsp_value;
  if (deleteregularpatrolrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteRegularPatrolRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyRegularPatrolRsp ModifyRegularPatrolRsp_Value = 420;
inline bool Response::has_modifyregularpatrolrsp_value() const {
  return this != internal_default_instance() && modifyregularpatrolrsp_value_ != NULL;
}
inline void Response::clear_modifyregularpatrolrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifyregularpatrolrsp_value_ != NULL) delete modifyregularpatrolrsp_value_;
  modifyregularpatrolrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp& Response::modifyregularpatrolrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyRegularPatrolRsp_Value)
  return modifyregularpatrolrsp_value_ != NULL ? *modifyregularpatrolrsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* Response::mutable_modifyregularpatrolrsp_value() {
  
  if (modifyregularpatrolrsp_value_ == NULL) {
    modifyregularpatrolrsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyRegularPatrolRsp_Value)
  return modifyregularpatrolrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* Response::release_modifyregularpatrolrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyRegularPatrolRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* temp = modifyregularpatrolrsp_value_;
  modifyregularpatrolrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyregularpatrolrsp_value(::CustomerFlow::Interactive::Message::ModifyRegularPatrolRsp* modifyregularpatrolrsp_value) {
  delete modifyregularpatrolrsp_value_;
  modifyregularpatrolrsp_value_ = modifyregularpatrolrsp_value;
  if (modifyregularpatrolrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyRegularPatrolRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryRegularPatrolInfoRsp QueryRegularPatrolInfoRsp_Value = 430;
inline bool Response::has_queryregularpatrolinforsp_value() const {
  return this != internal_default_instance() && queryregularpatrolinforsp_value_ != NULL;
}
inline void Response::clear_queryregularpatrolinforsp_value() {
  if (GetArenaNoVirtual() == NULL && queryregularpatrolinforsp_value_ != NULL) delete queryregularpatrolinforsp_value_;
  queryregularpatrolinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp& Response::queryregularpatrolinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryRegularPatrolInfoRsp_Value)
  return queryregularpatrolinforsp_value_ != NULL ? *queryregularpatrolinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* Response::mutable_queryregularpatrolinforsp_value() {
  
  if (queryregularpatrolinforsp_value_ == NULL) {
    queryregularpatrolinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryRegularPatrolInfoRsp_Value)
  return queryregularpatrolinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* Response::release_queryregularpatrolinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryRegularPatrolInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* temp = queryregularpatrolinforsp_value_;
  queryregularpatrolinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryregularpatrolinforsp_value(::CustomerFlow::Interactive::Message::QueryRegularPatrolInfoRsp* queryregularpatrolinforsp_value) {
  delete queryregularpatrolinforsp_value_;
  queryregularpatrolinforsp_value_ = queryregularpatrolinforsp_value;
  if (queryregularpatrolinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryRegularPatrolInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllRegularPatrolRsp QueryAllRegularPatrolRsp_Value = 440;
inline bool Response::has_queryallregularpatrolrsp_value() const {
  return this != internal_default_instance() && queryallregularpatrolrsp_value_ != NULL;
}
inline void Response::clear_queryallregularpatrolrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallregularpatrolrsp_value_ != NULL) delete queryallregularpatrolrsp_value_;
  queryallregularpatrolrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp& Response::queryallregularpatrolrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllRegularPatrolRsp_Value)
  return queryallregularpatrolrsp_value_ != NULL ? *queryallregularpatrolrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* Response::mutable_queryallregularpatrolrsp_value() {
  
  if (queryallregularpatrolrsp_value_ == NULL) {
    queryallregularpatrolrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllRegularPatrolRsp_Value)
  return queryallregularpatrolrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* Response::release_queryallregularpatrolrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllRegularPatrolRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* temp = queryallregularpatrolrsp_value_;
  queryallregularpatrolrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallregularpatrolrsp_value(::CustomerFlow::Interactive::Message::QueryAllRegularPatrolRsp* queryallregularpatrolrsp_value) {
  delete queryallregularpatrolrsp_value_;
  queryallregularpatrolrsp_value_ = queryallregularpatrolrsp_value;
  if (queryallregularpatrolrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllRegularPatrolRsp_Value)
}

// .CustomerFlow.Interactive.Message.UserJoinStoreRsp UserJoinStoreRsp_Value = 500;
inline bool Response::has_userjoinstorersp_value() const {
  return this != internal_default_instance() && userjoinstorersp_value_ != NULL;
}
inline void Response::clear_userjoinstorersp_value() {
  if (GetArenaNoVirtual() == NULL && userjoinstorersp_value_ != NULL) delete userjoinstorersp_value_;
  userjoinstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UserJoinStoreRsp& Response::userjoinstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.UserJoinStoreRsp_Value)
  return userjoinstorersp_value_ != NULL ? *userjoinstorersp_value_
                         : *::CustomerFlow::Interactive::Message::UserJoinStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UserJoinStoreRsp* Response::mutable_userjoinstorersp_value() {
  
  if (userjoinstorersp_value_ == NULL) {
    userjoinstorersp_value_ = new ::CustomerFlow::Interactive::Message::UserJoinStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.UserJoinStoreRsp_Value)
  return userjoinstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::UserJoinStoreRsp* Response::release_userjoinstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.UserJoinStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::UserJoinStoreRsp* temp = userjoinstorersp_value_;
  userjoinstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_userjoinstorersp_value(::CustomerFlow::Interactive::Message::UserJoinStoreRsp* userjoinstorersp_value) {
  delete userjoinstorersp_value_;
  userjoinstorersp_value_ = userjoinstorersp_value;
  if (userjoinstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.UserJoinStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.UserQuitStoreRsp UserQuitStoreRsp_Value = 510;
inline bool Response::has_userquitstorersp_value() const {
  return this != internal_default_instance() && userquitstorersp_value_ != NULL;
}
inline void Response::clear_userquitstorersp_value() {
  if (GetArenaNoVirtual() == NULL && userquitstorersp_value_ != NULL) delete userquitstorersp_value_;
  userquitstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UserQuitStoreRsp& Response::userquitstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.UserQuitStoreRsp_Value)
  return userquitstorersp_value_ != NULL ? *userquitstorersp_value_
                         : *::CustomerFlow::Interactive::Message::UserQuitStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UserQuitStoreRsp* Response::mutable_userquitstorersp_value() {
  
  if (userquitstorersp_value_ == NULL) {
    userquitstorersp_value_ = new ::CustomerFlow::Interactive::Message::UserQuitStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.UserQuitStoreRsp_Value)
  return userquitstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::UserQuitStoreRsp* Response::release_userquitstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.UserQuitStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::UserQuitStoreRsp* temp = userquitstorersp_value_;
  userquitstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_userquitstorersp_value(::CustomerFlow::Interactive::Message::UserQuitStoreRsp* userquitstorersp_value) {
  delete userquitstorersp_value_;
  userquitstorersp_value_ = userquitstorersp_value;
  if (userquitstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.UserQuitStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreAllUserRsp QueryStoreAllUserRsp_Value = 520;
inline bool Response::has_querystorealluserrsp_value() const {
  return this != internal_default_instance() && querystorealluserrsp_value_ != NULL;
}
inline void Response::clear_querystorealluserrsp_value() {
  if (GetArenaNoVirtual() == NULL && querystorealluserrsp_value_ != NULL) delete querystorealluserrsp_value_;
  querystorealluserrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp& Response::querystorealluserrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryStoreAllUserRsp_Value)
  return querystorealluserrsp_value_ != NULL ? *querystorealluserrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* Response::mutable_querystorealluserrsp_value() {
  
  if (querystorealluserrsp_value_ == NULL) {
    querystorealluserrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryStoreAllUserRsp_Value)
  return querystorealluserrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* Response::release_querystorealluserrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryStoreAllUserRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* temp = querystorealluserrsp_value_;
  querystorealluserrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querystorealluserrsp_value(::CustomerFlow::Interactive::Message::QueryStoreAllUserRsp* querystorealluserrsp_value) {
  delete querystorealluserrsp_value_;
  querystorealluserrsp_value_ = querystorealluserrsp_value;
  if (querystorealluserrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryStoreAllUserRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryCompanyAllUserRsp QueryCompanyAllUserRsp_Value = 530;
inline bool Response::has_querycompanyalluserrsp_value() const {
  return this != internal_default_instance() && querycompanyalluserrsp_value_ != NULL;
}
inline void Response::clear_querycompanyalluserrsp_value() {
  if (GetArenaNoVirtual() == NULL && querycompanyalluserrsp_value_ != NULL) delete querycompanyalluserrsp_value_;
  querycompanyalluserrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp& Response::querycompanyalluserrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryCompanyAllUserRsp_Value)
  return querycompanyalluserrsp_value_ != NULL ? *querycompanyalluserrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* Response::mutable_querycompanyalluserrsp_value() {
  
  if (querycompanyalluserrsp_value_ == NULL) {
    querycompanyalluserrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryCompanyAllUserRsp_Value)
  return querycompanyalluserrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* Response::release_querycompanyalluserrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryCompanyAllUserRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* temp = querycompanyalluserrsp_value_;
  querycompanyalluserrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querycompanyalluserrsp_value(::CustomerFlow::Interactive::Message::QueryCompanyAllUserRsp* querycompanyalluserrsp_value) {
  delete querycompanyalluserrsp_value_;
  querycompanyalluserrsp_value_ = querycompanyalluserrsp_value;
  if (querycompanyalluserrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryCompanyAllUserRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddVIPCustomerRsp AddVIPCustomerRsp_Value = 800;
inline bool Response::has_addvipcustomerrsp_value() const {
  return this != internal_default_instance() && addvipcustomerrsp_value_ != NULL;
}
inline void Response::clear_addvipcustomerrsp_value() {
  if (GetArenaNoVirtual() == NULL && addvipcustomerrsp_value_ != NULL) delete addvipcustomerrsp_value_;
  addvipcustomerrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp& Response::addvipcustomerrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddVIPCustomerRsp_Value)
  return addvipcustomerrsp_value_ != NULL ? *addvipcustomerrsp_value_
                         : *::CustomerFlow::Interactive::Message::AddVIPCustomerRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* Response::mutable_addvipcustomerrsp_value() {
  
  if (addvipcustomerrsp_value_ == NULL) {
    addvipcustomerrsp_value_ = new ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddVIPCustomerRsp_Value)
  return addvipcustomerrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* Response::release_addvipcustomerrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddVIPCustomerRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* temp = addvipcustomerrsp_value_;
  addvipcustomerrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addvipcustomerrsp_value(::CustomerFlow::Interactive::Message::AddVIPCustomerRsp* addvipcustomerrsp_value) {
  delete addvipcustomerrsp_value_;
  addvipcustomerrsp_value_ = addvipcustomerrsp_value;
  if (addvipcustomerrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddVIPCustomerRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteVIPCustomerRsp DeleteVIPCustomerRsp_Value = 810;
inline bool Response::has_deletevipcustomerrsp_value() const {
  return this != internal_default_instance() && deletevipcustomerrsp_value_ != NULL;
}
inline void Response::clear_deletevipcustomerrsp_value() {
  if (GetArenaNoVirtual() == NULL && deletevipcustomerrsp_value_ != NULL) delete deletevipcustomerrsp_value_;
  deletevipcustomerrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp& Response::deletevipcustomerrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteVIPCustomerRsp_Value)
  return deletevipcustomerrsp_value_ != NULL ? *deletevipcustomerrsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* Response::mutable_deletevipcustomerrsp_value() {
  
  if (deletevipcustomerrsp_value_ == NULL) {
    deletevipcustomerrsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteVIPCustomerRsp_Value)
  return deletevipcustomerrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* Response::release_deletevipcustomerrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteVIPCustomerRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* temp = deletevipcustomerrsp_value_;
  deletevipcustomerrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletevipcustomerrsp_value(::CustomerFlow::Interactive::Message::DeleteVIPCustomerRsp* deletevipcustomerrsp_value) {
  delete deletevipcustomerrsp_value_;
  deletevipcustomerrsp_value_ = deletevipcustomerrsp_value;
  if (deletevipcustomerrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteVIPCustomerRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyVIPCustomerRsp ModifyVIPCustomerRsp_Value = 820;
inline bool Response::has_modifyvipcustomerrsp_value() const {
  return this != internal_default_instance() && modifyvipcustomerrsp_value_ != NULL;
}
inline void Response::clear_modifyvipcustomerrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifyvipcustomerrsp_value_ != NULL) delete modifyvipcustomerrsp_value_;
  modifyvipcustomerrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp& Response::modifyvipcustomerrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyVIPCustomerRsp_Value)
  return modifyvipcustomerrsp_value_ != NULL ? *modifyvipcustomerrsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* Response::mutable_modifyvipcustomerrsp_value() {
  
  if (modifyvipcustomerrsp_value_ == NULL) {
    modifyvipcustomerrsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyVIPCustomerRsp_Value)
  return modifyvipcustomerrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* Response::release_modifyvipcustomerrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyVIPCustomerRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* temp = modifyvipcustomerrsp_value_;
  modifyvipcustomerrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyvipcustomerrsp_value(::CustomerFlow::Interactive::Message::ModifyVIPCustomerRsp* modifyvipcustomerrsp_value) {
  delete modifyvipcustomerrsp_value_;
  modifyvipcustomerrsp_value_ = modifyvipcustomerrsp_value;
  if (modifyvipcustomerrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyVIPCustomerRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryVIPCustomerInfoRsp QueryVIPCustomerInfoRsp_Value = 830;
inline bool Response::has_queryvipcustomerinforsp_value() const {
  return this != internal_default_instance() && queryvipcustomerinforsp_value_ != NULL;
}
inline void Response::clear_queryvipcustomerinforsp_value() {
  if (GetArenaNoVirtual() == NULL && queryvipcustomerinforsp_value_ != NULL) delete queryvipcustomerinforsp_value_;
  queryvipcustomerinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp& Response::queryvipcustomerinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryVIPCustomerInfoRsp_Value)
  return queryvipcustomerinforsp_value_ != NULL ? *queryvipcustomerinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* Response::mutable_queryvipcustomerinforsp_value() {
  
  if (queryvipcustomerinforsp_value_ == NULL) {
    queryvipcustomerinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryVIPCustomerInfoRsp_Value)
  return queryvipcustomerinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* Response::release_queryvipcustomerinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryVIPCustomerInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* temp = queryvipcustomerinforsp_value_;
  queryvipcustomerinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryvipcustomerinforsp_value(::CustomerFlow::Interactive::Message::QueryVIPCustomerInfoRsp* queryvipcustomerinforsp_value) {
  delete queryvipcustomerinforsp_value_;
  queryvipcustomerinforsp_value_ = queryvipcustomerinforsp_value;
  if (queryvipcustomerinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryVIPCustomerInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllVIPCustomerRsp QueryAllVIPCustomerRsp_Value = 840;
inline bool Response::has_queryallvipcustomerrsp_value() const {
  return this != internal_default_instance() && queryallvipcustomerrsp_value_ != NULL;
}
inline void Response::clear_queryallvipcustomerrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallvipcustomerrsp_value_ != NULL) delete queryallvipcustomerrsp_value_;
  queryallvipcustomerrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp& Response::queryallvipcustomerrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllVIPCustomerRsp_Value)
  return queryallvipcustomerrsp_value_ != NULL ? *queryallvipcustomerrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* Response::mutable_queryallvipcustomerrsp_value() {
  
  if (queryallvipcustomerrsp_value_ == NULL) {
    queryallvipcustomerrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllVIPCustomerRsp_Value)
  return queryallvipcustomerrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* Response::release_queryallvipcustomerrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllVIPCustomerRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* temp = queryallvipcustomerrsp_value_;
  queryallvipcustomerrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallvipcustomerrsp_value(::CustomerFlow::Interactive::Message::QueryAllVIPCustomerRsp* queryallvipcustomerrsp_value) {
  delete queryallvipcustomerrsp_value_;
  queryallvipcustomerrsp_value_ = queryallvipcustomerrsp_value;
  if (queryallvipcustomerrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllVIPCustomerRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddVIPConsumeHistoryRsp AddVIPConsumeHistoryRsp_Value = 850;
inline bool Response::has_addvipconsumehistoryrsp_value() const {
  return this != internal_default_instance() && addvipconsumehistoryrsp_value_ != NULL;
}
inline void Response::clear_addvipconsumehistoryrsp_value() {
  if (GetArenaNoVirtual() == NULL && addvipconsumehistoryrsp_value_ != NULL) delete addvipconsumehistoryrsp_value_;
  addvipconsumehistoryrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp& Response::addvipconsumehistoryrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddVIPConsumeHistoryRsp_Value)
  return addvipconsumehistoryrsp_value_ != NULL ? *addvipconsumehistoryrsp_value_
                         : *::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* Response::mutable_addvipconsumehistoryrsp_value() {
  
  if (addvipconsumehistoryrsp_value_ == NULL) {
    addvipconsumehistoryrsp_value_ = new ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddVIPConsumeHistoryRsp_Value)
  return addvipconsumehistoryrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* Response::release_addvipconsumehistoryrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddVIPConsumeHistoryRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* temp = addvipconsumehistoryrsp_value_;
  addvipconsumehistoryrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addvipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::AddVIPConsumeHistoryRsp* addvipconsumehistoryrsp_value) {
  delete addvipconsumehistoryrsp_value_;
  addvipconsumehistoryrsp_value_ = addvipconsumehistoryrsp_value;
  if (addvipconsumehistoryrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddVIPConsumeHistoryRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteVIPConsumeHistoryRsp DeleteVIPConsumeHistoryRsp_Value = 860;
inline bool Response::has_deletevipconsumehistoryrsp_value() const {
  return this != internal_default_instance() && deletevipconsumehistoryrsp_value_ != NULL;
}
inline void Response::clear_deletevipconsumehistoryrsp_value() {
  if (GetArenaNoVirtual() == NULL && deletevipconsumehistoryrsp_value_ != NULL) delete deletevipconsumehistoryrsp_value_;
  deletevipconsumehistoryrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp& Response::deletevipconsumehistoryrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteVIPConsumeHistoryRsp_Value)
  return deletevipconsumehistoryrsp_value_ != NULL ? *deletevipconsumehistoryrsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* Response::mutable_deletevipconsumehistoryrsp_value() {
  
  if (deletevipconsumehistoryrsp_value_ == NULL) {
    deletevipconsumehistoryrsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteVIPConsumeHistoryRsp_Value)
  return deletevipconsumehistoryrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* Response::release_deletevipconsumehistoryrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteVIPConsumeHistoryRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* temp = deletevipconsumehistoryrsp_value_;
  deletevipconsumehistoryrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletevipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::DeleteVIPConsumeHistoryRsp* deletevipconsumehistoryrsp_value) {
  delete deletevipconsumehistoryrsp_value_;
  deletevipconsumehistoryrsp_value_ = deletevipconsumehistoryrsp_value;
  if (deletevipconsumehistoryrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteVIPConsumeHistoryRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyVIPConsumeHistoryRsp ModifyVIPConsumeHistoryRsp_Value = 870;
inline bool Response::has_modifyvipconsumehistoryrsp_value() const {
  return this != internal_default_instance() && modifyvipconsumehistoryrsp_value_ != NULL;
}
inline void Response::clear_modifyvipconsumehistoryrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifyvipconsumehistoryrsp_value_ != NULL) delete modifyvipconsumehistoryrsp_value_;
  modifyvipconsumehistoryrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp& Response::modifyvipconsumehistoryrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyVIPConsumeHistoryRsp_Value)
  return modifyvipconsumehistoryrsp_value_ != NULL ? *modifyvipconsumehistoryrsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* Response::mutable_modifyvipconsumehistoryrsp_value() {
  
  if (modifyvipconsumehistoryrsp_value_ == NULL) {
    modifyvipconsumehistoryrsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyVIPConsumeHistoryRsp_Value)
  return modifyvipconsumehistoryrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* Response::release_modifyvipconsumehistoryrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyVIPConsumeHistoryRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* temp = modifyvipconsumehistoryrsp_value_;
  modifyvipconsumehistoryrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyvipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::ModifyVIPConsumeHistoryRsp* modifyvipconsumehistoryrsp_value) {
  delete modifyvipconsumehistoryrsp_value_;
  modifyvipconsumehistoryrsp_value_ = modifyvipconsumehistoryrsp_value;
  if (modifyvipconsumehistoryrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyVIPConsumeHistoryRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllVIPConsumeHistoryRsp QueryAllVIPConsumeHistoryRsp_Value = 880;
inline bool Response::has_queryallvipconsumehistoryrsp_value() const {
  return this != internal_default_instance() && queryallvipconsumehistoryrsp_value_ != NULL;
}
inline void Response::clear_queryallvipconsumehistoryrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallvipconsumehistoryrsp_value_ != NULL) delete queryallvipconsumehistoryrsp_value_;
  queryallvipconsumehistoryrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp& Response::queryallvipconsumehistoryrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllVIPConsumeHistoryRsp_Value)
  return queryallvipconsumehistoryrsp_value_ != NULL ? *queryallvipconsumehistoryrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* Response::mutable_queryallvipconsumehistoryrsp_value() {
  
  if (queryallvipconsumehistoryrsp_value_ == NULL) {
    queryallvipconsumehistoryrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllVIPConsumeHistoryRsp_Value)
  return queryallvipconsumehistoryrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* Response::release_queryallvipconsumehistoryrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllVIPConsumeHistoryRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* temp = queryallvipconsumehistoryrsp_value_;
  queryallvipconsumehistoryrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallvipconsumehistoryrsp_value(::CustomerFlow::Interactive::Message::QueryAllVIPConsumeHistoryRsp* queryallvipconsumehistoryrsp_value) {
  delete queryallvipconsumehistoryrsp_value_;
  queryallvipconsumehistoryrsp_value_ = queryallvipconsumehistoryrsp_value;
  if (queryallvipconsumehistoryrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllVIPConsumeHistoryRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddEvaluationTemplateRsp AddEvaluationTemplateRsp_Value = 900;
inline bool Response::has_addevaluationtemplatersp_value() const {
  return this != internal_default_instance() && addevaluationtemplatersp_value_ != NULL;
}
inline void Response::clear_addevaluationtemplatersp_value() {
  if (GetArenaNoVirtual() == NULL && addevaluationtemplatersp_value_ != NULL) delete addevaluationtemplatersp_value_;
  addevaluationtemplatersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp& Response::addevaluationtemplatersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddEvaluationTemplateRsp_Value)
  return addevaluationtemplatersp_value_ != NULL ? *addevaluationtemplatersp_value_
                         : *::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* Response::mutable_addevaluationtemplatersp_value() {
  
  if (addevaluationtemplatersp_value_ == NULL) {
    addevaluationtemplatersp_value_ = new ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddEvaluationTemplateRsp_Value)
  return addevaluationtemplatersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* Response::release_addevaluationtemplatersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddEvaluationTemplateRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* temp = addevaluationtemplatersp_value_;
  addevaluationtemplatersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::AddEvaluationTemplateRsp* addevaluationtemplatersp_value) {
  delete addevaluationtemplatersp_value_;
  addevaluationtemplatersp_value_ = addevaluationtemplatersp_value;
  if (addevaluationtemplatersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddEvaluationTemplateRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteEvaluationTemplateRsp DeleteEvaluationTemplateRsp_Value = 910;
inline bool Response::has_deleteevaluationtemplatersp_value() const {
  return this != internal_default_instance() && deleteevaluationtemplatersp_value_ != NULL;
}
inline void Response::clear_deleteevaluationtemplatersp_value() {
  if (GetArenaNoVirtual() == NULL && deleteevaluationtemplatersp_value_ != NULL) delete deleteevaluationtemplatersp_value_;
  deleteevaluationtemplatersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp& Response::deleteevaluationtemplatersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteEvaluationTemplateRsp_Value)
  return deleteevaluationtemplatersp_value_ != NULL ? *deleteevaluationtemplatersp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* Response::mutable_deleteevaluationtemplatersp_value() {
  
  if (deleteevaluationtemplatersp_value_ == NULL) {
    deleteevaluationtemplatersp_value_ = new ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteEvaluationTemplateRsp_Value)
  return deleteevaluationtemplatersp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* Response::release_deleteevaluationtemplatersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteEvaluationTemplateRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* temp = deleteevaluationtemplatersp_value_;
  deleteevaluationtemplatersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deleteevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::DeleteEvaluationTemplateRsp* deleteevaluationtemplatersp_value) {
  delete deleteevaluationtemplatersp_value_;
  deleteevaluationtemplatersp_value_ = deleteevaluationtemplatersp_value;
  if (deleteevaluationtemplatersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteEvaluationTemplateRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyEvaluationTemplateRsp ModifyEvaluationTemplateRsp_Value = 920;
inline bool Response::has_modifyevaluationtemplatersp_value() const {
  return this != internal_default_instance() && modifyevaluationtemplatersp_value_ != NULL;
}
inline void Response::clear_modifyevaluationtemplatersp_value() {
  if (GetArenaNoVirtual() == NULL && modifyevaluationtemplatersp_value_ != NULL) delete modifyevaluationtemplatersp_value_;
  modifyevaluationtemplatersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp& Response::modifyevaluationtemplatersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyEvaluationTemplateRsp_Value)
  return modifyevaluationtemplatersp_value_ != NULL ? *modifyevaluationtemplatersp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* Response::mutable_modifyevaluationtemplatersp_value() {
  
  if (modifyevaluationtemplatersp_value_ == NULL) {
    modifyevaluationtemplatersp_value_ = new ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyEvaluationTemplateRsp_Value)
  return modifyevaluationtemplatersp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* Response::release_modifyevaluationtemplatersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyEvaluationTemplateRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* temp = modifyevaluationtemplatersp_value_;
  modifyevaluationtemplatersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::ModifyEvaluationTemplateRsp* modifyevaluationtemplatersp_value) {
  delete modifyevaluationtemplatersp_value_;
  modifyevaluationtemplatersp_value_ = modifyevaluationtemplatersp_value;
  if (modifyevaluationtemplatersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyEvaluationTemplateRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllEvaluationTemplateRsp QueryAllEvaluationTemplateRsp_Value = 930;
inline bool Response::has_queryallevaluationtemplatersp_value() const {
  return this != internal_default_instance() && queryallevaluationtemplatersp_value_ != NULL;
}
inline void Response::clear_queryallevaluationtemplatersp_value() {
  if (GetArenaNoVirtual() == NULL && queryallevaluationtemplatersp_value_ != NULL) delete queryallevaluationtemplatersp_value_;
  queryallevaluationtemplatersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp& Response::queryallevaluationtemplatersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllEvaluationTemplateRsp_Value)
  return queryallevaluationtemplatersp_value_ != NULL ? *queryallevaluationtemplatersp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* Response::mutable_queryallevaluationtemplatersp_value() {
  
  if (queryallevaluationtemplatersp_value_ == NULL) {
    queryallevaluationtemplatersp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllEvaluationTemplateRsp_Value)
  return queryallevaluationtemplatersp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* Response::release_queryallevaluationtemplatersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllEvaluationTemplateRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* temp = queryallevaluationtemplatersp_value_;
  queryallevaluationtemplatersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallevaluationtemplatersp_value(::CustomerFlow::Interactive::Message::QueryAllEvaluationTemplateRsp* queryallevaluationtemplatersp_value) {
  delete queryallevaluationtemplatersp_value_;
  queryallevaluationtemplatersp_value_ = queryallevaluationtemplatersp_value;
  if (queryallevaluationtemplatersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllEvaluationTemplateRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddStoreEvaluationRsp AddStoreEvaluationRsp_Value = 950;
inline bool Response::has_addstoreevaluationrsp_value() const {
  return this != internal_default_instance() && addstoreevaluationrsp_value_ != NULL;
}
inline void Response::clear_addstoreevaluationrsp_value() {
  if (GetArenaNoVirtual() == NULL && addstoreevaluationrsp_value_ != NULL) delete addstoreevaluationrsp_value_;
  addstoreevaluationrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp& Response::addstoreevaluationrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddStoreEvaluationRsp_Value)
  return addstoreevaluationrsp_value_ != NULL ? *addstoreevaluationrsp_value_
                         : *::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* Response::mutable_addstoreevaluationrsp_value() {
  
  if (addstoreevaluationrsp_value_ == NULL) {
    addstoreevaluationrsp_value_ = new ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddStoreEvaluationRsp_Value)
  return addstoreevaluationrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* Response::release_addstoreevaluationrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddStoreEvaluationRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* temp = addstoreevaluationrsp_value_;
  addstoreevaluationrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addstoreevaluationrsp_value(::CustomerFlow::Interactive::Message::AddStoreEvaluationRsp* addstoreevaluationrsp_value) {
  delete addstoreevaluationrsp_value_;
  addstoreevaluationrsp_value_ = addstoreevaluationrsp_value;
  if (addstoreevaluationrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddStoreEvaluationRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteStoreEvaluationRsp DeleteStoreEvaluationRsp_Value = 960;
inline bool Response::has_deletestoreevaluationrsp_value() const {
  return this != internal_default_instance() && deletestoreevaluationrsp_value_ != NULL;
}
inline void Response::clear_deletestoreevaluationrsp_value() {
  if (GetArenaNoVirtual() == NULL && deletestoreevaluationrsp_value_ != NULL) delete deletestoreevaluationrsp_value_;
  deletestoreevaluationrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp& Response::deletestoreevaluationrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteStoreEvaluationRsp_Value)
  return deletestoreevaluationrsp_value_ != NULL ? *deletestoreevaluationrsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* Response::mutable_deletestoreevaluationrsp_value() {
  
  if (deletestoreevaluationrsp_value_ == NULL) {
    deletestoreevaluationrsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteStoreEvaluationRsp_Value)
  return deletestoreevaluationrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* Response::release_deletestoreevaluationrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteStoreEvaluationRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* temp = deletestoreevaluationrsp_value_;
  deletestoreevaluationrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletestoreevaluationrsp_value(::CustomerFlow::Interactive::Message::DeleteStoreEvaluationRsp* deletestoreevaluationrsp_value) {
  delete deletestoreevaluationrsp_value_;
  deletestoreevaluationrsp_value_ = deletestoreevaluationrsp_value;
  if (deletestoreevaluationrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteStoreEvaluationRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyStoreEvaluationRsp ModifyStoreEvaluationRsp_Value = 970;
inline bool Response::has_modifystoreevaluationrsp_value() const {
  return this != internal_default_instance() && modifystoreevaluationrsp_value_ != NULL;
}
inline void Response::clear_modifystoreevaluationrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifystoreevaluationrsp_value_ != NULL) delete modifystoreevaluationrsp_value_;
  modifystoreevaluationrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp& Response::modifystoreevaluationrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyStoreEvaluationRsp_Value)
  return modifystoreevaluationrsp_value_ != NULL ? *modifystoreevaluationrsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* Response::mutable_modifystoreevaluationrsp_value() {
  
  if (modifystoreevaluationrsp_value_ == NULL) {
    modifystoreevaluationrsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyStoreEvaluationRsp_Value)
  return modifystoreevaluationrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* Response::release_modifystoreevaluationrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyStoreEvaluationRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* temp = modifystoreevaluationrsp_value_;
  modifystoreevaluationrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifystoreevaluationrsp_value(::CustomerFlow::Interactive::Message::ModifyStoreEvaluationRsp* modifystoreevaluationrsp_value) {
  delete modifystoreevaluationrsp_value_;
  modifystoreevaluationrsp_value_ = modifystoreevaluationrsp_value;
  if (modifystoreevaluationrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyStoreEvaluationRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreEvaluationInfoRsp QueryStoreEvaluationInfoRsp_Value = 980;
inline bool Response::has_querystoreevaluationinforsp_value() const {
  return this != internal_default_instance() && querystoreevaluationinforsp_value_ != NULL;
}
inline void Response::clear_querystoreevaluationinforsp_value() {
  if (GetArenaNoVirtual() == NULL && querystoreevaluationinforsp_value_ != NULL) delete querystoreevaluationinforsp_value_;
  querystoreevaluationinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp& Response::querystoreevaluationinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryStoreEvaluationInfoRsp_Value)
  return querystoreevaluationinforsp_value_ != NULL ? *querystoreevaluationinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* Response::mutable_querystoreevaluationinforsp_value() {
  
  if (querystoreevaluationinforsp_value_ == NULL) {
    querystoreevaluationinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryStoreEvaluationInfoRsp_Value)
  return querystoreevaluationinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* Response::release_querystoreevaluationinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryStoreEvaluationInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* temp = querystoreevaluationinforsp_value_;
  querystoreevaluationinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querystoreevaluationinforsp_value(::CustomerFlow::Interactive::Message::QueryStoreEvaluationInfoRsp* querystoreevaluationinforsp_value) {
  delete querystoreevaluationinforsp_value_;
  querystoreevaluationinforsp_value_ = querystoreevaluationinforsp_value;
  if (querystoreevaluationinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryStoreEvaluationInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllStoreEvaluationRsp QueryAllStoreEvaluationRsp_Value = 990;
inline bool Response::has_queryallstoreevaluationrsp_value() const {
  return this != internal_default_instance() && queryallstoreevaluationrsp_value_ != NULL;
}
inline void Response::clear_queryallstoreevaluationrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallstoreevaluationrsp_value_ != NULL) delete queryallstoreevaluationrsp_value_;
  queryallstoreevaluationrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp& Response::queryallstoreevaluationrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllStoreEvaluationRsp_Value)
  return queryallstoreevaluationrsp_value_ != NULL ? *queryallstoreevaluationrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* Response::mutable_queryallstoreevaluationrsp_value() {
  
  if (queryallstoreevaluationrsp_value_ == NULL) {
    queryallstoreevaluationrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllStoreEvaluationRsp_Value)
  return queryallstoreevaluationrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* Response::release_queryallstoreevaluationrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllStoreEvaluationRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* temp = queryallstoreevaluationrsp_value_;
  queryallstoreevaluationrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallstoreevaluationrsp_value(::CustomerFlow::Interactive::Message::QueryAllStoreEvaluationRsp* queryallstoreevaluationrsp_value) {
  delete queryallstoreevaluationrsp_value_;
  queryallstoreevaluationrsp_value_ = queryallstoreevaluationrsp_value;
  if (queryallstoreevaluationrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllStoreEvaluationRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddRemotePatrolStoreRsp AddRemotePatrolStoreRsp_Value = 1000;
inline bool Response::has_addremotepatrolstorersp_value() const {
  return this != internal_default_instance() && addremotepatrolstorersp_value_ != NULL;
}
inline void Response::clear_addremotepatrolstorersp_value() {
  if (GetArenaNoVirtual() == NULL && addremotepatrolstorersp_value_ != NULL) delete addremotepatrolstorersp_value_;
  addremotepatrolstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp& Response::addremotepatrolstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddRemotePatrolStoreRsp_Value)
  return addremotepatrolstorersp_value_ != NULL ? *addremotepatrolstorersp_value_
                         : *::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* Response::mutable_addremotepatrolstorersp_value() {
  
  if (addremotepatrolstorersp_value_ == NULL) {
    addremotepatrolstorersp_value_ = new ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddRemotePatrolStoreRsp_Value)
  return addremotepatrolstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* Response::release_addremotepatrolstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddRemotePatrolStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* temp = addremotepatrolstorersp_value_;
  addremotepatrolstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::AddRemotePatrolStoreRsp* addremotepatrolstorersp_value) {
  delete addremotepatrolstorersp_value_;
  addremotepatrolstorersp_value_ = addremotepatrolstorersp_value;
  if (addremotepatrolstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddRemotePatrolStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteRemotePatrolStoreRsp DeleteRemotePatrolStoreRsp_Value = 1010;
inline bool Response::has_deleteremotepatrolstorersp_value() const {
  return this != internal_default_instance() && deleteremotepatrolstorersp_value_ != NULL;
}
inline void Response::clear_deleteremotepatrolstorersp_value() {
  if (GetArenaNoVirtual() == NULL && deleteremotepatrolstorersp_value_ != NULL) delete deleteremotepatrolstorersp_value_;
  deleteremotepatrolstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp& Response::deleteremotepatrolstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteRemotePatrolStoreRsp_Value)
  return deleteremotepatrolstorersp_value_ != NULL ? *deleteremotepatrolstorersp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* Response::mutable_deleteremotepatrolstorersp_value() {
  
  if (deleteremotepatrolstorersp_value_ == NULL) {
    deleteremotepatrolstorersp_value_ = new ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteRemotePatrolStoreRsp_Value)
  return deleteremotepatrolstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* Response::release_deleteremotepatrolstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteRemotePatrolStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* temp = deleteremotepatrolstorersp_value_;
  deleteremotepatrolstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deleteremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::DeleteRemotePatrolStoreRsp* deleteremotepatrolstorersp_value) {
  delete deleteremotepatrolstorersp_value_;
  deleteremotepatrolstorersp_value_ = deleteremotepatrolstorersp_value;
  if (deleteremotepatrolstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteRemotePatrolStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyRemotePatrolStoreRsp ModifyRemotePatrolStoreRsp_Value = 1020;
inline bool Response::has_modifyremotepatrolstorersp_value() const {
  return this != internal_default_instance() && modifyremotepatrolstorersp_value_ != NULL;
}
inline void Response::clear_modifyremotepatrolstorersp_value() {
  if (GetArenaNoVirtual() == NULL && modifyremotepatrolstorersp_value_ != NULL) delete modifyremotepatrolstorersp_value_;
  modifyremotepatrolstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp& Response::modifyremotepatrolstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyRemotePatrolStoreRsp_Value)
  return modifyremotepatrolstorersp_value_ != NULL ? *modifyremotepatrolstorersp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* Response::mutable_modifyremotepatrolstorersp_value() {
  
  if (modifyremotepatrolstorersp_value_ == NULL) {
    modifyremotepatrolstorersp_value_ = new ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyRemotePatrolStoreRsp_Value)
  return modifyremotepatrolstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* Response::release_modifyremotepatrolstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyRemotePatrolStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* temp = modifyremotepatrolstorersp_value_;
  modifyremotepatrolstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::ModifyRemotePatrolStoreRsp* modifyremotepatrolstorersp_value) {
  delete modifyremotepatrolstorersp_value_;
  modifyremotepatrolstorersp_value_ = modifyremotepatrolstorersp_value;
  if (modifyremotepatrolstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyRemotePatrolStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryRemotePatrolStoreInfoRsp QueryRemotePatrolStoreInfoRsp_Value = 1030;
inline bool Response::has_queryremotepatrolstoreinforsp_value() const {
  return this != internal_default_instance() && queryremotepatrolstoreinforsp_value_ != NULL;
}
inline void Response::clear_queryremotepatrolstoreinforsp_value() {
  if (GetArenaNoVirtual() == NULL && queryremotepatrolstoreinforsp_value_ != NULL) delete queryremotepatrolstoreinforsp_value_;
  queryremotepatrolstoreinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp& Response::queryremotepatrolstoreinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryRemotePatrolStoreInfoRsp_Value)
  return queryremotepatrolstoreinforsp_value_ != NULL ? *queryremotepatrolstoreinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* Response::mutable_queryremotepatrolstoreinforsp_value() {
  
  if (queryremotepatrolstoreinforsp_value_ == NULL) {
    queryremotepatrolstoreinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryRemotePatrolStoreInfoRsp_Value)
  return queryremotepatrolstoreinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* Response::release_queryremotepatrolstoreinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryRemotePatrolStoreInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* temp = queryremotepatrolstoreinforsp_value_;
  queryremotepatrolstoreinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryremotepatrolstoreinforsp_value(::CustomerFlow::Interactive::Message::QueryRemotePatrolStoreInfoRsp* queryremotepatrolstoreinforsp_value) {
  delete queryremotepatrolstoreinforsp_value_;
  queryremotepatrolstoreinforsp_value_ = queryremotepatrolstoreinforsp_value;
  if (queryremotepatrolstoreinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryRemotePatrolStoreInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllRemotePatrolStoreRsp QueryAllRemotePatrolStoreRsp_Value = 1040;
inline bool Response::has_queryallremotepatrolstorersp_value() const {
  return this != internal_default_instance() && queryallremotepatrolstorersp_value_ != NULL;
}
inline void Response::clear_queryallremotepatrolstorersp_value() {
  if (GetArenaNoVirtual() == NULL && queryallremotepatrolstorersp_value_ != NULL) delete queryallremotepatrolstorersp_value_;
  queryallremotepatrolstorersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp& Response::queryallremotepatrolstorersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllRemotePatrolStoreRsp_Value)
  return queryallremotepatrolstorersp_value_ != NULL ? *queryallremotepatrolstorersp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* Response::mutable_queryallremotepatrolstorersp_value() {
  
  if (queryallremotepatrolstorersp_value_ == NULL) {
    queryallremotepatrolstorersp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllRemotePatrolStoreRsp_Value)
  return queryallremotepatrolstorersp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* Response::release_queryallremotepatrolstorersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllRemotePatrolStoreRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* temp = queryallremotepatrolstorersp_value_;
  queryallremotepatrolstorersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallremotepatrolstorersp_value(::CustomerFlow::Interactive::Message::QueryAllRemotePatrolStoreRsp* queryallremotepatrolstorersp_value) {
  delete queryallremotepatrolstorersp_value_;
  queryallremotepatrolstorersp_value_ = queryallremotepatrolstorersp_value;
  if (queryallremotepatrolstorersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllRemotePatrolStoreRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddAreaRsp AddAreaRsp_Value = 1100;
inline bool Response::has_addarearsp_value() const {
  return this != internal_default_instance() && addarearsp_value_ != NULL;
}
inline void Response::clear_addarearsp_value() {
  if (GetArenaNoVirtual() == NULL && addarearsp_value_ != NULL) delete addarearsp_value_;
  addarearsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddAreaRsp& Response::addarearsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddAreaRsp_Value)
  return addarearsp_value_ != NULL ? *addarearsp_value_
                         : *::CustomerFlow::Interactive::Message::AddAreaRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddAreaRsp* Response::mutable_addarearsp_value() {
  
  if (addarearsp_value_ == NULL) {
    addarearsp_value_ = new ::CustomerFlow::Interactive::Message::AddAreaRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddAreaRsp_Value)
  return addarearsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddAreaRsp* Response::release_addarearsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddAreaRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddAreaRsp* temp = addarearsp_value_;
  addarearsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addarearsp_value(::CustomerFlow::Interactive::Message::AddAreaRsp* addarearsp_value) {
  delete addarearsp_value_;
  addarearsp_value_ = addarearsp_value;
  if (addarearsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddAreaRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteAreaRsp DeleteAreaRsp_Value = 1110;
inline bool Response::has_deletearearsp_value() const {
  return this != internal_default_instance() && deletearearsp_value_ != NULL;
}
inline void Response::clear_deletearearsp_value() {
  if (GetArenaNoVirtual() == NULL && deletearearsp_value_ != NULL) delete deletearearsp_value_;
  deletearearsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteAreaRsp& Response::deletearearsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteAreaRsp_Value)
  return deletearearsp_value_ != NULL ? *deletearearsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteAreaRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteAreaRsp* Response::mutable_deletearearsp_value() {
  
  if (deletearearsp_value_ == NULL) {
    deletearearsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteAreaRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteAreaRsp_Value)
  return deletearearsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteAreaRsp* Response::release_deletearearsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteAreaRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteAreaRsp* temp = deletearearsp_value_;
  deletearearsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletearearsp_value(::CustomerFlow::Interactive::Message::DeleteAreaRsp* deletearearsp_value) {
  delete deletearearsp_value_;
  deletearearsp_value_ = deletearearsp_value;
  if (deletearearsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteAreaRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyAreaRsp ModifyAreaRsp_Value = 1120;
inline bool Response::has_modifyarearsp_value() const {
  return this != internal_default_instance() && modifyarearsp_value_ != NULL;
}
inline void Response::clear_modifyarearsp_value() {
  if (GetArenaNoVirtual() == NULL && modifyarearsp_value_ != NULL) delete modifyarearsp_value_;
  modifyarearsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyAreaRsp& Response::modifyarearsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyAreaRsp_Value)
  return modifyarearsp_value_ != NULL ? *modifyarearsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyAreaRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyAreaRsp* Response::mutable_modifyarearsp_value() {
  
  if (modifyarearsp_value_ == NULL) {
    modifyarearsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyAreaRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyAreaRsp_Value)
  return modifyarearsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyAreaRsp* Response::release_modifyarearsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyAreaRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyAreaRsp* temp = modifyarearsp_value_;
  modifyarearsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyarearsp_value(::CustomerFlow::Interactive::Message::ModifyAreaRsp* modifyarearsp_value) {
  delete modifyarearsp_value_;
  modifyarearsp_value_ = modifyarearsp_value;
  if (modifyarearsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyAreaRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAreaInfoRsp QueryAreaInfoRsp_Value = 1130;
inline bool Response::has_queryareainforsp_value() const {
  return this != internal_default_instance() && queryareainforsp_value_ != NULL;
}
inline void Response::clear_queryareainforsp_value() {
  if (GetArenaNoVirtual() == NULL && queryareainforsp_value_ != NULL) delete queryareainforsp_value_;
  queryareainforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp& Response::queryareainforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAreaInfoRsp_Value)
  return queryareainforsp_value_ != NULL ? *queryareainforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAreaInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* Response::mutable_queryareainforsp_value() {
  
  if (queryareainforsp_value_ == NULL) {
    queryareainforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAreaInfoRsp_Value)
  return queryareainforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* Response::release_queryareainforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAreaInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* temp = queryareainforsp_value_;
  queryareainforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryareainforsp_value(::CustomerFlow::Interactive::Message::QueryAreaInfoRsp* queryareainforsp_value) {
  delete queryareainforsp_value_;
  queryareainforsp_value_ = queryareainforsp_value;
  if (queryareainforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAreaInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllAreaRsp QueryAllAreaRsp_Value = 1140;
inline bool Response::has_queryallarearsp_value() const {
  return this != internal_default_instance() && queryallarearsp_value_ != NULL;
}
inline void Response::clear_queryallarearsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallarearsp_value_ != NULL) delete queryallarearsp_value_;
  queryallarearsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllAreaRsp& Response::queryallarearsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllAreaRsp_Value)
  return queryallarearsp_value_ != NULL ? *queryallarearsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllAreaRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllAreaRsp* Response::mutable_queryallarearsp_value() {
  
  if (queryallarearsp_value_ == NULL) {
    queryallarearsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllAreaRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllAreaRsp_Value)
  return queryallarearsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllAreaRsp* Response::release_queryallarearsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllAreaRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllAreaRsp* temp = queryallarearsp_value_;
  queryallarearsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallarearsp_value(::CustomerFlow::Interactive::Message::QueryAllAreaRsp* queryallarearsp_value) {
  delete queryallarearsp_value_;
  queryallarearsp_value_ = queryallarearsp_value;
  if (queryallarearsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllAreaRsp_Value)
}

// .CustomerFlow.Interactive.Message.BindPushClientIDRsp BindPushClientIDRsp_Value = 1150;
inline bool Response::has_bindpushclientidrsp_value() const {
  return this != internal_default_instance() && bindpushclientidrsp_value_ != NULL;
}
inline void Response::clear_bindpushclientidrsp_value() {
  if (GetArenaNoVirtual() == NULL && bindpushclientidrsp_value_ != NULL) delete bindpushclientidrsp_value_;
  bindpushclientidrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::BindPushClientIDRsp& Response::bindpushclientidrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.BindPushClientIDRsp_Value)
  return bindpushclientidrsp_value_ != NULL ? *bindpushclientidrsp_value_
                         : *::CustomerFlow::Interactive::Message::BindPushClientIDRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::BindPushClientIDRsp* Response::mutable_bindpushclientidrsp_value() {
  
  if (bindpushclientidrsp_value_ == NULL) {
    bindpushclientidrsp_value_ = new ::CustomerFlow::Interactive::Message::BindPushClientIDRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.BindPushClientIDRsp_Value)
  return bindpushclientidrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::BindPushClientIDRsp* Response::release_bindpushclientidrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.BindPushClientIDRsp_Value)
  
  ::CustomerFlow::Interactive::Message::BindPushClientIDRsp* temp = bindpushclientidrsp_value_;
  bindpushclientidrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_bindpushclientidrsp_value(::CustomerFlow::Interactive::Message::BindPushClientIDRsp* bindpushclientidrsp_value) {
  delete bindpushclientidrsp_value_;
  bindpushclientidrsp_value_ = bindpushclientidrsp_value;
  if (bindpushclientidrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.BindPushClientIDRsp_Value)
}

// .CustomerFlow.Interactive.Message.UnbindPushClientIDRsp UnbindPushClientIDRsp_Value = 1160;
inline bool Response::has_unbindpushclientidrsp_value() const {
  return this != internal_default_instance() && unbindpushclientidrsp_value_ != NULL;
}
inline void Response::clear_unbindpushclientidrsp_value() {
  if (GetArenaNoVirtual() == NULL && unbindpushclientidrsp_value_ != NULL) delete unbindpushclientidrsp_value_;
  unbindpushclientidrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp& Response::unbindpushclientidrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.UnbindPushClientIDRsp_Value)
  return unbindpushclientidrsp_value_ != NULL ? *unbindpushclientidrsp_value_
                         : *::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* Response::mutable_unbindpushclientidrsp_value() {
  
  if (unbindpushclientidrsp_value_ == NULL) {
    unbindpushclientidrsp_value_ = new ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.UnbindPushClientIDRsp_Value)
  return unbindpushclientidrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* Response::release_unbindpushclientidrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.UnbindPushClientIDRsp_Value)
  
  ::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* temp = unbindpushclientidrsp_value_;
  unbindpushclientidrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_unbindpushclientidrsp_value(::CustomerFlow::Interactive::Message::UnbindPushClientIDRsp* unbindpushclientidrsp_value) {
  delete unbindpushclientidrsp_value_;
  unbindpushclientidrsp_value_ = unbindpushclientidrsp_value;
  if (unbindpushclientidrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.UnbindPushClientIDRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddStoreSensorRsp AddStoreSensorRsp_Value = 1200;
inline bool Response::has_addstoresensorrsp_value() const {
  return this != internal_default_instance() && addstoresensorrsp_value_ != NULL;
}
inline void Response::clear_addstoresensorrsp_value() {
  if (GetArenaNoVirtual() == NULL && addstoresensorrsp_value_ != NULL) delete addstoresensorrsp_value_;
  addstoresensorrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddStoreSensorRsp& Response::addstoresensorrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddStoreSensorRsp_Value)
  return addstoresensorrsp_value_ != NULL ? *addstoresensorrsp_value_
                         : *::CustomerFlow::Interactive::Message::AddStoreSensorRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddStoreSensorRsp* Response::mutable_addstoresensorrsp_value() {
  
  if (addstoresensorrsp_value_ == NULL) {
    addstoresensorrsp_value_ = new ::CustomerFlow::Interactive::Message::AddStoreSensorRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddStoreSensorRsp_Value)
  return addstoresensorrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddStoreSensorRsp* Response::release_addstoresensorrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddStoreSensorRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddStoreSensorRsp* temp = addstoresensorrsp_value_;
  addstoresensorrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addstoresensorrsp_value(::CustomerFlow::Interactive::Message::AddStoreSensorRsp* addstoresensorrsp_value) {
  delete addstoresensorrsp_value_;
  addstoresensorrsp_value_ = addstoresensorrsp_value;
  if (addstoresensorrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddStoreSensorRsp_Value)
}

// .CustomerFlow.Interactive.Message.DeleteStoreSensorRsp DeleteStoreSensorRsp_Value = 1210;
inline bool Response::has_deletestoresensorrsp_value() const {
  return this != internal_default_instance() && deletestoresensorrsp_value_ != NULL;
}
inline void Response::clear_deletestoresensorrsp_value() {
  if (GetArenaNoVirtual() == NULL && deletestoresensorrsp_value_ != NULL) delete deletestoresensorrsp_value_;
  deletestoresensorrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp& Response::deletestoresensorrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.DeleteStoreSensorRsp_Value)
  return deletestoresensorrsp_value_ != NULL ? *deletestoresensorrsp_value_
                         : *::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* Response::mutable_deletestoresensorrsp_value() {
  
  if (deletestoresensorrsp_value_ == NULL) {
    deletestoresensorrsp_value_ = new ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.DeleteStoreSensorRsp_Value)
  return deletestoresensorrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* Response::release_deletestoresensorrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.DeleteStoreSensorRsp_Value)
  
  ::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* temp = deletestoresensorrsp_value_;
  deletestoresensorrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_deletestoresensorrsp_value(::CustomerFlow::Interactive::Message::DeleteStoreSensorRsp* deletestoresensorrsp_value) {
  delete deletestoresensorrsp_value_;
  deletestoresensorrsp_value_ = deletestoresensorrsp_value;
  if (deletestoresensorrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.DeleteStoreSensorRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyStoreSensorRsp ModifyStoreSensorRsp_Value = 1220;
inline bool Response::has_modifystoresensorrsp_value() const {
  return this != internal_default_instance() && modifystoresensorrsp_value_ != NULL;
}
inline void Response::clear_modifystoresensorrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifystoresensorrsp_value_ != NULL) delete modifystoresensorrsp_value_;
  modifystoresensorrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp& Response::modifystoresensorrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyStoreSensorRsp_Value)
  return modifystoresensorrsp_value_ != NULL ? *modifystoresensorrsp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* Response::mutable_modifystoresensorrsp_value() {
  
  if (modifystoresensorrsp_value_ == NULL) {
    modifystoresensorrsp_value_ = new ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyStoreSensorRsp_Value)
  return modifystoresensorrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* Response::release_modifystoresensorrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyStoreSensorRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* temp = modifystoresensorrsp_value_;
  modifystoresensorrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifystoresensorrsp_value(::CustomerFlow::Interactive::Message::ModifyStoreSensorRsp* modifystoresensorrsp_value) {
  delete modifystoresensorrsp_value_;
  modifystoresensorrsp_value_ = modifystoresensorrsp_value;
  if (modifystoresensorrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyStoreSensorRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryStoreSensorInfoRsp QueryStoreSensorInfoRsp_Value = 1230;
inline bool Response::has_querystoresensorinforsp_value() const {
  return this != internal_default_instance() && querystoresensorinforsp_value_ != NULL;
}
inline void Response::clear_querystoresensorinforsp_value() {
  if (GetArenaNoVirtual() == NULL && querystoresensorinforsp_value_ != NULL) delete querystoresensorinforsp_value_;
  querystoresensorinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp& Response::querystoresensorinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryStoreSensorInfoRsp_Value)
  return querystoresensorinforsp_value_ != NULL ? *querystoresensorinforsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* Response::mutable_querystoresensorinforsp_value() {
  
  if (querystoresensorinforsp_value_ == NULL) {
    querystoresensorinforsp_value_ = new ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryStoreSensorInfoRsp_Value)
  return querystoresensorinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* Response::release_querystoresensorinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryStoreSensorInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* temp = querystoresensorinforsp_value_;
  querystoresensorinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querystoresensorinforsp_value(::CustomerFlow::Interactive::Message::QueryStoreSensorInfoRsp* querystoresensorinforsp_value) {
  delete querystoresensorinforsp_value_;
  querystoresensorinforsp_value_ = querystoresensorinforsp_value;
  if (querystoresensorinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryStoreSensorInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllStoreSensorRsp QueryAllStoreSensorRsp_Value = 1240;
inline bool Response::has_queryallstoresensorrsp_value() const {
  return this != internal_default_instance() && queryallstoresensorrsp_value_ != NULL;
}
inline void Response::clear_queryallstoresensorrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallstoresensorrsp_value_ != NULL) delete queryallstoresensorrsp_value_;
  queryallstoresensorrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp& Response::queryallstoresensorrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllStoreSensorRsp_Value)
  return queryallstoresensorrsp_value_ != NULL ? *queryallstoresensorrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* Response::mutable_queryallstoresensorrsp_value() {
  
  if (queryallstoresensorrsp_value_ == NULL) {
    queryallstoresensorrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllStoreSensorRsp_Value)
  return queryallstoresensorrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* Response::release_queryallstoresensorrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllStoreSensorRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* temp = queryallstoresensorrsp_value_;
  queryallstoresensorrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallstoresensorrsp_value(::CustomerFlow::Interactive::Message::QueryAllStoreSensorRsp* queryallstoresensorrsp_value) {
  delete queryallstoresensorrsp_value_;
  queryallstoresensorrsp_value_ = queryallstoresensorrsp_value;
  if (queryallstoresensorrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllStoreSensorRsp_Value)
}

// .CustomerFlow.Interactive.Message.ImportPOSDataRsp ImportPOSDataRsp_Value = 2000;
inline bool Response::has_importposdatarsp_value() const {
  return this != internal_default_instance() && importposdatarsp_value_ != NULL;
}
inline void Response::clear_importposdatarsp_value() {
  if (GetArenaNoVirtual() == NULL && importposdatarsp_value_ != NULL) delete importposdatarsp_value_;
  importposdatarsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ImportPOSDataRsp& Response::importposdatarsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ImportPOSDataRsp_Value)
  return importposdatarsp_value_ != NULL ? *importposdatarsp_value_
                         : *::CustomerFlow::Interactive::Message::ImportPOSDataRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ImportPOSDataRsp* Response::mutable_importposdatarsp_value() {
  
  if (importposdatarsp_value_ == NULL) {
    importposdatarsp_value_ = new ::CustomerFlow::Interactive::Message::ImportPOSDataRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ImportPOSDataRsp_Value)
  return importposdatarsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ImportPOSDataRsp* Response::release_importposdatarsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ImportPOSDataRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ImportPOSDataRsp* temp = importposdatarsp_value_;
  importposdatarsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_importposdatarsp_value(::CustomerFlow::Interactive::Message::ImportPOSDataRsp* importposdatarsp_value) {
  delete importposdatarsp_value_;
  importposdatarsp_value_ = importposdatarsp_value;
  if (importposdatarsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ImportPOSDataRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryCustomerFlowStatisticRsp QueryCustomerFlowStatisticRsp_Value = 2900;
inline bool Response::has_querycustomerflowstatisticrsp_value() const {
  return this != internal_default_instance() && querycustomerflowstatisticrsp_value_ != NULL;
}
inline void Response::clear_querycustomerflowstatisticrsp_value() {
  if (GetArenaNoVirtual() == NULL && querycustomerflowstatisticrsp_value_ != NULL) delete querycustomerflowstatisticrsp_value_;
  querycustomerflowstatisticrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp& Response::querycustomerflowstatisticrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryCustomerFlowStatisticRsp_Value)
  return querycustomerflowstatisticrsp_value_ != NULL ? *querycustomerflowstatisticrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* Response::mutable_querycustomerflowstatisticrsp_value() {
  
  if (querycustomerflowstatisticrsp_value_ == NULL) {
    querycustomerflowstatisticrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryCustomerFlowStatisticRsp_Value)
  return querycustomerflowstatisticrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* Response::release_querycustomerflowstatisticrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryCustomerFlowStatisticRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* temp = querycustomerflowstatisticrsp_value_;
  querycustomerflowstatisticrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querycustomerflowstatisticrsp_value(::CustomerFlow::Interactive::Message::QueryCustomerFlowStatisticRsp* querycustomerflowstatisticrsp_value) {
  delete querycustomerflowstatisticrsp_value_;
  querycustomerflowstatisticrsp_value_ = querycustomerflowstatisticrsp_value;
  if (querycustomerflowstatisticrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryCustomerFlowStatisticRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryPatrolResultReportRsp QueryPatrolResultReportRsp_Value = 3000;
inline bool Response::has_querypatrolresultreportrsp_value() const {
  return this != internal_default_instance() && querypatrolresultreportrsp_value_ != NULL;
}
inline void Response::clear_querypatrolresultreportrsp_value() {
  if (GetArenaNoVirtual() == NULL && querypatrolresultreportrsp_value_ != NULL) delete querypatrolresultreportrsp_value_;
  querypatrolresultreportrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp& Response::querypatrolresultreportrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryPatrolResultReportRsp_Value)
  return querypatrolresultreportrsp_value_ != NULL ? *querypatrolresultreportrsp_value_
                         : *::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* Response::mutable_querypatrolresultreportrsp_value() {
  
  if (querypatrolresultreportrsp_value_ == NULL) {
    querypatrolresultreportrsp_value_ = new ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryPatrolResultReportRsp_Value)
  return querypatrolresultreportrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* Response::release_querypatrolresultreportrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryPatrolResultReportRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* temp = querypatrolresultreportrsp_value_;
  querypatrolresultreportrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querypatrolresultreportrsp_value(::CustomerFlow::Interactive::Message::QueryPatrolResultReportRsp* querypatrolresultreportrsp_value) {
  delete querypatrolresultreportrsp_value_;
  querypatrolresultreportrsp_value_ = querypatrolresultreportrsp_value;
  if (querypatrolresultreportrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryPatrolResultReportRsp_Value)
}

// .CustomerFlow.Interactive.Message.ReportCustomerFlowDataRsp ReportCustomerFlowDataRsp_Value = 5000;
inline bool Response::has_reportcustomerflowdatarsp_value() const {
  return this != internal_default_instance() && reportcustomerflowdatarsp_value_ != NULL;
}
inline void Response::clear_reportcustomerflowdatarsp_value() {
  if (GetArenaNoVirtual() == NULL && reportcustomerflowdatarsp_value_ != NULL) delete reportcustomerflowdatarsp_value_;
  reportcustomerflowdatarsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp& Response::reportcustomerflowdatarsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ReportCustomerFlowDataRsp_Value)
  return reportcustomerflowdatarsp_value_ != NULL ? *reportcustomerflowdatarsp_value_
                         : *::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* Response::mutable_reportcustomerflowdatarsp_value() {
  
  if (reportcustomerflowdatarsp_value_ == NULL) {
    reportcustomerflowdatarsp_value_ = new ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ReportCustomerFlowDataRsp_Value)
  return reportcustomerflowdatarsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* Response::release_reportcustomerflowdatarsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ReportCustomerFlowDataRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* temp = reportcustomerflowdatarsp_value_;
  reportcustomerflowdatarsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_reportcustomerflowdatarsp_value(::CustomerFlow::Interactive::Message::ReportCustomerFlowDataRsp* reportcustomerflowdatarsp_value) {
  delete reportcustomerflowdatarsp_value_;
  reportcustomerflowdatarsp_value_ = reportcustomerflowdatarsp_value;
  if (reportcustomerflowdatarsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ReportCustomerFlowDataRsp_Value)
}

// .CustomerFlow.Interactive.Message.ReportSensorInfoRsp ReportSensorInfoRsp_Value = 5100;
inline bool Response::has_reportsensorinforsp_value() const {
  return this != internal_default_instance() && reportsensorinforsp_value_ != NULL;
}
inline void Response::clear_reportsensorinforsp_value() {
  if (GetArenaNoVirtual() == NULL && reportsensorinforsp_value_ != NULL) delete reportsensorinforsp_value_;
  reportsensorinforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp& Response::reportsensorinforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ReportSensorInfoRsp_Value)
  return reportsensorinforsp_value_ != NULL ? *reportsensorinforsp_value_
                         : *::CustomerFlow::Interactive::Message::ReportSensorInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* Response::mutable_reportsensorinforsp_value() {
  
  if (reportsensorinforsp_value_ == NULL) {
    reportsensorinforsp_value_ = new ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ReportSensorInfoRsp_Value)
  return reportsensorinforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* Response::release_reportsensorinforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ReportSensorInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* temp = reportsensorinforsp_value_;
  reportsensorinforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_reportsensorinforsp_value(::CustomerFlow::Interactive::Message::ReportSensorInfoRsp* reportsensorinforsp_value) {
  delete reportsensorinforsp_value_;
  reportsensorinforsp_value_ = reportsensorinforsp_value;
  if (reportsensorinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ReportSensorInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.ReportSensorAlarmInfoRsp ReportSensorAlarmInfoRsp_Value = 5110;
inline bool Response::has_reportsensoralarminforsp_value() const {
  return this != internal_default_instance() && reportsensoralarminforsp_value_ != NULL;
}
inline void Response::clear_reportsensoralarminforsp_value() {
  if (GetArenaNoVirtual() == NULL && reportsensoralarminforsp_value_ != NULL) delete reportsensoralarminforsp_value_;
  reportsensoralarminforsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp& Response::reportsensoralarminforsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ReportSensorAlarmInfoRsp_Value)
  return reportsensoralarminforsp_value_ != NULL ? *reportsensoralarminforsp_value_
                         : *::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* Response::mutable_reportsensoralarminforsp_value() {
  
  if (reportsensoralarminforsp_value_ == NULL) {
    reportsensoralarminforsp_value_ = new ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ReportSensorAlarmInfoRsp_Value)
  return reportsensoralarminforsp_value_;
}
inline ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* Response::release_reportsensoralarminforsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ReportSensorAlarmInfoRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* temp = reportsensoralarminforsp_value_;
  reportsensoralarminforsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_reportsensoralarminforsp_value(::CustomerFlow::Interactive::Message::ReportSensorAlarmInfoRsp* reportsensoralarminforsp_value) {
  delete reportsensoralarminforsp_value_;
  reportsensoralarminforsp_value_ = reportsensoralarminforsp_value;
  if (reportsensoralarminforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ReportSensorAlarmInfoRsp_Value)
}

// .CustomerFlow.Interactive.Message.QuerySensorAlarmThresholdRsp QuerySensorAlarmThresholdRsp_Value = 5120;
inline bool Response::has_querysensoralarmthresholdrsp_value() const {
  return this != internal_default_instance() && querysensoralarmthresholdrsp_value_ != NULL;
}
inline void Response::clear_querysensoralarmthresholdrsp_value() {
  if (GetArenaNoVirtual() == NULL && querysensoralarmthresholdrsp_value_ != NULL) delete querysensoralarmthresholdrsp_value_;
  querysensoralarmthresholdrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp& Response::querysensoralarmthresholdrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmThresholdRsp_Value)
  return querysensoralarmthresholdrsp_value_ != NULL ? *querysensoralarmthresholdrsp_value_
                         : *::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* Response::mutable_querysensoralarmthresholdrsp_value() {
  
  if (querysensoralarmthresholdrsp_value_ == NULL) {
    querysensoralarmthresholdrsp_value_ = new ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmThresholdRsp_Value)
  return querysensoralarmthresholdrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* Response::release_querysensoralarmthresholdrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmThresholdRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* temp = querysensoralarmthresholdrsp_value_;
  querysensoralarmthresholdrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querysensoralarmthresholdrsp_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmThresholdRsp* querysensoralarmthresholdrsp_value) {
  delete querysensoralarmthresholdrsp_value_;
  querysensoralarmthresholdrsp_value_ = querysensoralarmthresholdrsp_value;
  if (querysensoralarmthresholdrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmThresholdRsp_Value)
}

// .CustomerFlow.Interactive.Message.RemoveSensorRecordsRsp RemoveSensorRecordsRsp_Value = 5130;
inline bool Response::has_removesensorrecordsrsp_value() const {
  return this != internal_default_instance() && removesensorrecordsrsp_value_ != NULL;
}
inline void Response::clear_removesensorrecordsrsp_value() {
  if (GetArenaNoVirtual() == NULL && removesensorrecordsrsp_value_ != NULL) delete removesensorrecordsrsp_value_;
  removesensorrecordsrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp& Response::removesensorrecordsrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.RemoveSensorRecordsRsp_Value)
  return removesensorrecordsrsp_value_ != NULL ? *removesensorrecordsrsp_value_
                         : *::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* Response::mutable_removesensorrecordsrsp_value() {
  
  if (removesensorrecordsrsp_value_ == NULL) {
    removesensorrecordsrsp_value_ = new ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.RemoveSensorRecordsRsp_Value)
  return removesensorrecordsrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* Response::release_removesensorrecordsrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.RemoveSensorRecordsRsp_Value)
  
  ::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* temp = removesensorrecordsrsp_value_;
  removesensorrecordsrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_removesensorrecordsrsp_value(::CustomerFlow::Interactive::Message::RemoveSensorRecordsRsp* removesensorrecordsrsp_value) {
  delete removesensorrecordsrsp_value_;
  removesensorrecordsrsp_value_ = removesensorrecordsrsp_value;
  if (removesensorrecordsrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.RemoveSensorRecordsRsp_Value)
}

// .CustomerFlow.Interactive.Message.RemoveSensorAlarmRecordsRsp RemoveSensorAlarmRecordsRsp_Value = 5140;
inline bool Response::has_removesensoralarmrecordsrsp_value() const {
  return this != internal_default_instance() && removesensoralarmrecordsrsp_value_ != NULL;
}
inline void Response::clear_removesensoralarmrecordsrsp_value() {
  if (GetArenaNoVirtual() == NULL && removesensoralarmrecordsrsp_value_ != NULL) delete removesensoralarmrecordsrsp_value_;
  removesensoralarmrecordsrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp& Response::removesensoralarmrecordsrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.RemoveSensorAlarmRecordsRsp_Value)
  return removesensoralarmrecordsrsp_value_ != NULL ? *removesensoralarmrecordsrsp_value_
                         : *::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* Response::mutable_removesensoralarmrecordsrsp_value() {
  
  if (removesensoralarmrecordsrsp_value_ == NULL) {
    removesensoralarmrecordsrsp_value_ = new ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.RemoveSensorAlarmRecordsRsp_Value)
  return removesensoralarmrecordsrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* Response::release_removesensoralarmrecordsrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.RemoveSensorAlarmRecordsRsp_Value)
  
  ::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* temp = removesensoralarmrecordsrsp_value_;
  removesensoralarmrecordsrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_removesensoralarmrecordsrsp_value(::CustomerFlow::Interactive::Message::RemoveSensorAlarmRecordsRsp* removesensoralarmrecordsrsp_value) {
  delete removesensoralarmrecordsrsp_value_;
  removesensoralarmrecordsrsp_value_ = removesensoralarmrecordsrsp_value;
  if (removesensoralarmrecordsrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.RemoveSensorAlarmRecordsRsp_Value)
}

// .CustomerFlow.Interactive.Message.QuerySensorRecordsRsp QuerySensorRecordsRsp_Value = 5150;
inline bool Response::has_querysensorrecordsrsp_value() const {
  return this != internal_default_instance() && querysensorrecordsrsp_value_ != NULL;
}
inline void Response::clear_querysensorrecordsrsp_value() {
  if (GetArenaNoVirtual() == NULL && querysensorrecordsrsp_value_ != NULL) delete querysensorrecordsrsp_value_;
  querysensorrecordsrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp& Response::querysensorrecordsrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QuerySensorRecordsRsp_Value)
  return querysensorrecordsrsp_value_ != NULL ? *querysensorrecordsrsp_value_
                         : *::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* Response::mutable_querysensorrecordsrsp_value() {
  
  if (querysensorrecordsrsp_value_ == NULL) {
    querysensorrecordsrsp_value_ = new ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QuerySensorRecordsRsp_Value)
  return querysensorrecordsrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* Response::release_querysensorrecordsrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QuerySensorRecordsRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* temp = querysensorrecordsrsp_value_;
  querysensorrecordsrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querysensorrecordsrsp_value(::CustomerFlow::Interactive::Message::QuerySensorRecordsRsp* querysensorrecordsrsp_value) {
  delete querysensorrecordsrsp_value_;
  querysensorrecordsrsp_value_ = querysensorrecordsrsp_value;
  if (querysensorrecordsrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QuerySensorRecordsRsp_Value)
}

// .CustomerFlow.Interactive.Message.QuerySensorAlarmRecordsRsp QuerySensorAlarmRecordsRsp_Value = 5160;
inline bool Response::has_querysensoralarmrecordsrsp_value() const {
  return this != internal_default_instance() && querysensoralarmrecordsrsp_value_ != NULL;
}
inline void Response::clear_querysensoralarmrecordsrsp_value() {
  if (GetArenaNoVirtual() == NULL && querysensoralarmrecordsrsp_value_ != NULL) delete querysensoralarmrecordsrsp_value_;
  querysensoralarmrecordsrsp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp& Response::querysensoralarmrecordsrsp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmRecordsRsp_Value)
  return querysensoralarmrecordsrsp_value_ != NULL ? *querysensoralarmrecordsrsp_value_
                         : *::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* Response::mutable_querysensoralarmrecordsrsp_value() {
  
  if (querysensoralarmrecordsrsp_value_ == NULL) {
    querysensoralarmrecordsrsp_value_ = new ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmRecordsRsp_Value)
  return querysensoralarmrecordsrsp_value_;
}
inline ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* Response::release_querysensoralarmrecordsrsp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmRecordsRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* temp = querysensoralarmrecordsrsp_value_;
  querysensoralarmrecordsrsp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_querysensoralarmrecordsrsp_value(::CustomerFlow::Interactive::Message::QuerySensorAlarmRecordsRsp* querysensoralarmrecordsrsp_value) {
  delete querysensoralarmrecordsrsp_value_;
  querysensoralarmrecordsrsp_value_ = querysensoralarmrecordsrsp_value;
  if (querysensoralarmrecordsrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QuerySensorAlarmRecordsRsp_Value)
}

// .CustomerFlow.Interactive.Message.AddRoleRsp AddRoleRsp_Value = 5170;
inline bool Response::has_addrolersp_value() const {
  return this != internal_default_instance() && addrolersp_value_ != NULL;
}
inline void Response::clear_addrolersp_value() {
  if (GetArenaNoVirtual() == NULL && addrolersp_value_ != NULL) delete addrolersp_value_;
  addrolersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::AddRoleRsp& Response::addrolersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.AddRoleRsp_Value)
  return addrolersp_value_ != NULL ? *addrolersp_value_
                         : *::CustomerFlow::Interactive::Message::AddRoleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::AddRoleRsp* Response::mutable_addrolersp_value() {
  
  if (addrolersp_value_ == NULL) {
    addrolersp_value_ = new ::CustomerFlow::Interactive::Message::AddRoleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.AddRoleRsp_Value)
  return addrolersp_value_;
}
inline ::CustomerFlow::Interactive::Message::AddRoleRsp* Response::release_addrolersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.AddRoleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::AddRoleRsp* temp = addrolersp_value_;
  addrolersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_addrolersp_value(::CustomerFlow::Interactive::Message::AddRoleRsp* addrolersp_value) {
  delete addrolersp_value_;
  addrolersp_value_ = addrolersp_value;
  if (addrolersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.AddRoleRsp_Value)
}

// .CustomerFlow.Interactive.Message.RemoveRoleRsp RemoveRoleRsp_Value = 5180;
inline bool Response::has_removerolersp_value() const {
  return this != internal_default_instance() && removerolersp_value_ != NULL;
}
inline void Response::clear_removerolersp_value() {
  if (GetArenaNoVirtual() == NULL && removerolersp_value_ != NULL) delete removerolersp_value_;
  removerolersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::RemoveRoleRsp& Response::removerolersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.RemoveRoleRsp_Value)
  return removerolersp_value_ != NULL ? *removerolersp_value_
                         : *::CustomerFlow::Interactive::Message::RemoveRoleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::RemoveRoleRsp* Response::mutable_removerolersp_value() {
  
  if (removerolersp_value_ == NULL) {
    removerolersp_value_ = new ::CustomerFlow::Interactive::Message::RemoveRoleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.RemoveRoleRsp_Value)
  return removerolersp_value_;
}
inline ::CustomerFlow::Interactive::Message::RemoveRoleRsp* Response::release_removerolersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.RemoveRoleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::RemoveRoleRsp* temp = removerolersp_value_;
  removerolersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_removerolersp_value(::CustomerFlow::Interactive::Message::RemoveRoleRsp* removerolersp_value) {
  delete removerolersp_value_;
  removerolersp_value_ = removerolersp_value;
  if (removerolersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.RemoveRoleRsp_Value)
}

// .CustomerFlow.Interactive.Message.ModifyRoleRsp ModifyRoleRsp_Value = 5190;
inline bool Response::has_modifyrolersp_value() const {
  return this != internal_default_instance() && modifyrolersp_value_ != NULL;
}
inline void Response::clear_modifyrolersp_value() {
  if (GetArenaNoVirtual() == NULL && modifyrolersp_value_ != NULL) delete modifyrolersp_value_;
  modifyrolersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::ModifyRoleRsp& Response::modifyrolersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.ModifyRoleRsp_Value)
  return modifyrolersp_value_ != NULL ? *modifyrolersp_value_
                         : *::CustomerFlow::Interactive::Message::ModifyRoleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::ModifyRoleRsp* Response::mutable_modifyrolersp_value() {
  
  if (modifyrolersp_value_ == NULL) {
    modifyrolersp_value_ = new ::CustomerFlow::Interactive::Message::ModifyRoleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.ModifyRoleRsp_Value)
  return modifyrolersp_value_;
}
inline ::CustomerFlow::Interactive::Message::ModifyRoleRsp* Response::release_modifyrolersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.ModifyRoleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::ModifyRoleRsp* temp = modifyrolersp_value_;
  modifyrolersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_modifyrolersp_value(::CustomerFlow::Interactive::Message::ModifyRoleRsp* modifyrolersp_value) {
  delete modifyrolersp_value_;
  modifyrolersp_value_ = modifyrolersp_value;
  if (modifyrolersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.ModifyRoleRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryRoleRsp QueryRoleRsp_Value = 5200;
inline bool Response::has_queryrolersp_value() const {
  return this != internal_default_instance() && queryrolersp_value_ != NULL;
}
inline void Response::clear_queryrolersp_value() {
  if (GetArenaNoVirtual() == NULL && queryrolersp_value_ != NULL) delete queryrolersp_value_;
  queryrolersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryRoleRsp& Response::queryrolersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryRoleRsp_Value)
  return queryrolersp_value_ != NULL ? *queryrolersp_value_
                         : *::CustomerFlow::Interactive::Message::QueryRoleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryRoleRsp* Response::mutable_queryrolersp_value() {
  
  if (queryrolersp_value_ == NULL) {
    queryrolersp_value_ = new ::CustomerFlow::Interactive::Message::QueryRoleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryRoleRsp_Value)
  return queryrolersp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryRoleRsp* Response::release_queryrolersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryRoleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryRoleRsp* temp = queryrolersp_value_;
  queryrolersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryrolersp_value(::CustomerFlow::Interactive::Message::QueryRoleRsp* queryrolersp_value) {
  delete queryrolersp_value_;
  queryrolersp_value_ = queryrolersp_value;
  if (queryrolersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryRoleRsp_Value)
}

// .CustomerFlow.Interactive.Message.QueryAllRoleRsp QueryAllRoleRsp_Value = 5210;
inline bool Response::has_queryallrolersp_value() const {
  return this != internal_default_instance() && queryallrolersp_value_ != NULL;
}
inline void Response::clear_queryallrolersp_value() {
  if (GetArenaNoVirtual() == NULL && queryallrolersp_value_ != NULL) delete queryallrolersp_value_;
  queryallrolersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::QueryAllRoleRsp& Response::queryallrolersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.QueryAllRoleRsp_Value)
  return queryallrolersp_value_ != NULL ? *queryallrolersp_value_
                         : *::CustomerFlow::Interactive::Message::QueryAllRoleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::QueryAllRoleRsp* Response::mutable_queryallrolersp_value() {
  
  if (queryallrolersp_value_ == NULL) {
    queryallrolersp_value_ = new ::CustomerFlow::Interactive::Message::QueryAllRoleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.QueryAllRoleRsp_Value)
  return queryallrolersp_value_;
}
inline ::CustomerFlow::Interactive::Message::QueryAllRoleRsp* Response::release_queryallrolersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.QueryAllRoleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::QueryAllRoleRsp* temp = queryallrolersp_value_;
  queryallrolersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_queryallrolersp_value(::CustomerFlow::Interactive::Message::QueryAllRoleRsp* queryallrolersp_value) {
  delete queryallrolersp_value_;
  queryallrolersp_value_ = queryallrolersp_value;
  if (queryallrolersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.QueryAllRoleRsp_Value)
}

// .CustomerFlow.Interactive.Message.UserBindRoleRsp UserBindRoleRsp_Value = 5220;
inline bool Response::has_userbindrolersp_value() const {
  return this != internal_default_instance() && userbindrolersp_value_ != NULL;
}
inline void Response::clear_userbindrolersp_value() {
  if (GetArenaNoVirtual() == NULL && userbindrolersp_value_ != NULL) delete userbindrolersp_value_;
  userbindrolersp_value_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::UserBindRoleRsp& Response::userbindrolersp_value() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.Response.UserBindRoleRsp_Value)
  return userbindrolersp_value_ != NULL ? *userbindrolersp_value_
                         : *::CustomerFlow::Interactive::Message::UserBindRoleRsp::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::UserBindRoleRsp* Response::mutable_userbindrolersp_value() {
  
  if (userbindrolersp_value_ == NULL) {
    userbindrolersp_value_ = new ::CustomerFlow::Interactive::Message::UserBindRoleRsp;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.Response.UserBindRoleRsp_Value)
  return userbindrolersp_value_;
}
inline ::CustomerFlow::Interactive::Message::UserBindRoleRsp* Response::release_userbindrolersp_value() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.Response.UserBindRoleRsp_Value)
  
  ::CustomerFlow::Interactive::Message::UserBindRoleRsp* temp = userbindrolersp_value_;
  userbindrolersp_value_ = NULL;
  return temp;
}
inline void Response::set_allocated_userbindrolersp_value(::CustomerFlow::Interactive::Message::UserBindRoleRsp* userbindrolersp_value) {
  delete userbindrolersp_value_;
  userbindrolersp_value_ = userbindrolersp_value;
  if (userbindrolersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.Response.UserBindRoleRsp_Value)
}

// -------------------------------------------------------------------

// CustomerFlowMessage

// .CustomerFlow.Interactive.Message.CustomerFlowMsgType type = 1;
inline void CustomerFlowMessage::clear_type() {
  type_ = 0;
}
inline ::CustomerFlow::Interactive::Message::CustomerFlowMsgType CustomerFlowMessage::type() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowMessage.type)
  return static_cast< ::CustomerFlow::Interactive::Message::CustomerFlowMsgType >(type_);
}
inline void CustomerFlowMessage::set_type(::CustomerFlow::Interactive::Message::CustomerFlowMsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.CustomerFlowMessage.type)
}

// uint64 uiMsgSeq = 2;
inline void CustomerFlowMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CustomerFlowMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowMessage.uiMsgSeq)
  return uimsgseq_;
}
inline void CustomerFlowMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.CustomerFlowMessage.uiMsgSeq)
}

// string strSID = 3;
inline void CustomerFlowMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomerFlowMessage::strsid() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
  return strsid_.GetNoArena();
}
inline void CustomerFlowMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
}
#if LANG_CXX11
inline void CustomerFlowMessage::set_strsid(::std::string&& value) {
  
  strsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
}
#endif
inline void CustomerFlowMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
}
inline void CustomerFlowMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
}
inline ::std::string* CustomerFlowMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomerFlowMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomerFlowMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.CustomerFlowMessage.strSID)
}

// .CustomerFlow.Interactive.Message.Request reqValue = 4;
inline bool CustomerFlowMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
inline void CustomerFlowMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Request& CustomerFlowMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowMessage.reqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::CustomerFlow::Interactive::Message::Request::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Request* CustomerFlowMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::CustomerFlow::Interactive::Message::Request;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.CustomerFlowMessage.reqValue)
  return reqvalue_;
}
inline ::CustomerFlow::Interactive::Message::Request* CustomerFlowMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.CustomerFlowMessage.reqValue)
  
  ::CustomerFlow::Interactive::Message::Request* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
inline void CustomerFlowMessage::set_allocated_reqvalue(::CustomerFlow::Interactive::Message::Request* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.CustomerFlowMessage.reqValue)
}

// .CustomerFlow.Interactive.Message.Response rspValue = 5;
inline bool CustomerFlowMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
inline void CustomerFlowMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
inline const ::CustomerFlow::Interactive::Message::Response& CustomerFlowMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:CustomerFlow.Interactive.Message.CustomerFlowMessage.rspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::CustomerFlow::Interactive::Message::Response::internal_default_instance();
}
inline ::CustomerFlow::Interactive::Message::Response* CustomerFlowMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::CustomerFlow::Interactive::Message::Response;
  }
  // @@protoc_insertion_point(field_mutable:CustomerFlow.Interactive.Message.CustomerFlowMessage.rspValue)
  return rspvalue_;
}
inline ::CustomerFlow::Interactive::Message::Response* CustomerFlowMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:CustomerFlow.Interactive.Message.CustomerFlowMessage.rspValue)
  
  ::CustomerFlow::Interactive::Message::Response* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
inline void CustomerFlowMessage::set_allocated_rspvalue(::CustomerFlow::Interactive::Message::Response* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CustomerFlow.Interactive.Message.CustomerFlowMessage.rspValue)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Message
}  // namespace Interactive
}  // namespace CustomerFlow

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CustomerFlow::Interactive::Message::CustomerFlowMsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CustomerFlow::Interactive::Message::CustomerFlowMsgType>() {
  return ::CustomerFlow::Interactive::Message::CustomerFlowMsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InteractiveProtocolCustomerFlow_2eproto__INCLUDED
