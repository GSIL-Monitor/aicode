/////////////////////////////////////////////////
//作者：尹宾
//日期：2018-03-21
//内容：完成协议框架定义。
//版本：1.0.1
//
/////////////////////////////////////////////////

///////////////传输协议格式介绍//////////////////
//    __   ____   ____   ______   ____   ______   ______
//   |RG|,|长度|,|源端|,|目标端|,|类型|,|协议体|,|校验和|
//   ￣￣  ￣￣   ￣￣   ￣￣￣   ￣￣   ￣￣￣   ￣￣￣   
//长度：  该值为“源端,目标端,类型,协议体,校验和”的字节数，不包括长度字段后面的逗号。
//源端：  该值为消息传输投递的源头，代表发送消息自身实体，可以唯一表示源端。
//目标端：该值为消息传输投递的目标，代表接收消息实体，一般都需要实现约定好。
//类型：  该值为消息的具体业务类型，目前该值填写0.
//协议体：该值为业务协议的具体内容，就是下面采用protobuffer协议序列化后形成的字节缓冲区，支持Base64编码。
//校验和：该值为“源端,目标端,类型, 协议体”的crc16计算得出的值。
/////////////////////////////////////////////////

///////////////部署形式介绍////////////////////////////////////////////////////////////
//        客户端（源端不为0）<=====
//                                |||   
//        客户端（源端不为0）<=============>转发服务器<=============>客户端（源端为0）
//                                |||
//        客户端（源端不为0）<=====
////////////////////////////////////////////////////////////////////////////////////////


///////////////源端不为0的客户端，对应的源端值获取方法////////////////
//传输客户端在发起链接时，需要首先与服务器进行一次交互通信，以便获取当前这次链接的会话ID来进行通信，具体解析步骤如下：
//  1：客户端发起链接，按照前述的“传输协议格式”，源端为客户端ID，目标端为0，类型为0，协议体内容如下，来发送消息到服务端。
//     {"ID":"XXX","PWD":"XXX"} 注意：目前该内容服务器段暂未使用，所以客户端可以填写任意值。
//  2：客户端接受响应报文，Decode64处理之后，获得一个json格式字符串，在root节点处解析Key值为UUID的Value，该值就是这次传输
//     链接的会话ID值。
//  3：后续客户端在这次链接中进行消息发送，包装传输协议格式时，“源端”这个值就是会话ID值。
//  这种客户端一般都是与转发服务器进行短连接操作，在呼叫场景中，这种客户端就代表呼叫设备
/////////////////////////////////////////////////

//////////////源端为0的客户端，对应的源端值获取方法////////////////
//这种类型的客户端对应的源端值，可以设置为0即可。
//这种客户端需要首先向转发服务器进行注册，注册消息为：RG,11,CMS,0,0,0,0  转发服务器会响应同样的消息进行回复，表示注册成功
//这种客户端代表用户操作的CMS界面程序，需要与转发服务器维持长连接，所以需要周期性握手。

/////////////握手协议///////////////////////////
//不论源端是否为0，当需要与转发服务器维持长连接，那么就需要进行周期握手（周期时长要根据具体配置，建议为5秒）。
//握手消息为 RG,9,0,0,0,0,0 ，转发服务器会响应同样的消息进行回复，表示握手成功
//周期性发送该消息即可维持长连接，否则，超时后被转发服务器主动断开。
//



可以使用172.20.120.22，端口6990，来调试。
